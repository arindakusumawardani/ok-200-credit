[{"D:\\LAT. FINAL PROJECT\\final\\final\\src\\index.js":"1","D:\\LAT. FINAL PROJECT\\final\\final\\src\\App.js":"2","D:\\LAT. FINAL PROJECT\\final\\final\\src\\reportWebVitals.js":"3","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\routes.js":"4","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\store.js":"5","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\SignIn.js":"6","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\AccountList.js":"7","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\SignUp.js":"8","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\EditAccount.js":"9","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\DetailCustomer.js":"10","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\TransactionDetail.js":"11","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\report\\ReportList.js":"12","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\reasonUse\\ReasonForm.js":"13","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\reasonUse\\ReasonUse.js":"14","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\listTransactionByStaff\\ListTransactionByStaff.js":"15","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\report\\reportByStaff\\ListReportByStaff.js":"16","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\profile\\EditPassword.js":"17","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\profile\\EditProfile.js":"18","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\role\\RoleMenu.js":"19","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\role\\RoleList.js":"20","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js":"21","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\loginAction.js":"22","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\Error\\index.js":"23","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\index.js":"24","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\index.js":"25","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionList\\index.js":"26","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionForm\\index.js":"27","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\customerForm\\index.js":"28","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomer\\index.js":"29","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\index.js":"30","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\Header.js":"31","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\AccountRow.js":"32","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\signupAction.js":"33","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\Menu.js":"34","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\Footer.js":"35","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\roleAction.js":"36","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\customerAction.js":"37","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\Containers\\Container.js":"38","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\DropdownList\\DropdownList.js":"39","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomerByStaff\\RowList.js":"40","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\role\\RoleRow.js":"41","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\reasonUse\\ReasonRow.js":"42","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\constants\\actions.js":"43","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\userAction.js":"44","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\reportAction.js":"45","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\report\\reportByStaff\\Row.js":"46","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\transactionAction.js":"47","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\listTransactionByStaff\\Row.js":"48","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\needAction.js":"49","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\report\\ReportRow.js":"50","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\approvalAction.js":"51","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\Buttons\\index.js":"52","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\Error\\Error.js":"53","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\customerReducer.js":"54","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\transactionReducer.js":"55","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\loginReducer.js":"56","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\signupReducer.js":"57","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\approvalReducer.js":"58","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\reportReducer.js":"59","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\roleReducer.js":"60","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\needReducer.js":"61","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\userReducer.js":"62","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\customerSaga.js":"63","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\loginSaga.js":"64","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\signupSaga.js":"65","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\transactionSaga.js":"66","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\reportSaga.js":"67","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\needSaga.js":"68","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\userSaga.js":"69","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\approvalSaga.js":"70","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\roleSaga.js":"71","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"72","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionList\\TransactionList.js":"73","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\customerForm\\CustomerForm.js":"74","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomer\\ListCustomer.js":"75","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\Home.js":"76","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\pagination.js":"77","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\Buttons\\Buttons.js":"78","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\api.js":"79","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"80","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomer\\RowCustomer.js":"81","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\totalSaga.js":"82","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\totalReducer.js":"83","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\totalAction.js":"84"},{"size":569,"mtime":1617204161321,"results":"85","hashOfConfig":"86"},{"size":891,"mtime":1617204161274,"results":"87","hashOfConfig":"86"},{"size":375,"mtime":1617204161352,"results":"88","hashOfConfig":"86"},{"size":4309,"mtime":1617204161313,"results":"89","hashOfConfig":"86"},{"size":349,"mtime":1617204161320,"results":"90","hashOfConfig":"86"},{"size":7790,"mtime":1617249786079,"results":"91","hashOfConfig":"86"},{"size":8181,"mtime":1617250710444,"results":"92","hashOfConfig":"86"},{"size":23090,"mtime":1617204161326,"results":"93","hashOfConfig":"86"},{"size":15710,"mtime":1617204161325,"results":"94","hashOfConfig":"86"},{"size":8552,"mtime":1617204161329,"results":"95","hashOfConfig":"86"},{"size":18566,"mtime":1617204161347,"results":"96","hashOfConfig":"86"},{"size":10902,"mtime":1617253387273,"results":"97","hashOfConfig":"86"},{"size":8140,"mtime":1617204161339,"results":"98","hashOfConfig":"86"},{"size":7677,"mtime":1617250646334,"results":"99","hashOfConfig":"86"},{"size":7992,"mtime":1617248068932,"results":"100","hashOfConfig":"86"},{"size":9197,"mtime":1617204161343,"results":"101","hashOfConfig":"86"},{"size":15314,"mtime":1617204161338,"results":"102","hashOfConfig":"86"},{"size":12245,"mtime":1617204161338,"results":"103","hashOfConfig":"86"},{"size":19438,"mtime":1617204161346,"results":"104","hashOfConfig":"86"},{"size":7587,"mtime":1617250508892,"results":"105","hashOfConfig":"86"},{"size":7974,"mtime":1617248021427,"results":"106","hashOfConfig":"86"},{"size":194,"mtime":1617204161276,"results":"107","hashOfConfig":"86"},{"size":33,"mtime":1617204161323,"results":"108","hashOfConfig":"86"},{"size":2492,"mtime":1617252531546,"results":"109","hashOfConfig":"86"},{"size":2385,"mtime":1617252531534,"results":"110","hashOfConfig":"86"},{"size":41,"mtime":1617204161352,"results":"111","hashOfConfig":"86"},{"size":41,"mtime":1617204161350,"results":"112","hashOfConfig":"86"},{"size":38,"mtime":1617204161330,"results":"113","hashOfConfig":"86"},{"size":38,"mtime":1617204161331,"results":"114","hashOfConfig":"86"},{"size":1054,"mtime":1617204161299,"results":"115","hashOfConfig":"86"},{"size":4515,"mtime":1617204161298,"results":"116","hashOfConfig":"86"},{"size":854,"mtime":1617204161324,"results":"117","hashOfConfig":"86"},{"size":744,"mtime":1617204161278,"results":"118","hashOfConfig":"86"},{"size":6452,"mtime":1617204161299,"results":"119","hashOfConfig":"86"},{"size":286,"mtime":1617204161298,"results":"120","hashOfConfig":"86"},{"size":757,"mtime":1617204161277,"results":"121","hashOfConfig":"86"},{"size":720,"mtime":1617204161275,"results":"122","hashOfConfig":"86"},{"size":495,"mtime":1617204161295,"results":"123","hashOfConfig":"86"},{"size":822,"mtime":1617204161296,"results":"124","hashOfConfig":"86"},{"size":1147,"mtime":1617204161332,"results":"125","hashOfConfig":"86"},{"size":575,"mtime":1617204161346,"results":"126","hashOfConfig":"86"},{"size":580,"mtime":1617204161340,"results":"127","hashOfConfig":"86"},{"size":8259,"mtime":1617252430347,"results":"128","hashOfConfig":"86"},{"size":347,"mtime":1617204161278,"results":"129","hashOfConfig":"86"},{"size":276,"mtime":1617204161276,"results":"130","hashOfConfig":"86"},{"size":2638,"mtime":1617204161344,"results":"131","hashOfConfig":"86"},{"size":828,"mtime":1617204161278,"results":"132","hashOfConfig":"86"},{"size":1084,"mtime":1617204161348,"results":"133","hashOfConfig":"86"},{"size":890,"mtime":1617204161276,"results":"134","hashOfConfig":"86"},{"size":3274,"mtime":1617244901819,"results":"135","hashOfConfig":"86"},{"size":1355,"mtime":1617214106060,"results":"136","hashOfConfig":"86"},{"size":42,"mtime":1617204161294,"results":"137","hashOfConfig":"86"},{"size":1419,"mtime":1617204161323,"results":"138","hashOfConfig":"86"},{"size":4815,"mtime":1617204161309,"results":"139","hashOfConfig":"86"},{"size":5471,"mtime":1617206151617,"results":"140","hashOfConfig":"86"},{"size":898,"mtime":1617204161310,"results":"141","hashOfConfig":"86"},{"size":3686,"mtime":1617204161312,"results":"142","hashOfConfig":"86"},{"size":6020,"mtime":1617214106021,"results":"143","hashOfConfig":"86"},{"size":2732,"mtime":1617204161311,"results":"144","hashOfConfig":"86"},{"size":4141,"mtime":1617204161312,"results":"145","hashOfConfig":"86"},{"size":4811,"mtime":1617204161311,"results":"146","hashOfConfig":"86"},{"size":1115,"mtime":1617204161313,"results":"147","hashOfConfig":"86"},{"size":3376,"mtime":1617204161314,"results":"148","hashOfConfig":"86"},{"size":802,"mtime":1617204161316,"results":"149","hashOfConfig":"86"},{"size":3220,"mtime":1617204161319,"results":"150","hashOfConfig":"86"},{"size":4256,"mtime":1617204161319,"results":"151","hashOfConfig":"86"},{"size":2137,"mtime":1617204161318,"results":"152","hashOfConfig":"86"},{"size":3818,"mtime":1617204161316,"results":"153","hashOfConfig":"86"},{"size":903,"mtime":1617204161320,"results":"154","hashOfConfig":"86"},{"size":5504,"mtime":1617218908441,"results":"155","hashOfConfig":"86"},{"size":3526,"mtime":1617204161318,"results":"156","hashOfConfig":"86"},{"size":23829,"mtime":1617204161350,"results":"157","hashOfConfig":"86"},{"size":7818,"mtime":1617250893298,"results":"158","hashOfConfig":"86"},{"size":24667,"mtime":1617204161329,"results":"159","hashOfConfig":"86"},{"size":9648,"mtime":1617250982602,"results":"160","hashOfConfig":"86"},{"size":7502,"mtime":1617248696550,"results":"161","hashOfConfig":"86"},{"size":482,"mtime":1617204161317,"results":"162","hashOfConfig":"86"},{"size":3724,"mtime":1617204161294,"results":"163","hashOfConfig":"86"},{"size":661,"mtime":1617204161307,"results":"164","hashOfConfig":"86"},{"size":1477,"mtime":1617204161351,"results":"165","hashOfConfig":"86"},{"size":1176,"mtime":1617204161331,"results":"166","hashOfConfig":"86"},{"size":689,"mtime":1617206151574,"results":"167","hashOfConfig":"86"},{"size":965,"mtime":1617208308325,"results":"168","hashOfConfig":"86"},{"size":148,"mtime":1617206151474,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"nvg07a",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"172"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"172"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"172"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"172"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"172"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"172"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"172"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"218","usedDeprecatedRules":"172"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"172"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"172"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"172"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"172"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"172"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"172"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"172"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"172"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"172"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"172"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"172"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"172"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"172"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"172"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"172"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"172"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"172"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"172"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"D:\\LAT. FINAL PROJECT\\final\\final\\src\\index.js",[],["369","370"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\App.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\reportWebVitals.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\routes.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\store.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\SignIn.js",["371"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\AccountList.js",["372","373","374","375","376","377","378"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\SignUp.js",["379","380","381","382","383","384","385","386","387","388","389","390"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope, faKey,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./login.css\"\r\nimport {Spinner, Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\r\nimport {findAccountByIdAction, saveAccountAction} from \"../../actions/signupAction\";\r\nimport {connect} from \"react-redux\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../Error\";\r\nimport {findAllRoleAction} from \"../../actions/roleAction\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\n\r\nconst SignUp = ({saveDispatch, error, saveAccount, account, isLoading, findAccountByIdAction, roles, findAllRoleAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [photo, setPhoto] = useState({\r\n        profilePicture: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        username: \"\",\r\n        fullName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        profilePicture: \"\",\r\n        role: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    const onReload = () => {\r\n        findAllRoleAction()\r\n    }\r\n    useEffect(onReload, [findAllRoleAction])\r\n\r\n    useEffect(() => {\r\n        findAllRoleAction()\r\n    }, [findAllRoleAction])\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            findAccountByIdAction(id)\r\n        }\r\n        console.log(\"\")\r\n    }, [id, findAccountByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id && account) {\r\n            setData({...account})\r\n        }\r\n    }, [account])\r\n    console.log(\"ini id\", id)\r\n\r\n    // console.log(\"this account\", model)\r\n    // useEffect(() => {\r\n    //     if (id !== data.id) {\r\n    //         findAccountByIdAction(id);\r\n    //         setData(account)\r\n    //     }\r\n    //     console.log(\"AKUN\", account)\r\n    //     console.log(\"DATA\", data.id)\r\n    //     console.log(data)\r\n    // }, [account])\r\n\r\n    useEffect(() => {\r\n        if (saveAccount) {\r\n            swal(\"Register Success\", \"\", \"success\")\r\n            history.push('/master')\r\n        }\r\n        if (error) {\r\n            swal(\"Register error\", `${error.message}`, \"error\")\r\n        }\r\n    }, [saveAccount, history, error])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto({...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name]: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleRoles = (e) => {\r\n        setData({\r\n            ...data,\r\n            role: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n        saveDispatch(data)\r\n        swal(\"Save Success!\", \"\", \"success\");\r\n\r\n        console.log(\"submit\" , data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/master\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/master\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_Updated_resume_re_q1or} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Account</h1>\r\n\r\n                                                                        {!isLoading ?\r\n                                                                            <Form onSubmit={handleSubmit}>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faUserCircle}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.fullName || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"fullName\"\r\n                                                                                            placeholder=\"Full Name\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faUser}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data.username || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"username\"\r\n                                                                                            placeholder=\"Username\"\r\n                                                                                            minLength={4}\r\n                                                                                            maxLength={10}\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faEnvelope}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data.email || \"\"}\r\n                                                                                            type=\"email\"\r\n                                                                                            name=\"email\"\r\n                                                                                            placeholder=\"Email Address\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n                                                                                    {\r\n                                                                                        window.location.pathname != \"/register\" ?\r\n                                                                                            <div\r\n                                                                                                className=\"input-group col-lg-12 mb-4\">\r\n                                                                                                <div\r\n                                                                                                    className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faKey}/>\r\n                                                                                            </span>\r\n                                                                                                </div>\r\n                                                                                                <input\r\n                                                                                                    required\r\n                                                                                                    onChange={handleChange}\r\n                                                                                                    value={data.password || \"\"}\r\n                                                                                                    type=\"password\"\r\n                                                                                                    name=\"password\"\r\n                                                                                                    placeholder=\"Input new password\"\r\n                                                                                                    className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                            </div>\r\n: <> </>\r\n                                                                                    }\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n\r\n                                                                                        <div>\r\n                                                                                            <Col sm={15}>\r\n                                                                                                <select\r\n                                                                                                    style={{width:\"35vw\", height:\"calc(1.5em + .75rem + 2px)\",\r\n                                                                                                        borderRadius:\"0.5vw\", outlineColor:\"#ced4da\"}}\r\n                                                                                                    onChange={e => setData({\r\n                                                                                                        ...data,\r\n                                                                                                        role: e.target.value\r\n                                                                                                    })}>\r\n                                                                                                    <option selected disabled hidden>Choose\r\n                                                                                                        here\r\n                                                                                                    </option>\r\n                                                                                                    {roles?.list?.map((e, i) => (\r\n                                                                                                        <option key={i} value={e.name}\r\n                                                                                                                data={e}\r\n                                                                                                                selected={e.id == data?.id || false}>{e.name}</option>\r\n                                                                                                    ))}\r\n                                                                                                </select>\r\n                                                                                            </Col>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n\r\n                                                                                    {/*<div*/}\r\n                                                                                    {/*    className=\"input-group col-lg-12 mb-4\">*/}\r\n                                                                                    {/*    <FormGroup>*/}\r\n                                                                                    {/*        <Label for=\"profilePicture\"*/}\r\n                                                                                    {/*               sm={4}>Profile*/}\r\n                                                                                    {/*            Photo</Label>*/}\r\n                                                                                    {/*        <Col sm={12}>*/}\r\n                                                                                    {/*            <Input*/}\r\n                                                                                    {/*                type=\"file\"*/}\r\n                                                                                    {/*                name=\"profilePicture\"*/}\r\n                                                                                    {/*                onChange={handlePhoto}*/}\r\n                                                                                    {/*                accept=\"image/jpeg, image/png\"/>*/}\r\n                                                                                    {/*        </Col>*/}\r\n                                                                                    {/*    </FormGroup>*/}\r\n                                                                                    {/*</div>*/}\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                                                                            <span className=\"font-weight-bold\"\r\n                                                                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n                                                                            :\r\n                                                                            <div>\r\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                            </div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        account: state.findAccountByIdReducer.data,\r\n        saveAccount: state.saveAccountReducer.data,\r\n        error: state.saveAccountReducer.error,\r\n        isLoading: state.findAccountByIdReducer.isLoading || state.saveAccountReducer.isLoading,\r\n        update: state.updateAccountReducer,\r\n        roles: state.findAllRoleReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDispatch: saveAccountAction,\r\n    findAccountByIdAction,\r\n    findAllRoleAction\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    mapDispatchToProps)(SignUp);","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\EditAccount.js",["391"],"import Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport undraw_profile from \"../../assets/images/undraw_profile.svg\";\r\nimport {Button, Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope, faKey, faUser, faUserCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport Error from \"../Error\";\r\nimport React from \"react\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\n\r\n\r\nconst EditAccount = () => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/master\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_profile} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Edit Account</h1>\r\n\r\n\r\n                                                                        <Form>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUserCircle}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        type=\"text\"\r\n                                                                                        name=\"fullName\"\r\n                                                                                        placeholder=\"Full Name\"\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                </div>\r\n\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        type=\"text\"\r\n                                                                                        name=\"username\"\r\n                                                                                        placeholder=\"Username\"\r\n                                                                                        minLength={4}\r\n                                                                                        maxLength={10}\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        type=\"email\"\r\n                                                                                        name=\"email\"\r\n                                                                                        placeholder=\"Email Address\"\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                                                                <span\r\n                                                                                    className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                    <FontAwesomeIcon icon={faKey}/>\r\n                                                                                </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        type=\"password\"\r\n                                                                                        name=\"password\"\r\n                                                                                        placeholder=\"Password\"\r\n                                                                                        minLength={4}\r\n                                                                                        maxLength={10}\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\"\r\n                                                                                    style={{width: \"120vh !important\"}}>\r\n\r\n                                                                                    <DropdownList\r\n                                                                                        style={{height:\"200vh\"}}\r\n                                                                                        data={[\r\n                                                                                            {\r\n                                                                                                value: \"STAFF\",\r\n                                                                                                label: \"STAFF\"\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                value: \"SUPERVISOR\",\r\n                                                                                                label: \"SUPERVISOR\"\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        placeholder=\"Select Role\"\r\n\r\n                                                                                    />\r\n                                                                                </div>\r\n\r\n                                                                                {/*<div*/}\r\n                                                                                {/*    className=\"input-group col-lg-12 mb-4\">*/}\r\n                                                                                {/*    <FormGroup>*/}\r\n                                                                                {/*        <Label for=\"profilePicture\"*/}\r\n                                                                                {/*               sm={4}>Profile*/}\r\n                                                                                {/*            Photo</Label>*/}\r\n                                                                                {/*        <Col sm={12}>*/}\r\n                                                                                {/*            <Input*/}\r\n                                                                                {/*                type=\"file\"*/}\r\n                                                                                {/*                name=\"profilePicture\"*/}\r\n                                                                                {/*                onChange={handlePhoto}*/}\r\n                                                                                {/*                accept=\"image/jpeg, image/png\"/>*/}\r\n                                                                                {/*        </Col>*/}\r\n                                                                                {/*    </FormGroup>*/}\r\n                                                                                {/*</div>*/}\r\n\r\n                                                                                <div\r\n                                                                                    className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                    <Button\r\n                                                                                        style={{background: \"#e42256\"}}\r\n                                                                                        block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>UPDATE</span>\r\n                                                                                    </Button>\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n                                                                        </Form>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default EditAccount","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\DetailCustomer.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405"],"import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {findCustomerByIdAction} from \"../../actions/customerAction\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHandshake, faIdCard, faMailBulk, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\n\r\nfunction CustomerDetail({isLoading, customer, findCustomerByIdAction}) {\r\n\r\n    let {id} = useParams()\r\n    const {data, setData} = useState({\r\n        name : \"\"\r\n    })\r\n    useEffect(() => {\r\n        findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id > 0)\r\n            findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"inputCustomer\") == \"true\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Detail Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-header border-0\">\r\n                                                            {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                            <div className=\"card-tools\">\r\n                                                                {/*<a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                                {/*    <i className=\"fas fa-pencil-alt\" />*/}\r\n                                                                {/*</a>*/}\r\n                                                                <a href=\"/staff/customer\" className=\"btn btn-tool btn-sm\">\r\n                                                                    <i className=\"fas fa-arrow-left\" />\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"card-body table-responsive p-0\">\r\n                                                            <table className=\"table table-borderless table-valign-middle\">\r\n                                                                <tbody style={{textAlign: \"left\"}}>\r\n                                                                <tr>\r\n                                                                    <td>Name</td>\r\n                                                                    <td>{customer.name}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Address</td>\r\n                                                                    <td>{customer.address}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Email</td>\r\n                                                                    <td>{customer.email}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>ID Card</td>\r\n                                                                    <td>{customer.idNumber}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Employee Type</td>\r\n                                                                    <td>{customer.employeeType}</td>\r\n                                                                </tr>\r\n                                                                {customer.employeeType == \"CONTRACT\"\r\n                                                                &&\r\n                                                                    <>\r\n                                                                        <tr>\r\n                                                                            <td>Contract Length</td>\r\n                                                                            <td>{customer.contractLength}</td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Contract Start</td>\r\n                                                                            <td>{customer.contractStart}</td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Contract End</td>\r\n                                                                            <td>{customer.contractEnd}</td>\r\n                                                                        </tr>\r\n                                                                    </>\r\n                                                                }\r\n                                                                        <tr>\r\n                                                                            <td>ID Card Photo</td>\r\n                                                                            <td><img src={customer.idPhoto} width={100}/></td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Profile Photo</td>\r\n                                                                            <td><img src={customer.profilePhoto} width={100}/></td>\r\n                                                                        </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                    // </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.findCustomerByIdReducer.loading || state.saveCustomerReducer.loading,\r\n        customer: state.findCustomerByIdReducer.data || [],\r\n    }\r\n}\r\n\r\n//findById ambil dari action\r\nconst mapDispatchToProps = {findCustomerByIdAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetail)","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\TransactionDetail.js",["406","407","408","409","410","411","412","413","414","415","416","417","418"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useParams, useHistory, Redirect} from 'react-router-dom'\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheck, faCheckCircle, faCross, faSave, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport NumberFormat from \"react-number-format\"\r\nimport {Button} from \"reactstrap\";\r\nimport {\r\n    findByIdApprovalAction,\r\n    findByIdApprovalSubmitterAction,\r\n    saveApprovalAction\r\n} from \"../../actions/approvalAction\";\r\nimport Error from \"../Error\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nfunction TransactionDetail({findByIdDispatch, transaction, isLoading, saveApprovalAction, savedApprove, findByIdApprovalSubmitterAction, transactionSubmitter, error }) {\r\n\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({})\r\n    const [approval, setApproval] = useState({\r\n        id: null,\r\n        approve: null\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    // const handleApproval = () => {\r\n    //     saveApprovalAction({\r\n    //         transaction: data?.transaction?.id,\r\n    //         approve: true\r\n    //     })\r\n    //     history.push('/report')\r\n    //     // console.log(\"handle\", )\r\n    // }\r\n\r\n    const handleApproval = () => {\r\n        setApproval({\r\n            id: data?.transaction?.id,\r\n            approve: true\r\n        })\r\n\r\n        saveApprovalAction({\r\n            id: data.id,\r\n            approve: {\r\n                approve: true\r\n            }\r\n        })\r\n        console.log(approval)\r\n        history.push('/report')\r\n        swal(\"Approve!\", \"Transaction has been approved!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleReject = () => {\r\n        setApproval({\r\n            id: data?.transaction?.id,\r\n            approve: false\r\n        })\r\n\r\n        saveApprovalAction({\r\n            id: data.id,\r\n            approve: {\r\n                approve: false\r\n            }\r\n        })\r\n        console.log(approval)\r\n        history.push('/report')\r\n        swal(\"Reject!\", \"Transaction has been rejected!\", \"success\");\r\n    }\r\n    //\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault()\r\n    //     saveApprovalAction(approval)\r\n    //\r\n    //     console.log(\"handleSubmit\", approval)\r\n    // }\r\n\r\n    useEffect(() => {\r\n        if (savedApprove) {\r\n            history.push('/report')\r\n            console.log(\"useeffect\", savedApprove)\r\n        }\r\n    }, [savedApprove])\r\n\r\n    useEffect(() => {\r\n        if (id && transaction) {\r\n            console.log(\"ini data detail\", transaction)\r\n            setData({...transaction})\r\n        } else if (id && transactionSubmitter) {\r\n            console.log(\"ini data detail submiter\", transactionSubmitter)\r\n            setData({...transactionSubmitter})\r\n        }\r\n    }, [transaction, transactionSubmitter])\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            if (localStorage.getItem('readAllTransaction') == \"true\") {\r\n                findByIdDispatch(id)\r\n                console.log(\"readALL\", findByIdDispatch)\r\n            } else if (localStorage.getItem('inputTransaction') == \"true\"){\r\n                findByIdApprovalSubmitterAction(id)\r\n                console.log(\"inputTransaction\", findByIdApprovalSubmitterAction)\r\n            }\r\n        }\r\n    }, [id, findByIdDispatch, findByIdApprovalSubmitterAction])\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/report\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"inputTransaction\") == \"true\" || localStorage.getItem(\"readAllTransaction\") == \"true\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Detail Transaction</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            {/*<a href=\"/transaction/form\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                            {/*    <i className=\"fas fa-pencil-alt\"/>*/}\r\n                                                            {/*</a>*/}\r\n                                                            {localStorage.getItem(\"inputTransaction\") == \"true\" ?\r\n                                                            <a href=\"/staff/transaction\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>:\r\n                                                                <a href=\"/transaction\" className=\"btn btn-tool btn-sm\">\r\n                                                                    <i className=\"fas fa-arrow-left\"/>\r\n                                                                </a>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n\r\n                                                            <tr>\r\n                                                                <td>Name</td>\r\n                                                                    <td>{data?.transaction?.customer?.name}</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Employee Type</td>\r\n                                                                    <td>{data?.transaction?.customer?.employeeType}</td>\r\n                                                            </tr>\r\n                                                            {data?.transaction?.customer?.employeeType == \"CONTRACT\"\r\n                                                            &&\r\n                                                            <>\r\n                                                                <tr>\r\n                                                                    <td>Contract Start</td>\r\n                                                                        <td>{data?.transaction?.customer?.contractStart}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Contract Length</td>\r\n                                                                        <td>{data?.transaction?.customer?.contractLength}</td>\r\n                                                                        </tr>\r\n                                                            </>}\r\n                                                            <tr>\r\n                                                                <td>Income</td>\r\n                                                                    <td><NumberFormat value={data?.transaction?.income}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Outcome</td>\r\n                                                                    <td><NumberFormat value={data?.transaction?.outcome}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Loan</td>\r\n                                                                    <td><NumberFormat value={data?.transaction?.loan}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Tenor</td>\r\n                                                                    <td>{data?.transaction?.tenor} month</td>\r\n                                                                    </tr>\r\n                                                            <tr>\r\n                                                                <td>Interest Rate</td>\r\n                                                                    <td>{data?.transaction?.interestRate} %</td>\r\n                                                                    </tr>\r\n                                                            <tr>\r\n                                                                <td>Principal</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.mainLoan}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Interest</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.interest}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Installment</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.installment}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Installment Total</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.installmentTotal}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            {localStorage.getItem(\"approveTransaction\") == \"true\" &&\r\n                                                                <>\r\n                                                                    {console.log(\"dataaa masuk\", data?.transaction)}\r\n                                                            <tr>\r\n                                                                <td>Credit ratio</td>\r\n                                                                <td>{data?.transaction?.creditRatio} %</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Finance Criteria</td>\r\n                                                                <td>{data?.transaction?.financeCriteria ?\r\n                                                                    \"PASS\" : \"NOT PASS\"\r\n                                                                }</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Employee Criteria</td>\r\n                                                                <td>{data?.transaction?.employeeCriteria ?\r\n                                                                    \"PASS\" : \"NOT PASS\"\r\n                                                                }</td>\r\n                                                            </tr>\r\n                                                            </>}\r\n                                                            <tr>\r\n                                                                <td>Notes</td>\r\n                                                                <td>{data?.transaction?.notes}</td>\r\n                                                            </tr>\r\n                                                            {localStorage.getItem(\"approveTransaction\") == \"true\" &&\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <Button style={{background: \"#e42256\"}}\r\n                                                                            onClick={handleApproval}>\r\n                                                                        <FontAwesomeIcon icon={faCheckCircle}/>\r\n                                                                        Approve\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <Button style={{background: \"#e42256\"}}\r\n                                                                            onClick={handleReject}>\r\n                                                                        <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                                                        Reject\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                            </tr>}\r\n\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.findApprovalByIdReducer.isLoading || state.saveApprovalReducer.isLoading || state.findApprovalSubmitterByIdReducer.isLoading,\r\n        transaction: state.findApprovalByIdReducer.data,\r\n        savedApprove: state.saveApprovalReducer.data,\r\n        transactionSubmitter: state.findApprovalSubmitterByIdReducer.data,\r\n        error: state.findApprovalByIdReducer.error || state.saveApprovalReducer.error || state.findApprovalSubmitterByIdReducer.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findByIdDispatch: findByIdApprovalAction, findByIdApprovalSubmitterAction,\r\n    saveApprovalAction\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDetail)","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\report\\ReportList.js",["419","420","421"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\reasonUse\\ReasonForm.js",["422","423"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {Button, Form, FormGroup, Input, Label, Col} from \"reactstrap\";\r\nimport {findNeedByIdAction, saveNeedAction, updateNeedAction} from \"../../actions/needAction\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ReasonForm = ({saveNeedAction, saveNeedType, error, isLoading, needType, findNeedByIdAction, update, updateNeedAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [data, setData] = useState({})\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            findNeedByIdAction(id)\r\n        }\r\n    }, [id, findNeedByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id && needType) {\r\n            setData({...needType})\r\n        }\r\n    }, [needType])\r\n\r\n    useEffect(() => {\r\n        if (saveNeedType) {\r\n            swal(\"Add Loan Purpose Success\", \"\", \"success\")\r\n            history.push('/need')\r\n        }\r\n        if (error) {\r\n            swal(\"Sorry data already exist\", '', \"error\")\r\n        }\r\n        console.log(\"error\", error)\r\n    }, [saveNeedType, history, error])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n        console.log(\"handlechange\", data)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (id) {\r\n            updateNeedAction(id, data)\r\n        } else {\r\n            saveNeedAction(data)\r\n        }\r\n        swal(\"Save Success!\", \"\", \"success\");\r\n        console.log(\"handlesubmit\", data)\r\n        history.push('/need')\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/need\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Need Type</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                {!isLoading ?\r\n                                                                    <Form onSubmit={(e) => handleSubmit(e)}>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"type\" sm={3}\r\n                                                                                   style={{textAlign: \"left\"}}>Need\r\n                                                                                Type</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.type || ''}\r\n                                                                                    type=\"text\"\r\n                                                                                    name=\"type\"\r\n                                                                                    placeholder=\"input need type\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup check row>\r\n                                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                                    Submit\r\n                                                                                </Button> {' '}\r\n                                                                                <Button href=\"/need\"\r\n                                                                                        style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon\r\n                                                                                        icon={faArrowLeft}/>\r\n                                                                                    Cancel\r\n                                                                                </Button>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                    </Form> :\r\n                                                                    <div>Loading...</div>\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Footer/>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        saveNeedType: state.saveNeedReducer.data,\r\n        error: state.saveNeedReducer.error,\r\n        isLoading: state.saveNeedReducer.isLoading || state.findNeedTypeByIdReducer.isLoading,\r\n        needType: state.findNeedTypeByIdReducer.data,\r\n        update: state.updateNeedTypeReducer.data\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveNeedAction,\r\n    updateNeedAction,\r\n    findNeedByIdAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonForm)","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\reasonUse\\ReasonUse.js",["424","425","426"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\listTransactionByStaff\\ListTransactionByStaff.js",["427","428","429","430","431","432","433","434"],"import {ButtonGroup, Button, Container, Table, Spinner} from \"reactstrap\";\r\nimport Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Row from \"../../transaction/listTransactionByStaff/Row\";\r\nimport {PaginationButton} from \"../../../components/Buttons\";\r\nimport Error from \"../../Error\";\r\nimport Footer from \"../../../components/dashboard/Footer\";\r\n\r\nfunction TransactionListByStaff({\r\n                             isLoading,\r\n                             transactions,\r\n                             error,\r\n                             findAllTransactionAction,\r\n    size, total, currentPage\r\n                         }) {\r\n\r\n    const [transaction, setTransaction] = useState([])\r\n    const [pageParam, setPageParam] = useState(0)\r\n    const [sizeParam, setSizeParam] = useState(50)\r\n\r\n    const totalPage = Math.ceil(total/size)\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [pageParam, sizeParam])\r\n\r\n    console.log(\"SIZE\", sizeParam)\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(transaction) {\r\n            setTransaction(transactions)\r\n        }\r\n    }, [transactions])\r\n\r\n    const onReload = () => {\r\n        findAllTransactionAction(\r\n            {page: pageParam, size: sizeParam}\r\n        );\r\n    };\r\n\r\n    const handleLimit = (limit) => {\r\n        setSizeParam(limit)\r\n        setPageParam(0)\r\n    }\r\n\r\n    useEffect(onReload, [findAllTransactionAction, pageParam, sizeParam])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"inputTransaction\")  == \"true\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">List Transaction</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        <div className=\"card-tools\">\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <TableScrollbar rows={10}>\r\n                                                            <table className=\"table table-striped table-bordered table-align-middle\">\r\n                                                                <thead\r\n                                                                    style={{textAlign: \"left\", background: \"#FCE051\"}}>\r\n                                                                <tr>\r\n                                                                    <th>No</th>\r\n                                                                    <th>Name</th>\r\n                                                                    <th>Employee Type</th>\r\n                                                                    <th>Loan Amount</th>\r\n                                                                    <th>Tenor</th>\r\n                                                                    <th>Interest Rate</th>\r\n                                                                    <th>Pending Approval</th>\r\n                                                                </tr>\r\n                                                                </thead>\r\n                                                                <tbody style={{textAlign: \"left\"}}>\r\n                                                                {\r\n                                                                    !isLoading ?\r\n                                                                        transactions.map((e, i) => {\r\n                                                                            return (\r\n                                                                                <Row key={i} data={e}\r\n                                                                                     number={(pageParam * sizeParam) + 1 + i}/>\r\n                                                                            )\r\n                                                                        }) :\r\n                                                                        <tr>\r\n                                                                            <div>\r\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                            </div>\r\n                                                                        </tr>\r\n                                                                }\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br/>\r\n                                        <PaginationButton\r\n                                            currentPage = {currentPage}\r\n                                            setPage={setPageParam}\r\n                                            totalPage={totalPage}\r\n                                            handleLimit={handleLimit}\r\n                                            size={sizeParam}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </Containers>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllTransactionByStaff.error,\r\n        transactions: state.findAllTransactionByStaff.data || [],\r\n        isLoading: state.findAllTransactionByStaff.isLoading,\r\n        size: state.findAllTransactionByStaff.pagination.size,\r\n        total: state.findAllTransactionByStaff.pagination.total,\r\n        currentPage: state.findAllTransactionByStaff.pagination.page\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllTransactionAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionListByStaff);","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\report\\reportByStaff\\ListReportByStaff.js",["435","436","437","438","439","440","441"],"import Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport Row from \"./Row\";\r\nimport Footer from \"../../../components/dashboard/Footer\";\r\nimport {findAllReportAction} from \"../../../actions/reportAction\";\r\nimport Error from \"../../Error\";\r\nimport {Button, ButtonGroup, Spinner} from \"reactstrap\";\r\nimport {PaginationButton} from \"../../../components/Buttons\";\r\n\r\nfunction ReportList({\r\n                        isLoading, reports, error, findAllReportAction, size, total, currentPage\r\n                    }) {\r\n\r\n    const [report, setReport] = useState([])\r\n\r\n    const [pageParam, setPageParam] = useState(0)\r\n    const [sizeParam, setSizeParam] = useState(10)\r\n\r\n    const totalPage = Math.ceil(total/size)\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [pageParam, sizeParam])\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(report) {\r\n            setReport(reports)\r\n        }\r\n    }, [reports])\r\n\r\n    const onReload = () => {\r\n        findAllReportAction({page: pageParam, size: sizeParam});\r\n        console.log(\"ini data\", reports)\r\n    }\r\n\r\n    const handleLimit = (limit) => {\r\n        setSizeParam(limit)\r\n        setPageParam(0)\r\n    }\r\n\r\n    useEffect(onReload, [findAllReportAction, pageParam, sizeParam])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"readAllReportByTransaction\") ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Report</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"#\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-download\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n\r\n                                                        <TableScrollbar rows={10}>\r\n                                                            <table className=\"table table-striped table-bordered table-align-middle table-head-fixed\">\r\n                                                                <thead style={{background:\"#FCE051\"}}>\r\n                                                                <tr >\r\n                                                                    <th colSpan=\"5\"> Customer Data</th>\r\n                                                                    <th colSpan=\"11\">Transaction</th>\r\n                                                                    <th colSpan=\"5\">Approved</th>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <th>No</th>\r\n                                                                    <th>Name</th>\r\n                                                                    <th>Email</th>\r\n                                                                    <th>Id Card</th>\r\n                                                                    <th>Address</th>\r\n                                                                    <th>Employee Type</th>\r\n                                                                    <th>Income</th>\r\n                                                                    <th>Outcome</th>\r\n                                                                    <th>Loan Amount</th>\r\n                                                                    <th>Interest Rate</th>\r\n                                                                    <th>Tenor</th>\r\n                                                                    <th>Principal</th>\r\n                                                                    <th>Interest</th>\r\n                                                                    <th>Installment</th>\r\n                                                                    <th>Installment Total</th>\r\n                                                                    <th>Status</th>\r\n                                                                    <th>Submitted Date</th>\r\n                                                                    <th>Approved Date</th>\r\n                                                                </tr>\r\n                                                                </thead>\r\n\r\n                                                                <tbody>\r\n                                                                {\r\n                                                                    ! isLoading ?\r\n                                                                        report.map((e,i) => {\r\n                                                                            return (\r\n                                                                                <Row key={i} data={e}\r\n                                                                                           number={(pageParam * sizeParam) + 1 + i}/>\r\n                                                                            )\r\n                                                                        }) :\r\n                                                                        <tr>\r\n                                                                            <div>\r\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                            </div>\r\n                                                                        </tr>\r\n\r\n                                                                }\r\n                                                                </tbody>\r\n\r\n                                                            </table>\r\n                                                        </TableScrollbar>\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <PaginationButton\r\n                                            currentPage = {currentPage}\r\n                                            setPage={setPageParam}\r\n                                            totalPage={totalPage}\r\n                                            handleLimit={handleLimit}\r\n                                            size={sizeParam}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n                        </Containers>\r\n\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        reports: state.findAllReportByStaff.data || [],\r\n        error: state.findAllReportByStaff.error,\r\n        isLoading: state.findAllReportByStaff.isLoading,\r\n        size: state.findAllReportByStaff.pagination.size,\r\n        total: state.findAllReportByStaff.pagination.total,\r\n        currentPage: state.findAllReportByStaff.pagination.page\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllReportAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportList);","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\profile\\EditPassword.js",["442","443","444"],"import React, {useEffect, useState} from 'react';\r\nimport {Link, Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport gambar from \"../../assets/images/undraw_authentication_fsn5.svg\"\r\nimport {\r\n    faKey, faLock, faLockOpen,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"../account/login.css\"\r\nimport {Button,Form,  Spinner} from \"reactstrap\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport {connect} from \"react-redux\";\r\nimport {changePasswordAction} from \"../../actions/userAction\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst EditPassword = ({isLoading, changePasswordAction, changePassword, error}) => {\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [oldPasswordError, setOldPasswordError] = useState('')\r\n    const [newPasswordError, setNewPasswordError] = useState('')\r\n    const [confirmPasswordError, setConfirmPasswordError] = useState('')\r\n\r\n    const handleSubmit = () => {\r\n        const isValid = validate();\r\n        if(isValid) {\r\n            const data = {\r\n                password: newPassword,\r\n                oldPassword: oldPassword\r\n            }\r\n            changePasswordAction(data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (changePassword) {\r\n            swal(\"Success!\", \"\", \"success\");\r\n            setOldPassword(\"\")\r\n            setNewPassword(\"\")\r\n            setConfirmPassword(\"\")\r\n        }\r\n\r\n        if (error) {\r\n            swal(\"Error!\", \"Old Password invalid!\", \"error\");\r\n        }\r\n    }, [changePassword, error])\r\n\r\n    const validate = () => {\r\n        let oldPasswordError = \"\";\r\n        let newPasswordError = \"\";\r\n        let confirmPasswordError = \"\";\r\n\r\n        if (newPassword.length < 6) {\r\n            newPasswordError = \"Password must be more than 6 characters!\";\r\n        }\r\n\r\n        if (confirmPassword !== newPassword) {\r\n            confirmPasswordError = \"Confirm Password must match to New Password\"\r\n        } else if (confirmPassword.length < 6) {\r\n            confirmPasswordError = \"Password must be more than 6 characters!\";\r\n        }\r\n\r\n        if (oldPasswordError || newPasswordError || confirmPasswordError) {\r\n            setOldPasswordError(oldPasswordError);\r\n            setNewPasswordError(newPasswordError);\r\n            setConfirmPasswordError(confirmPasswordError)\r\n            swal(\"Change Password Error!\", \"\", \"error\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*{*/}\r\n            {/*    localStorage.getItem(\"roles\") == \"STAFF\" || localStorage.getItem(\"roles\") == \"SUPERVISOR\" ?*/}\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={gambar} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Change Password</h1>\r\n                                                                        {!isLoading ?\r\n                                                                            <Form >\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                                <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                    <FontAwesomeIcon icon={faLock}/>\r\n                                                                                                </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"password\"\r\n                                                                                            name=\"password\"\r\n                                                                                            value={oldPassword}\r\n                                                                                            onChange={(e) => setOldPassword(e.target.value)}\r\n                                                                                            placeholder=\"old password\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n\r\n                                                                                    </div>\r\n                                                                                    <p style={{fontSize: 12, color: \"red\"}}>{oldPasswordError}</p>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faKey}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"password\"\r\n                                                                                            name=\"newPassword\"\r\n                                                                                            value={newPassword}\r\n                                                                                            onChange={(e) => setNewPassword(e.target.value)}\r\n                                                                                            placeholder=\"password\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n\r\n                                                                                    </div>\r\n                                                                                    <p style={{fontSize: 12, color: \"red\"}}>{newPasswordError}</p>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                                <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                    <FontAwesomeIcon icon={faLockOpen}/>\r\n                                                                                                </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"password\"\r\n                                                                                            name=\"confirmPassword\"\r\n                                                                                            value={confirmPassword}\r\n                                                                                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                                                                            placeholder=\"confirm password\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n                                                                                    <p style={{fontSize: 12, color: \"red\"}}>{confirmPasswordError}</p>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            onClick={handleSubmit}\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                                                                                <span className=\"font-weight-bold\"\r\n                                                                                                      style={{color: \"#ffff\"}}>CHANGE PASSWORD</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n                                                                            :\r\n                                                                            <div>\r\n                                                                                <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                            </div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                    </>\r\n            {/*        :*/}\r\n            {/*        <div>*/}\r\n            {/*            <Error/>*/}\r\n            {/*        </div>*/}\r\n            {/*}*/}\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        changePassword: state.changePasswordReducer.data,\r\n        isLoading: state.changePasswordReducer.isLoading,\r\n        error: state.changePasswordReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    changePasswordAction\r\n}\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (EditPassword);","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\profile\\EditProfile.js",["445","446","447","448","449","450","451","452"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"../account/login.css\"\r\nimport {Spinner, Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport Error from \"../Error\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\n\r\nconst EditProfile = () => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"false\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_Updated_resume_re_q1or} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Edit Account</h1>\r\n\r\n                                                                        {/*{!isLoading ?*/}\r\n                                                                            <Form>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faUserCircle}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"fullName\"\r\n                                                                                            placeholder=\"Full Name\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faUser}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"username\"\r\n                                                                                            placeholder=\"Username\"\r\n                                                                                            minLength={4}\r\n                                                                                            maxLength={10}\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                                                                            <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                                                                                <FontAwesomeIcon icon={faEnvelope}/>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"email\"\r\n                                                                                            name=\"email\"\r\n                                                                                            placeholder=\"Email Address\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <FormGroup>\r\n                                                                                            <Label for=\"profilePicture\"\r\n                                                                                                   sm={4}>Profile\r\n                                                                                                Photo</Label>\r\n                                                                                            <Col sm={12}>\r\n                                                                                                <Input\r\n                                                                                                    type=\"file\"\r\n                                                                                                    name=\"profilePicture\"\r\n                                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                                            </Col>\r\n                                                                                        </FormGroup>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                                                                            <span className=\"font-weight-bold\"\r\n                                                                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default EditProfile;","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\role\\RoleMenu.js",["453","454","455","456","457"],"import React, {useEffect, useState} from \"react\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport Containers from \"../../components/Containers/Container\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\nimport {Row, Col, FormGroup, Input, Label, Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport swal from \"sweetalert\";\r\nimport {findRoleByIdAction, removeByIdRoleAction, saveRoleAction, updateRoleAction} from \"../../actions/roleAction\";\r\n\r\n\r\nconst RoleMenu = ({saveRoleAction, saveRole, error, isLoading, role, findRoleByIdAction, updateRoleAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        inputCustomer: false,\r\n        readAllCustomer: false,\r\n        inputTransaction: false,\r\n        readAllTransaction: false,\r\n        approveTransaction: false,\r\n        readAllReport: false,\r\n        readAllReportByTransaction: false\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            findRoleByIdAction(id)\r\n        }\r\n    }, [id, findRoleByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id && role) {\r\n            setData({...role})\r\n        }\r\n    }, role)\r\n\r\n    useEffect(() => {\r\n        if (saveRole) {\r\n            swal(\"Add Loan Purpose Success\", \"\", \"success\")\r\n            history.push('/role')\r\n        }\r\n        if (error) {\r\n            swal(\"Sorry data already exist\", '', \"error\")\r\n        }\r\n    }, [saveRole, history, error])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n    }\r\n\r\n    const handleChecked = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.checked\r\n        setData({...data, [name]: value})\r\n        console.log(data)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (id) {\r\n            updateRoleAction(id, data)\r\n        } else {\r\n            saveRoleAction(data)\r\n        }\r\n        swal(\"Save Success!\", \"\", \"success\");\r\n        console.log(\"handlesubmit\", data)\r\n        history.push('/role')\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/role\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"master\") == \"true\" ?\r\n                    <>\r\n                        <Containers>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Management Role</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-8\" style={{alignContent: \"center\"}}>\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-body table-responsive\">\r\n                                                        <form onSubmit={handleSubmit}>\r\n                                                            <FormGroup row>\r\n                                                                <Col>\r\n                                                                    <h6 style={{textAlign: \"left\", color: \"grey\"}}>Role\r\n                                                                        name\r\n                                                                        <span style={{color: \"red\"}}> *</span>\r\n                                                                    </h6>\r\n                                                                </Col>\r\n                                                                <Col sm={12} style={{textAlign: \"left\"}}>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        value={data?.name}\r\n                                                                        type=\"text\"\r\n                                                                        name=\"name\"\r\n                                                                        placeholder=\"input role\"/>\r\n                                                                </Col>\r\n                                                            </FormGroup><br/>\r\n\r\n                                                            <Row>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <h4>Customer</h4>\r\n                                                                </Col>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"inputCustomer\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               checked={data.inputCustomer}\r\n                                                                               value={data.inputCustomer}\r\n                                                                               id=\"defaultCheck1\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck1\">\r\n                                                                            Input Customer\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"readAllCustomer\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.readAllCustomer}\r\n                                                                               checked={data?.readAllCustomer}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Read All Customer\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col/>\r\n                                                            </Row>\r\n                                                            <hr/>\r\n                                                            <Row>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <h4>Transaction</h4>\r\n                                                                </Col>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"inputTransaction\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.inputTransaction}\r\n                                                                               checked={data?.inputTransaction}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Input Transaction\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"readAllTransaction\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.readAllTransaction}\r\n                                                                               checked={data?.readAllTransaction}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Read All Transaction\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"approveTransaction\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.approveTransaction}\r\n                                                                               checked={data?.approveTransaction}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Approval Transaction\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col/>\r\n                                                            </Row>\r\n                                                            <hr/>\r\n                                                            <Row>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <h4>Report</h4>\r\n                                                                </Col>\r\n                                                                <Col style={{textAlign: \"left\"}}>\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"readAllReport\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.readAllReport}\r\n                                                                               checked={data?.readAllReport}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Read All Report\r\n                                                                        </label>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"form-check\">\r\n                                                                        <input className=\"form-check-input\"\r\n                                                                               type=\"checkbox\"\r\n                                                                               name=\"readAllReportByTransaction\"\r\n                                                                               onChange={handleChecked}\r\n                                                                               value={data?.readAllReportByTransaction}\r\n                                                                               checked={data?.readAllReportByTransaction}\r\n                                                                               id=\"defaultCheck2\"/>\r\n                                                                        <label className=\"form-check-label\"\r\n                                                                               htmlFor=\"defaultCheck2\">\r\n                                                                            Read Report By Submitter\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                                <Col/>\r\n                                                            </Row>\r\n                                                            <br/>\r\n\r\n                                                            <Row>\r\n                                                                <Col sm={{size: 10, offset: 2}}\r\n                                                                     style={{textAlign: \"right\"}}>\r\n                                                                    <Button style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon icon={faSave}/>\r\n                                                                        Submit\r\n                                                                    </Button> {' '}\r\n                                                                    <Button href=\"/role\"\r\n                                                                            style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon\r\n                                                                            icon={faArrowLeft}/>\r\n                                                                        Cancel\r\n                                                                    </Button>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </form>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n\r\n                        </Containers>\r\n                        <Footer/>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        saveRole: state.saveRoleReducer .data,\r\n        error: state.saveRoleReducer.error,\r\n        isLoading: state.saveRoleReducer.isLoading || state.findRoleByIdReducer.isLoading,\r\n        role: state.findRoleByIdReducer.data,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveRoleAction,\r\n    findRoleByIdAction,\r\n    removeByIdRoleAction,\r\n    updateRoleAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleMenu)","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\role\\RoleList.js",["458","459","460","461"],"import React, {useEffect} from \"react\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {connect} from \"react-redux\";\r\nimport Containers from \"../../components/Containers/Container\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\nimport RoleRow from \"./RoleRow\";\r\nimport {findAllRoleAction, removeByIdRoleAction} from \"../../actions/roleAction\";\r\nimport ReasonRow from \"../reasonUse/ReasonRow\";\r\nimport swal from \"sweetalert\";\r\nimport TableScrollbar from \"react-table-scrollbar\";\r\nimport {Spinner} from \"reactstrap\";\r\n\r\n\r\nconst ReasonUse = ({\r\n                       roles,\r\n                       findAllRoleAction,\r\n                       error,\r\n                       isLoading,\r\n                       removeByIdRoleAction,\r\n    isRemoved\r\n                   }) => {\r\n\r\n    const onReload = () => {\r\n        findAllRoleAction()\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        swal({\r\n            title: \"Are you sure to delete this data?\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then(willDelete => {\r\n                if (willDelete) {\r\n                    removeByIdRoleAction(id);\r\n                    swal(\"Successful deleted\", {\r\n                        icon: \"success\"\r\n                    });\r\n                } else {\r\n                    swal(\"Failed to delete\")\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(onReload, [findAllRoleAction])\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [findAllRoleAction])\r\n\r\n    useEffect(() => {\r\n        if(isRemoved) {\r\n            onReload()\r\n        }\r\n    }, [isRemoved])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\" style={{marginTop: '30px', display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\r\n                                            <div className=\"col-sm-8\">\r\n                                                <h1 className=\"m-0 text-dark\">Management Role</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\" style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}}>\r\n                                            <div className=\"col-lg-8\" >\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\r\n                                                            {/*</a>*/}\r\n                                                            <a href=\"/role/form\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-plus-circle\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <TableScrollbar rows={12}>\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\r\n                                                            <tr>\r\n                                                                <th>No</th>\r\n                                                                <th>Role</th>\r\n                                                                <th>Action</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n                                                            {\r\n                                                                !isLoading ?\r\n                                                                    roles?.list?.map((e,i) => {\r\n                                                                        return(\r\n                                                                            <RoleRow onDeleted={() => onDelete(e.id)}\r\n                                                                                key={i} data={e}\r\n                                                                                     number={(roles.page * roles.size) + 1 + i}/>\r\n                                                                        )\r\n                                                                    }) :\r\n                                                                    <div className=\"spinner\">\r\n                                                                        <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                    </div>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n\r\n                        </Containers>\r\n                        <Footer/>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        roles: state.findAllRoleReducer.data,\r\n        error: state.findAllRoleReducer.error || state.removeRoleByIdReducer.error,\r\n        isLoading: state.findAllRoleReducer.isLoading,\r\n        isRemoved: state.removeRoleByIdReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllRoleAction,\r\n    removeByIdRoleAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonUse)","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js",["462","463","464","465","466","467","468","469","470"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\loginAction.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\Error\\index.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\index.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\index.js",["471"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomer\\index.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\index.js",["472","473","474","475","476"],"import React from 'react'\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\nimport Content from \"./Home\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ListCustomer from \"../../pages/customer/listCustomer\";\r\nimport TransactionList from \"../../pages/transaction/transactionList\";\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Menu/>\r\n            {/*<ListCustomer/>*/}\r\n            <Content/>\r\n            {/*<Router>*/}\r\n            {/*    <Switch>*/}\r\n            {/*        <Route path=\"/customer\" component={ListCustomer} exact />*/}\r\n            {/*        /!*<Route path=\"/customer/form\" component={CustomerForm} exact />*!/*/}\r\n            {/*        <Route path=\"/transaction\" component={TransactionList} exact />*/}\r\n            {/*        <Route path=\"/report\" component={Content} exact/>*/}\r\n            {/*    </Switch>*/}\r\n            {/*</Router>*/}\r\n            <Footer/>\r\n        </div>\r\n\r\n    )\r\n}","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\Header.js",["477","478","479","480","481","482","483"],"import React from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {\r\n  faCogs,\r\n  faFolderPlus,\r\n  faHome, faLock,\r\n  faSignOutAlt,\r\n  faUserCog,\r\n  faUserPlus,\r\n  faUsers\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Link} from \"react-router-dom\";\r\nimport swal from \"sweetalert\"\r\n\r\nexport default function Header() {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleOnclick = () => {\r\n    swal({\r\n      title: \"Are you sure want to log out?\",\r\n      text: \"\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n          if (willDelete) {\r\n            swal(\"You have log out!\", {\r\n              icon: \"success\",\r\n            });\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('roles')\r\n            localStorage.removeItem('username')\r\n            localStorage.removeItem('fullName')\r\n            localStorage.removeItem('inputCustomer')\r\n            localStorage.removeItem('readAllCustomer')\r\n            localStorage.removeItem('inputTransaction')\r\n            localStorage.removeItem('readAllTransaction')\r\n            localStorage.removeItem('approveTransaction')\r\n            localStorage.removeItem('readAllReport')\r\n            localStorage.removeItem('readAllReportByTransaction')\r\n            localStorage.removeItem('master')\r\n            history.push('/')\r\n          }\r\n        });\r\n\r\n  }\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\" style={{background:\"#ff8370\"}}>\r\n      {/* Left navbar links */}\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\" style={{width:\"2vw\", fontSize:\"1vw\"}}>\r\n            <i className=\"fas fa-bars\" />\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <Link to=\"/dashboard\" className=\"nav-link\" style={{width:\"2vw\", fontSize:\"1vw\"}}>\r\n            <FontAwesomeIcon icon={faHome}/>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* Right navbar links */}\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        {/*{localStorage.getItem(\"roles\") == \"MASTER\" &&*/}\r\n        {/*<ul className=\"navbar-nav ml-auto\">*/}\r\n        {/*      <li className=\"nav-item\">*/}\r\n        {/*        <a className=\"nav-link\" href=\"/need\">*/}\r\n        {/*          <FontAwesomeIcon icon={faFolderPlus}/>*/}\r\n        {/*        </a>*/}\r\n        {/*      </li>*/}\r\n        {/*      <li className=\"nav-item\">*/}\r\n        {/*        <a className=\"nav-link\" href=\"/register\">*/}\r\n        {/*          <FontAwesomeIcon icon={faUserPlus}/>*/}\r\n        {/*        </a>*/}\r\n        {/*      </li>*/}\r\n        {/*</ul>*/}\r\n        {/*}*/}\r\n        {localStorage.getItem(\"master\") == \"false\" &&\r\n        // <>\r\n        //   <li className=\"nav-item dropdown\">\r\n        //     <a className=\"nav-link\" data-toggle=\"dropdown\" style={{width:\"2vw\", fontSize:\"1vw\"}}>\r\n        //       {/*<i className=\"far fa-bell\" />*/}\r\n        //       <FontAwesomeIcon icon={faCogs}/>\r\n        //     </a>\r\n        //     <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n        //       <div className=\"dropdown-divider\" />\r\n        //       <Link to=\"/users\" className=\"dropdown-item\">\r\n        //         <FontAwesomeIcon icon={faUserCog}/> Setting Profile\r\n        //         <span className=\"float-right text-muted text-sm\"></span>\r\n        //       </Link>\r\n        //       <div className=\"dropdown-divider\" />\r\n        //       <Link to=\"/password\" className=\"dropdown-item\">\r\n        //         <FontAwesomeIcon icon={faLock} /> Change Password\r\n        //         <span className=\"float-right text-muted text-sm\"></span>\r\n        //       </Link>\r\n        //     </div>\r\n        //   </li>\r\n        // </>\r\n          <li className=\"nav-item\">\r\n          <Link\r\n          className=\"nav-link\"\r\n          to=\"/password\"\r\n          style={{width:\"2vw\", fontSize:\"1vw\"}}\r\n          >\r\n          <FontAwesomeIcon icon={faCogs}/>\r\n          </Link>\r\n          </li>\r\n        }\r\n        <li className=\"nav-item\">\r\n          <Link\r\n            className=\"nav-link\"\r\n            onClick={handleOnclick}\r\n            // to=\"/\"\r\n            style={{width:\"2vw\", fontSize:\"1vw\"}}\r\n          >\r\n            <FontAwesomeIcon icon={faSignOutAlt}/>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\account\\AccountRow.js",["484"],"import React from \"react\";\r\n\r\n\r\nconst AccountRow = ({data, number, onUpdate, onDeleted}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.username}</td>\r\n            <td>{data.fullName}</td>\r\n            <td>{data.email}</td>\r\n            <td>\r\n                {data.isVerified ?\r\n                    \"Verified\" : \"Not Verified\"\r\n                }\r\n            </td>\r\n            <td>{data.role}</td>\r\n            <td>\r\n                <a onClick={onUpdate} href={`/master/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\" />\r\n                </a>{' '}\r\n                <a onClick={onDeleted} className=\"text-muted\">\r\n                    <i className=\"fas fa-trash-alt\" />\r\n                </a>{' '}\r\n\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default AccountRow;","D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\signupAction.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\Menu.js",["485","486","487","488","489","490","491","492","493","494","495","496"],"import React from \"react\";\r\nimport {faCheckDouble, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Menu() {\r\n  return (\r\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" style={{background:\"#e42256\"}}>\r\n        {/* Brand Logo */}\r\n        <a className=\"brand-link\">\r\n          {/*<img*/}\r\n          {/*  src=\"dist/img/AdminLTELogo.png\"*/}\r\n          {/*  alt=\"AdminLTE Logo\"*/}\r\n          {/*  className=\"brand-image img-circle elevation-3\"*/}\r\n          {/*  style={{ opacity: \".8\" }}*/}\r\n          {/*/>*/}\r\n          <span className=\"brand-text font-weight-light\">OK' 200</span>\r\n        </a>\r\n        {/* Sidebar */}\r\n        <div className=\"sidebar\">\r\n          {/* Sidebar user panel (optional) */}\r\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n            <div className=\"image\">\r\n              {/*<img*/}\r\n              {/*  src=\"dist/img/user2-160x160.jpg\"*/}\r\n              {/*  className=\"img-circle elevation-2\"*/}\r\n              {/*  alt=\"User Image\"*/}\r\n              {/*/>*/}\r\n            </div>\r\n            <div className=\"info\">\r\n              <a href=\"#\" className=\"d-block\">\r\n                {localStorage.getItem('fullName')}\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/* Sidebar Menu */}\r\n          <nav className=\"mt-2\">\r\n            {localStorage.getItem(\"master\") == \"true\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n                <li className=\"nav-item has-treeview\">\r\n                    <Link to=\"/role\" className=\"nav-link\">\r\n                        <i className=\"nav-icon fas fa-cog\"/>\r\n                        <p>\r\n                            Management Roles\r\n                        </p>\r\n                    </Link>\r\n                </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/master\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-users\"/>\r\n                  <p>\r\n                    Management User\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/need\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    Loan Purpose\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            }\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n                {localStorage.getItem('inputCustomer') == \"true\" &&\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/staff/customer\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    Customer\r\n                  </p>\r\n                </Link>\r\n              </li>}\r\n                {localStorage.getItem('readAllCustomer') == \"true\" &&\r\n                <li className=\"nav-item has-treeview\">\r\n                    <Link to=\"/customer\" className=\"nav-link\">\r\n                        <i className=\"nav-icon fas fa-list-alt\"/>\r\n                        <p>\r\n                            All Customer\r\n                        </p>\r\n                    </Link>\r\n                </li>}\r\n                {localStorage.getItem('readAllTransaction') == \"true\" &&\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </Link>\r\n              </li>}\r\n                {localStorage.getItem('inputTransaction') == \"true\" &&\r\n                <li className=\"nav-item has-treeview\">\r\n                    <Link to=\"/staff/transaction\" className=\"nav-link\">\r\n                        <i className=\"nav-icon fas fa-wallet\"/>\r\n                        <p>\r\n                            All Transaction\r\n                        </p>\r\n                    </Link>\r\n                </li>}\r\n                {localStorage.getItem('readAllReportByTransaction') == \"true\" &&\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/report/staff\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </Link>\r\n              </li>}\r\n                {localStorage.getItem('readAllReport') == \"true\" &&\r\n                <li className=\"nav-item has-treeview\">\r\n                    <Link to=\"/report/\" className=\"nav-link\">\r\n                        <i className=\"nav-icon fas fa-check-double\"/>\r\n                        <p>\r\n                            All Report\r\n                        </p>\r\n                    </Link>\r\n                </li>}\r\n            </ul>\r\n\r\n\r\n            {/*{localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&*/}\r\n            {/*<ul*/}\r\n            {/*    className=\"nav nav-pills nav-sidebar flex-column\"*/}\r\n            {/*    data-widget=\"treeview\"*/}\r\n            {/*    role=\"menu\"*/}\r\n            {/*    data-accordion=\"false\"*/}\r\n            {/*>*/}\r\n\r\n            {/*  <li className=\"nav-item has-treeview\">*/}\r\n            {/*    <Link to=\"/transaction\" className=\"nav-link\">*/}\r\n            {/*      <i className=\"nav-icon fas fa-wallet\"/>*/}\r\n            {/*      <p>*/}\r\n            {/*        Transaction*/}\r\n            {/*      </p>*/}\r\n            {/*    </Link>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li className=\"nav-item has-treeview\">*/}\r\n            {/*    <Link to=\"/report\" className=\"nav-link\">*/}\r\n            {/*      <i className=\"nav-icon fas fa-check-double\"/>*/}\r\n            {/*      <p>*/}\r\n            {/*        Report*/}\r\n            {/*      </p>*/}\r\n            {/*    </Link>*/}\r\n            {/*  </li>*/}\r\n            {/*</ul>*/}\r\n\r\n\r\n          </nav>\r\n          {/* /.sidebar-menu */}\r\n        </div>\r\n        {/* /.sidebar */}\r\n      </aside>\r\n  );\r\n}","D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\Footer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\roleAction.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\customerAction.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\Containers\\Container.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\DropdownList\\DropdownList.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomerByStaff\\RowList.js",["497","498"],"import React from 'react'\r\n\r\nconst RowList = ({data, onUpdate, number}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.name}</td>\r\n            <td>{data.idNumber} </td>\r\n            <td>{data.employeeType}</td>\r\n            <td>{data.submitter}</td>\r\n            <td>\r\n                <a onClick={data} href={`/customer/${data.id}/detail`} className=\"text-muted\">\r\n                    <i className=\"fas fa-info-circle\" />\r\n                </a>{' '}\r\n                {localStorage.getItem('inputCustomer') == \"true\" &&\r\n                    <>\r\n                <a onClick={onUpdate} href={`/customer/${data.id}/edit`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\"/>\r\n                </a>{' '}</>\r\n                }\r\n                {localStorage.getItem(\"inputTransaction\") == \"true\" &&\r\n                <>\r\n                <a onClick={data} href={`/transaction/form/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-wallet\" />\r\n                </a>\r\n                    </>}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RowList;\r\n","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\role\\RoleRow.js",["499"],"import React from 'react'\r\n\r\nconst RoleRow = ({data, number, onDeleted, onUpdate}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.name}</td>\r\n            <td>\r\n                <a onClick={onUpdate} href={`/role/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\"/>\r\n                </a>{' '}\r\n                <a onClick={onDeleted} className=\"text-muted\">\r\n                    <i className=\"fas fa-trash-alt\"/>\r\n                </a>{' '}</td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default RoleRow;","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\reasonUse\\ReasonRow.js",["500"],"import React from 'react'\r\n\r\nconst ReasonRow = ({data, number, onUpdate, onDeleted}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.type} </td>\r\n            <td>\r\n                <a onClick={onUpdate} href={`/need/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\"/>\r\n                </a>{' '}\r\n                <a onClick={onDeleted} className=\"text-muted\">\r\n                    <i className=\"fas fa-trash-alt\"/>\r\n                </a>{' '}</td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ReasonRow;","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\constants\\actions.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\userAction.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\reportAction.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\report\\reportByStaff\\Row.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\transactionAction.js",["501"],"import {\r\n    FIND_ALL_TRANSACTION,\r\n    FIND_TRANSACTION_BY_ID,\r\n    SAVE_TRANSACTION,\r\n    UPDATE_TRANSACTION\r\n} from \"../configs/constants/actions\";\r\nimport pagination from \"../configs/sagas/pagination\";\r\n\r\nexport function findAllTransactionAction(pagination) {\r\n    return {\r\n        type: FIND_ALL_TRANSACTION,\r\n        pagination: {\r\n            page: pagination.page,\r\n            size: pagination.size\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function saveTransactionAction(model) {\r\n    return {\r\n        type: SAVE_TRANSACTION,\r\n        model\r\n    }\r\n}\r\n\r\nexport function findByIdTransactionAction(id) {\r\n    console.log(\"masuk ke action\")\r\n    return{\r\n        type: FIND_TRANSACTION_BY_ID,\r\n        id\r\n    }\r\n}\r\n\r\nexport function update(payload) {\r\n    return {\r\n        type: UPDATE_TRANSACTION,\r\n        payload\r\n    }\r\n}","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\listTransactionByStaff\\Row.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\needAction.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\report\\ReportRow.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\approvalAction.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\Buttons\\index.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\Error\\Error.js",["502","503"],"import React from 'react'\r\nimport undraw_page_not_found_su7k from \"../../assets/images/undraw_page_not_found_su7k.svg\";\r\nimport {FaFontAwesome} from \"react-icons/all\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faHome} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Button} from \"reactstrap\";\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <div>\r\n                        <img src={undraw_page_not_found_su7k} alt=\"\"\r\n                             className=\"img-fluid d-none d-md-block\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Page not found!</h1><br/>\r\n                    <h4 style={{color: \"#e42256\"}}>Sorry, you can not access this page!</h4><br/>\r\n                    <h4 style={{color: \"#e42256\"}}>Please, back to home!</h4><br/>\r\n                    <Button href=\"/dashboard\"\r\n                            style={{background: \"#e42256\"}}>\r\n                        <FontAwesomeIcon\r\n                            icon={faHome}/> Back\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\customerReducer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\transactionReducer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\loginReducer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\signupReducer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\approvalReducer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\reportReducer.js",["504","505","506"],"import {\r\n    FIND_ALL_REPORT,\r\n    FIND_ALL_REPORT_FAILURE,\r\n    FIND_ALL_REPORT_SUCCESS, FIND_REPORT_BY_STAFF, FIND_REPORT_BY_STAFF_FAILURE, FIND_REPORT_BY_STAFF_SUCCESS,\r\n    FIND_TRANSACTION_BY_STAFF, FIND_TRANSACTION_BY_STAFF_FAILURE, FIND_TRANSACTION_BY_STAFF_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    pagination: {\r\n        size: null,\r\n        total: null,\r\n        page: null\r\n    },\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const findAllReportReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_ALL_REPORT:\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    size: null,\r\n                    total: null,\r\n                    page: null\r\n                },\r\n                isLoading: true\r\n            };\r\n        case FIND_ALL_REPORT_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                pagination: {\r\n                    size: action.pagination.size,\r\n                    total: action.pagination.total,\r\n                    page: action.pagination.page\r\n                },\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_ALL_REPORT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const findAllReportByStaff = (state = initialState, action) => {\r\n    // console.log(\"ini action\", action)\r\n    switch (action.type) {\r\n        case FIND_REPORT_BY_STAFF:\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    size: null,\r\n                    total: null,\r\n                    page: null\r\n                },\r\n                isLoading: true\r\n            };\r\n        case FIND_REPORT_BY_STAFF_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                pagination: {\r\n                    size: action.pagination.size,\r\n                    total: action.pagination.total,\r\n                    page: action.pagination.page\r\n                },\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_REPORT_BY_STAFF_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\roleReducer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\needReducer.js",["507","508"],"import {\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS,\r\n    FIND_NEEDTYPE_BY_ID,\r\n    FIND_NEEDTYPE_BY_ID_FAILURE,\r\n    FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n    REMOVE_NEEDTYPE_BY_ID, REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS,\r\n    UPDATE_NEEDTYPE, UPDATE_NEEDTYPE_FAILURE,\r\n    UPDATE_NEEDTYPE_SUCCESS\r\n} from \"../constants/actions\";\r\nimport {act} from \"@testing-library/react\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    // pagination: {\r\n    //     size: null,\r\n    //     total: null,\r\n    //     page: null\r\n    // },\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const findAllNeedReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FIND_ALL_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                // pagination: {\r\n                //     size: null,\r\n                //     total: null,\r\n                //     page: null\r\n                // },\r\n                isLoading: true\r\n            };\r\n        case FIND_ALL_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                // pagination: {\r\n                //     size: action.pagination.size,\r\n                //     total: action.pagination.total,\r\n                //     page: action.pagination.page\r\n                // },\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_ALL_NEEDTYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n    console.log(\"ini action reducer\", action.pagination.size)\r\n}\r\n\r\nexport const saveNeedReducer = (state = {...initialState}, action) => {\r\n\r\n    switch (action.type) {\r\n        case SAVE_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case SAVE_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case SAVE_NEEDTYPE_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const findNeedTypeByIdReducer =(state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_NEEDTYPE_BY_ID:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            };\r\n        case FIND_NEEDTYPE_BY_ID_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_NEEDTYPE_BY_ID_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null,\r\n            };\r\n    }\r\n}\r\n\r\nexport const updateNeedTypeReducer = (state = {...initialState}, action) => {\r\n    switch (action.type){\r\n        case UPDATE_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case UPDATE_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case UPDATE_NEEDTYPE_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const removeNeedTypeByIdReducer = (state = {...initialState, data: false}, action) => {\r\n\r\n    switch (action.type) {\r\n        case REMOVE_NEEDTYPE_BY_ID:\r\n            return {\r\n                ...state,\r\n                data: false,\r\n                loading: true\r\n            }\r\n        case REMOVE_NEEDTYPE_BY_ID_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\userReducer.js",["509","510","511"],"import {\r\n    CHANGE_PASSWORD_USER, CHANGE_PASSWORD_USER_FAILURE,\r\n    CHANGE_PASSWORD_USER_SUCCESS,\r\n    SAVE_CUSTOMER,\r\n    SAVE_CUSTOMER_FAILURE,\r\n    SAVE_CUSTOMER_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const changePasswordReducer = (state = {...initialState}, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_PASSWORD_USER:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case CHANGE_PASSWORD_USER_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case CHANGE_PASSWORD_USER_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\customerSaga.js",["512"],"import { put, takeLatest } from \"redux-saga/effects\"\r\nimport {\r\n  FIND_ALL_CUSTOMER_FAILURE,\r\n  FIND_ALL_CUSTOMER_SUCCESS,\r\n  FIND_ALL_CUSTOMER,\r\n\r\n  SAVE_CUSTOMER,\r\n  SAVE_CUSTOMER_FAILURE,\r\n  SAVE_CUSTOMER_SUCCESS,\r\n\r\n  FIND_CUSTOMER_BY_ID,\r\n  FIND_CUSTOMER_BY_ID_FAILURE,\r\n  FIND_CUSTOMER_BY_ID_SUCCESS,\r\n\r\n  UPDATE_CUSTOMER, FIND_CUSTOMER_BY_SUBMITTER_SUCCESS, FIND_CUSTOMER_BY_SUBMITTER_FAILURE, FIND_CUSTOMER_BY_SUBMITTER\r\n\r\n} from \"../constants/actions\"\r\nimport axios from \"../api\"\r\nimport pagination from \"./pagination\";\r\n\r\nfunction* findAllCustomerSaga(action) {\r\n  let parameter = pagination(action)\r\n\r\n  parameter = parameter.replace(/\\s+/g, '+')\r\n\r\n  let result = yield axios.get(`/customer?${parameter}`)\r\n    .then(data => {\r\n      return ({\r\n        type: FIND_ALL_CUSTOMER_SUCCESS,\r\n        data: data.list,\r\n        pagination: {\r\n          size: data.size,\r\n          total: data.total,\r\n          page: data.page\r\n        },\r\n      })\r\n    })\r\n    .catch(err => {\r\n      return ({\r\n        type: FIND_ALL_CUSTOMER_FAILURE,\r\n        error: err\r\n      })\r\n    })\r\n  yield put(result)\r\n}\r\n\r\nfunction* saveCustomerSaga(action) {\r\n  let model = action.model;\r\n  let method = 'POST', url = '/customer';\r\n  if (model.id) {\r\n    method = \"PATCH\";\r\n    url += `/${model.id}`\r\n  }\r\n\r\n  let result = yield axios({\r\n    url: url,\r\n    method: method,\r\n    data: model\r\n  })\r\n    .then( data => {\r\n      return {\r\n        type: SAVE_CUSTOMER_SUCCESS,\r\n        data: data\r\n      }\r\n    })\r\n    .catch(e => {\r\n      return {\r\n        type: SAVE_CUSTOMER_FAILURE,\r\n        error: e\r\n      }\r\n    })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findCustomerByIdSaga(action) {\r\n  let result = yield axios.get(`/customer/${action.id}`)\r\n      .then(data => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_ID_SUCCESS,\r\n          data: data\r\n        })\r\n      })\r\n      .catch(e => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_ID_FAILURE,\r\n          error: e\r\n        })\r\n      })\r\n  yield put(result)\r\n}\r\n\r\nfunction* findCustomerByStaffSaga(action) {\r\n  let parameter = pagination(action)\r\n\r\n  // console.log(\"PARAMETER: \", action)\r\n\r\n  parameter = parameter.replace(/\\s+/g, '+')\r\n  let result = yield axios.get(`/customer/principal?${parameter}`)\r\n      .then(data => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_SUBMITTER_SUCCESS,\r\n          data: data.list,\r\n          pagination: {\r\n            size: data.size,\r\n            total: data.total,\r\n            page: data.page\r\n          },\r\n        })\r\n      })\r\n      .catch(e => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_SUBMITTER_FAILURE,\r\n          error: e\r\n        })\r\n      })\r\n  yield put(result)\r\n}\r\n\r\nfunction* updateCustomerSaga(action) {\r\n  let result = false\r\n\r\n  yield put({\r\n    type: UPDATE_CUSTOMER,\r\n    data: result\r\n  })\r\n}\r\n\r\n\r\nexport function* watchFindAllCustomer() {\r\n  yield takeLatest(FIND_ALL_CUSTOMER, findAllCustomerSaga)\r\n}\r\n\r\nexport function* watchSaveCustomer() {\r\n  yield takeLatest(SAVE_CUSTOMER, saveCustomerSaga)\r\n}\r\n\r\nexport function* watchFindCustomerById() {\r\n  yield takeLatest(FIND_CUSTOMER_BY_ID, findCustomerByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateCustomer() {\r\n  yield takeLatest(UPDATE_CUSTOMER, updateCustomerSaga)\r\n}\r\n\r\nexport function* watchFindAllCustomerByStaffSaga() {\r\n  yield takeLatest(FIND_ALL_CUSTOMER, findCustomerByStaffSaga)\r\n}\r\n","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\loginSaga.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\signupSaga.js",["513"],"import axios from \"../api\";\r\nimport {\r\n    FIND_ACCOUNT_BY_ID,\r\n    FIND_ACCOUNT_BY_ID_FAILURE,\r\n    FIND_ACCOUNT_BY_ID_SUCCESS,\r\n    FIND_ALL_ACCOUNT,\r\n    FIND_ALL_ACCOUNT_FAILURE,\r\n    FIND_ALL_ACCOUNT_SUCCESS,\r\n    REMOVE_ACCOUNT_BY_ID,\r\n    REMOVE_ACCOUNT_BY_ID_FAILURE,\r\n    REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n    SAVE_ACCOUNT,\r\n    SAVE_ACCOUNT_FAILURE,\r\n    SAVE_ACCOUNT_SUCCESS, UPDATE_ACCOUNT, UPDATE_CUSTOMER\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\n\r\nfunction* findAllAccountSaga() {\r\n    let result = yield axios.get(\"/master\")\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveAccountSaga(action) {\r\n    let model = action.model;\r\n    let method = 'POST', url = '/master/signup';\r\n    if (model.id) {\r\n        method = \"PATCH\";\r\n        url = `/master/${model.id}`\r\n    }\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_ACCOUNT_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_ACCOUNT_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findAccountByIdSaga(action) {\r\n    console.log(\"SAGA ID\", action)\r\n    let result = yield axios.get(`/master/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"DATA\", data)\r\n            return ({\r\n                type: FIND_ACCOUNT_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_ACCOUNT_BY_ID_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* updateAccountSaga(action) {\r\n    let result = false\r\n\r\n    yield put({\r\n        type: UPDATE_ACCOUNT,\r\n        data: result\r\n    })\r\n}\r\n\r\nfunction* removeAccountById(action) {\r\n    let result = yield axios.delete(`/master/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini action\", data)\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nexport function* watchFindAllAccount() {\r\n    yield takeLatest(FIND_ALL_ACCOUNT, findAllAccountSaga)\r\n}\r\n\r\nexport function* watchSaveAccount() {\r\n    yield takeLatest(SAVE_ACCOUNT, saveAccountSaga)\r\n}\r\n\r\nexport function* watchFindByIdAccount() {\r\n    yield takeLatest(FIND_ACCOUNT_BY_ID, findAccountByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateAccountById() {\r\n    yield takeLatest(UPDATE_ACCOUNT, updateAccountSaga)\r\n}\r\n\r\nexport function* watchRemoveById() {\r\n    yield takeLatest(REMOVE_ACCOUNT_BY_ID, removeAccountById)\r\n}","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\transactionSaga.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\reportSaga.js",["514","515","516"],"\r\nimport axios from \"../api\";\r\nimport {put, takeLatest} from \"redux-saga/effects\";\r\nimport {\r\n    FIND_ALL_REPORT,\r\n    FIND_ALL_REPORT_FAILURE,\r\n    FIND_ALL_REPORT_SUCCESS,\r\n    FIND_REPORT_BY_STAFF,\r\n    FIND_REPORT_BY_STAFF_FAILURE,\r\n    FIND_REPORT_BY_STAFF_SUCCESS,\r\n    FIND_TRANSACTION_BY_STAFF_FAILURE,\r\n    FIND_TRANSACTION_BY_STAFF_SUCCESS\r\n} from \"../constants/actions\";\r\nimport pagination from \"./pagination\";\r\n\r\n\r\nfunction* findAllReportSaga(data) {\r\n\r\n    let parameter = pagination(data)\r\n\r\n    // console.log(\"PARAMETER: \", action)\r\n\r\n    parameter = parameter.replace(/\\s+/g, '+')\r\n\r\n    let result = yield axios.get(`/report?${parameter}`)\r\n        .then (data => {\r\n            return ({\r\n                type: FIND_ALL_REPORT_SUCCESS,\r\n                data : data.list,\r\n                pagination: {\r\n                    size: data.size,\r\n                    total: data.total,\r\n                    page: data.page\r\n                }\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return({\r\n                type: FIND_ALL_REPORT_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put (result)\r\n}\r\n\r\nfunction* findReportByStaffSaga(action) {\r\n    let parameter = pagination(action)\r\n\r\n    // console.log(\"PARAMETER: \", action)\r\n\r\n    parameter = parameter.replace(/\\s+/g, '+')\r\n\r\n    let result = yield axios.get(`/report/principal?${parameter}`)\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_REPORT_BY_STAFF_SUCCESS,\r\n                data: data.list,\r\n                pagination: {\r\n                    size: data.size,\r\n                    total: data.total,\r\n                    page: data.page\r\n                },\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_REPORT_BY_STAFF_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nexport function* watchFindAllReport() {\r\n    yield takeLatest (FIND_ALL_REPORT, findAllReportSaga)\r\n}\r\n\r\nexport function* watchFindReportByStaff() {\r\n    yield takeLatest (FIND_ALL_REPORT, findReportByStaffSaga)\r\n}","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\needSaga.js",["517","518"],"import {\r\n    FIND_NEEDTYPE_BY_ID,\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS,\r\n    REMOVE_NEEDTYPE_BY_ID,\r\n    REMOVE_NEEDTYPE_BY_ID_FAILURE,\r\n    REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS,\r\n    UPDATE_NEEDTYPE,\r\n    FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n    FIND_NEEDTYPE_BY_ID_FAILURE, UPDATE_NEEDTYPE_SUCCESS\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\nimport pagination from \"./pagination\";\r\n\r\nfunction* findAllNeedSaga() {\r\n\r\n    let result = yield axios.get('/need')\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_NEEDTYPE_SUCCESS,\r\n                data: data,\r\n\r\n            })\r\n            console.log(\"saga ni\", data.size)\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_NEEDTYPE_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveNeedSaga(action) {\r\n    let model = action.model;\r\n    let method = 'POST', url = '/need';\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_NEEDTYPE_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_NEEDTYPE_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* findNeedByIdSaga(action) {\r\n    // console.log(\"SAGA ID\", action)\r\n    let result = yield axios.get(`/need/${action.id}`)\r\n        .then(data => {\r\n            // console.log(\"DATA\", data)\r\n            return ({\r\n                type: FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_NEEDTYPE_BY_ID_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n// function* updateNeedSaga(action) {\r\n//     let result = false\r\n//\r\n//     yield put({\r\n//         type: UPDATE_NEEDTYPE,\r\n//         data: result\r\n//     })\r\n// }\r\n\r\nfunction* updateNeedSaga(action) {\r\n    const url = `/need/${action.id}`\r\n    const method = 'PUT'\r\n    const model = action.payload\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return ({\r\n                type: UPDATE_NEEDTYPE_SUCCESS,\r\n                data: result\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_NEEDTYPE_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* removeNeedById(action) {\r\n    let result = yield axios.delete(`/need/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini action\", data)\r\n            return ({\r\n                type: REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: REMOVE_NEEDTYPE_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nexport function* watchFindAllNeed() {\r\n    yield takeLatest(FIND_ALL_NEEDTYPE, findAllNeedSaga)\r\n}\r\n\r\nexport function* watchSaveNeed() {\r\n    yield takeLatest(SAVE_NEEDTYPE, saveNeedSaga)\r\n}\r\n\r\nexport function* watchFindByIdNeed() {\r\n    yield takeLatest(FIND_NEEDTYPE_BY_ID, findNeedByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateNeedById() {\r\n    yield takeLatest(UPDATE_NEEDTYPE, updateNeedSaga)\r\n}\r\n\r\nexport function* watchRemoveNeedById() {\r\n    yield takeLatest(REMOVE_NEEDTYPE_BY_ID, removeNeedById)\r\n}","D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\userSaga.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\approvalSaga.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\roleSaga.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["519","520","521","522","523","524"],"import {InputGroupText, InputGroup, FormGroup, Form, Input, Label, Button, Col, Spinner} from \"reactstrap\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {saveTransactionAction} from \"../../../actions/transactionAction\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {findCustomerByIdAction} from \"../../../actions/customerAction\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport NumberFormat from 'react-number-format';\r\nimport {findAllNeedAction} from \"../../../actions/needAction\";\r\nimport {findAllNeedReducer} from \"../../../configs/reducers/needReducer\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../../Error\";\r\n\r\nconst TransactionForm = ({savedTransaction, isLoading, error, saveTransactionAction, customer, findCustomerByIdAction, needs, findAllNeedAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({\r\n        customer: \"\"\r\n    })\r\n    const [currency, setCurrency] = useState({})\r\n    const [checkLoan, setCheckLoan] = useState({\r\n        maxLoan: 0,\r\n        loan: 0\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    const onReload = () => {\r\n        findAllNeedAction();\r\n    }\r\n\r\n    useEffect(onReload, [findAllNeedAction])\r\n\r\n    useEffect(() => {\r\n        findAllNeedAction()\r\n    }, [findAllNeedAction])\r\n\r\n    useEffect(() => {\r\n        if (id !== data.customer) {\r\n            findCustomerByIdAction(id);\r\n            setData({\r\n                ...data,\r\n                customer: id\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // console.log(CUSTOMER , customer, DATA , data)\r\n        console.log(data)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (savedTransaction) {\r\n\r\n            // if (localStorage.getItem(\"roles\") == \"MASTER\") {\r\n            //     swal(\"Success!\", \"Add transaction success!\", \"success\");\r\n            //     history.push('/transaction')\r\n            // } else if (localStorage.getItem(\"roles\") == \"STAFF\") {\r\n            //     swal(\"Success!\", \"Add transaction success!\", \"success\");\r\n            //     history.push('/approval/staff')\r\n            // } else {\r\n            //     swal(\"*Sorry you are not allowed to sign here\")\r\n            // }\r\n            history.push('/staff/transaction')\r\n            swal(\"Success!\", \"Add transaction success!\", \"success\")\r\n        }\r\n    }, [savedTransaction, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleCurrencyIncome = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setCheckLoan({...checkLoan, maxLoan: parseInt(value.split(\",\").join(\"\"))})\r\n\r\n        if (parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n    }\r\n    const handleCurrencyLoan = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setCheckLoan({...checkLoan, loan: parseInt(value.split(\",\").join(\"\"))})\r\n\r\n        if (parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n    }\r\n    console.log(\"INCOME\", checkLoan.maxLoan)\r\n    console.log(\"LOAN\", checkLoan.loan)\r\n    const handleCurrency = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        if (parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"EMPLOYEE\", customer?.employeeType)\r\n        if (customer?.employeeType == \"NON\"){\r\n            if (checkLoan.maxLoan / 2 > checkLoan.loan) {\r\n                saveTransactionAction(data)\r\n            } else {\r\n                swal(\"Sorry, Your loan is over\");\r\n            }\r\n        } else {\r\n            saveTransactionAction(data)\r\n        }\r\n    }\r\n    // console.log(\"DATA s\",data)\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to='/transaction'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"inputTransaction\") == \"true\" ?\r\n                    <>\r\n                        <Container error={error}/>\r\n                        <Header/>\r\n                        <Menu/>\r\n                        <div className=\"content-wrapper\">\r\n                            <div className=\"content-header\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row mb-2\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <h1 className=\"m-0 text-dark\">Form Transaction</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"content\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body table-responsive p-0\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form form-container\">\r\n                                                            {!isLoading ? needs &&\r\n                                                                <Form onSubmit={handleSubmit}>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"income\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Income\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <InputGroup>\r\n                                                                                <InputGroupText>Rp</InputGroupText>\r\n                                                                                {/*<Input >*/}\r\n                                                                                <NumberFormat\r\n                                                                                    required\r\n                                                                                    name=\"income\"\r\n                                                                                    min=\"0\"\r\n                                                                                    id=\"tanpa-rupiah\"\r\n                                                                                    onChange={handleCurrencyIncome}\r\n                                                                                    placeholder=\"input nominal\"\r\n                                                                                    thousandSeparator={true}/>\r\n                                                                                {/*</Input>*/}\r\n                                                                                <InputGroupText>.00</InputGroupText>\r\n                                                                            </InputGroup>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"outcome\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Outcome\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <InputGroup>\r\n                                                                                <InputGroupText>Rp</InputGroupText>\r\n                                                                                <NumberFormat\r\n                                                                                    required\r\n                                                                                    name=\"outcome\"\r\n                                                                                    min=\"0\"\r\n                                                                                    id=\"tanpa-rupiah\"\r\n                                                                                    onChange={handleCurrency}\r\n                                                                                    placeholder=\"input nominal\"\r\n                                                                                    thousandSeparator={true}/>\r\n                                                                                <InputGroupText>.00</InputGroupText>\r\n                                                                            </InputGroup>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"loan\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Loan Amount\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <InputGroup>\r\n                                                                                <InputGroupText>Rp</InputGroupText>\r\n                                                                                <NumberFormat\r\n                                                                                    style={{width:\"63vw\", height:\"calc(1.5em + .75rem + 2px)\",\r\n                                                                                        borderRadius:\"0.5vw\", outlineColor:\"#ced4da\"}}\r\n                                                                                    required\r\n                                                                                    name=\"loan\"\r\n                                                                                    min=\"0\"\r\n                                                                                    id=\"tanpa-rupiah\"\r\n                                                                                    onChange={handleCurrencyLoan}\r\n                                                                                    placeholder=\"input nominal\"\r\n                                                                                    thousandSeparator={true}/>\r\n                                                                                <InputGroupText>.00</InputGroupText>\r\n                                                                            </InputGroup>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label htmlFor=\"tenor\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Tenor\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                            <p style={{\r\n                                                                                fontSize: \"0.7vw\",\r\n                                                                                color: \"grey\"\r\n                                                                            }}>(max. 6 month)</p>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <Input required\r\n                                                                                   onChange={handleChange}\r\n                                                                                   type=\"number\" min=\"1\" max={6}\r\n                                                                                   name=\"tenor\"\r\n                                                                                   placeholder=\"tenor\"/>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"interestRate\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Interest Rate\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <InputGroup>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    name=\"interestRate\"\r\n                                                                                    placeholder=\"interest rate\" min={0}\r\n                                                                                    max={100}\r\n                                                                                    type=\"number\" min=\"0\" step=\"1\"/>\r\n                                                                                <InputGroupText>%</InputGroupText>\r\n                                                                            </InputGroup>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"select\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Loan Purpose\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <select\r\n                                                                                style={{width:\"69vw\", height:\"calc(1.5em + .75rem + 2px)\",\r\n                                                                                    borderRadius:\"0.5vw\", outlineColor:\"#ced4da\"}}\r\n                                                                                onChange={e => setData({\r\n                                                                                ...data,\r\n                                                                                needType: e.target.value\r\n                                                                            })}>\r\n                                                                                <option selected disabled hidden>Choose\r\n                                                                                    here\r\n                                                                                </option>\r\n                                                                                {needs?.list?.map((e, i) => (\r\n                                                                                    <option key={i} value={e.id}\r\n                                                                                            data={e}\r\n                                                                                            selected={e.id == data?.id || false}>{e.type}</option>\r\n                                                                                ))}\r\n                                                                            </select>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n\r\n                                                                    <FormGroup row>\r\n                                                                        <Label for=\"notes\" sm={2}\r\n                                                                               style={{textAlign: \"left\"}}>Note\r\n                                                                            <span style={{color: \"red\"}}> *</span>\r\n                                                                            <p style={{\r\n                                                                                fontSize: \"0.7vw\",\r\n                                                                                color: \"grey\"\r\n                                                                            }}>(max. 250 character )</p>\r\n                                                                        </Label>\r\n                                                                        <Col sm={10}>\r\n                                                                            <Input\r\n                                                                                required\r\n                                                                                onChange={handleChange}\r\n                                                                                type=\"textarea\"\r\n                                                                                name=\"notes\"\r\n                                                                                id=\"notes\"\r\n                                                                                maxLength={250}\r\n                                                                                placeholder=\"input note\"/>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                    <FormGroup check row>\r\n                                                                        <Col sm={{size: 10, offset: 2}}>\r\n                                                                            <Button style={{background: \"#e42256\"}}>\r\n                                                                                <FontAwesomeIcon icon={faSave}/>\r\n                                                                                Submit\r\n                                                                            </Button> {' '}\r\n                                                                            <Button href=\"/customer/staff\"\r\n                                                                                    style={{background: \"#e42256\"}}>\r\n                                                                                <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                                                                Cancel\r\n                                                                            </Button>\r\n                                                                        </Col>\r\n                                                                    </FormGroup>\r\n                                                                </Form> :\r\n                                                                <div>\r\n                                                                    <Spinner style={{\r\n                                                                        width: '5rem',\r\n                                                                        height: '5rem',\r\n                                                                        color: \"#e42256\"\r\n                                                                    }}/>{' '}\r\n                                                                </div>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.findCustomerByIdReducer.data,\r\n        savedTransaction: state.saveTransactionReducer.data,\r\n        isLoading: state.saveTransactionReducer.isLoading,\r\n        error: state.saveTransactionReducer.error,\r\n        needs: state.findAllNeedReducer.data\r\n    }\r\n    console.log(\"mapStateToProps\", findAllNeedReducer.data)\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveTransactionAction, findAllNeedAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionList\\TransactionList.js",["525","526","527","528","529","530"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\customerForm\\CustomerForm.js",["531","532","533","534","535","536","537","538","539","540","541","542","543","544","545"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {findCustomerByIdAction, saveCustomerAction} from \"../../../actions/customerAction\"\r\nimport { Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {Button, Form, FormGroup, Input, Label, Col, Spinner} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport SignIn from \"../../account/SignIn\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../../Error\";\r\nimport Footer from \"../../../components/dashboard/Footer\";\r\n\r\nconst CustomerForm = ({error, isLoading, saveCustomer, saveCustomerAction, customer, findCustomerByIdAction}) => {\r\n    const {id} = useParams()\r\n    const [roles, setRoles] = useState(localStorage.getItem(\"roles\"))\r\n    const [redirect] = useState(false)\r\n    const [photo, setPhoto] = useState({\r\n        profilePhoto: {},\r\n        idPhoto: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        idNumber: 0,\r\n        address: \"\",\r\n        employeeType: \"\",\r\n        contractLength: \"\",\r\n        contractStart: \"\",\r\n        idPhoto: \"\",\r\n        profilePhoto: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id !== data.id) {\r\n            findCustomerByIdAction(id);\r\n            setData(customer)\r\n            console.log(\"ini useffect\", customer)\r\n        }\r\n    }, [customer])\r\n\r\n    useEffect(() => {\r\n        if (saveCustomer) {\r\n            history.push('/staff/customer')\r\n        }\r\n    }, [saveCustomer, history])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto({...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name]: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const uploadIdPhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.idPhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    idPhoto: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const uploadProfilePhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.profilePhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    profilePhoto: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleNumber = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        if(name = \"idNumber\") {\r\n            if(value.length <= 16)\r\n                setData({...data, [name]: value})\r\n        } else {\r\n            setData({...data, [name]: value})\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        if(data.idNumber.length >= 1){\r\n            if(data.idNumber.length != 16){\r\n                swal(\"Sorry Id Number must be 16 digit!\", \"\", \"warning\");\r\n            }\r\n        }\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleEmployee = (e) => {\r\n        setData({...data, employeeType: e})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(data?.idNumber.length == 16  ) {\r\n            saveCustomerAction(data)\r\n            swal(\"Save Success!\", \"\", \"success\");\r\n        } else {\r\n            swal(\"Sorry Id Number must be 16 digit!\", \"\", \"warning\");\r\n        }\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/customer\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"inputCustomer\") == \"true\"  ?\r\n                    <>\r\n                        <div>\r\n                            <Container error={error}/>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Form Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                {!isLoading ?\r\n                                                                    <Form onSubmit={handleSubmit}>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"name\" sm={3} style={{textAlign:\"left\"}}>Customer's\r\n                                                                                Name\r\n                                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                                            </Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.name || ''}\r\n                                                                                    type=\"text\"\r\n                                                                                    name=\"name\"\r\n                                                                                    placeholder=\"input name\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"email\" sm={3} style={{textAlign:\"left\"}}>Email\r\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.email || ''}\r\n                                                                                    type=\"email\"\r\n                                                                                    name=\"email\"\r\n                                                                                    placeholder=\"input email\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"idNumber\" sm={3} style={{textAlign:\"left\"}}>ID\r\n                                                                                Number\r\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                            <Col sm={9}>\r\n\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleNumber}\r\n                                                                                    value={data?.idNumber || ''}\r\n                                                                                    type=\"number\"\r\n                                                                                    name=\"idNumber\"\r\n                                                                                    disabled={false}\r\n                                                                                    minLength={16}\r\n                                                                                    placeholder=\"input ID number\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"exampleText\"\r\n                                                                                   sm={3} style={{textAlign:\"left\"}}>Address\r\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.address || ''}\r\n                                                                                    type=\"textarea\"\r\n                                                                                    name=\"address\"\r\n                                                                                    placeholder=\"address\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"select\" sm={3} style={{textAlign:\"left\"}}>Type of\r\n                                                                                customer\r\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <DropdownList\r\n                                                                                    data={[\r\n                                                                                        {value: \"NON\", label: \"NON EMPLOYEE\"},\r\n                                                                                        {\r\n                                                                                            value: \"REGULAR\",\r\n                                                                                            label: \"EMPLOYEE\"\r\n                                                                                        },\r\n                                                                                        {\r\n                                                                                            value: \"CONTRACT\",\r\n                                                                                            label: \"CONTRACT\"\r\n                                                                                        }\r\n                                                                                    ]}\r\n                                                                                    value={data?.employeeType}\r\n                                                                                    placeholder=\"Select Employee Type\"\r\n                                                                                    handleDropdown={handleEmployee}\r\n                                                                                />\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                        {data.employeeType == \"CONTRACT\"\r\n                                                                        &&\r\n                                                                        <div>\r\n                                                                            <FormGroup row>\r\n                                                                                <Label for=\"contractStart\" sm={3} style={{textAlign:\"left\"}}>Contract\r\n                                                                                    Start\r\n                                                                                    <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                                <Col sm={9}>\r\n                                                                                    <Input\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.contractStart || ''}\r\n                                                                                        type=\"date\"\r\n                                                                                        name=\"contractStart\"\r\n                                                                                        id=\"contractStart\"\r\n                                                                                        placeholder=\"contract start\"/>\r\n                                                                                </Col>\r\n                                                                            </FormGroup>\r\n                                                                            <FormGroup row>\r\n                                                                                <Label for=\"contractLength\" sm={3} style={{textAlign:\"left\"}}>Contract\r\n                                                                                    Length\r\n                                                                                    <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                                <Col sm={9}>\r\n                                                                                    <Input\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.contractLength || ''}\r\n                                                                                        type=\"number\" min=\"1\"\r\n                                                                                        name=\"contractLength\"\r\n                                                                                        id=\"contractLength\"\r\n                                                                                        placeholder=\"contract length\"/>\r\n                                                                                </Col>\r\n                                                                            </FormGroup>\r\n                                                                        </div>\r\n                                                                        }\r\n                                                                        <FormGroup row>\r\n                                                                            <Label for=\"idPhoto\" sm={3} style={{textAlign:\"left\"}}>ID Card\r\n                                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                                                <p style={{fontSize:\"0.7vw\", color:\"grey\"}}>image (.jpeg / .png)</p></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    type=\"file\"\r\n                                                                                    name=\"idPhoto\"\r\n                                                                                    onChange={handlePhoto}\r\n                                                                                    accept=\"image/jpeg, image/png\">\r\n                                                                                </Input>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label for=\"profilePhoto\" sm={3} style={{textAlign:\"left\"}}>Profile\r\n                                                                                Photo\r\n                                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                                                <p style={{fontSize:\"0.7vw\", color:\"grey\"}}>image (.jpeg / .png)</p></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    type=\"file\"\r\n                                                                                    name=\"profilePhoto\"\r\n                                                                                    onChange={handlePhoto}\r\n                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup check row>\r\n                                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                                    Submit\r\n                                                                                </Button> {' '}\r\n                                                                                <Button href=\"/staff/customer\"\r\n                                                                                        style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon\r\n                                                                                        icon={faArrowLeft}/>\r\n                                                                                    Cancel\r\n                                                                                </Button>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                    </Form> :\r\n                                                                    <div>\r\n                                                                        <Spinner style={{ width: '5rem', height: '5rem', color:\"#e42256\" }} />{' '}\r\n                                                                    </div>\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n\r\n                        </div>\r\n                        // </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // call reducer\r\n        error: state.findCustomerByIdReducer.error || state.saveCustomerReducer.error,\r\n        customer: state.findCustomerByIdReducer.data,\r\n        isLoading: state.findCustomerByIdReducer.isLoading,\r\n        update: state.updateCustomerReducer,\r\n        saveCustomer: state.saveCustomerReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveCustomerAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerForm)\r\n","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomer\\ListCustomer.js",["546","547","548","549","550","551","552","553"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\dashboard\\Home.js",["554","555"],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\pagination.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\components\\Buttons\\Buttons.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\api.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\transaction\\transactionList\\TransactionRow.js",["556","557","558","559","560"],"import React from 'react'\r\nimport {Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheckCircle, faInfoCircle, faPencilAlt, faQuestionCircle, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst TransactionRow = ({data, onUpdate, number}) => {\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.transaction.customer.name}</td>\r\n            <td>{data.transaction.customer.employeeType} </td>\r\n            <td><NumberFormat value={data.transaction.loan}\r\n                              displayType={'text'}\r\n                              thousandSeparator={true}\r\n                              prefix={'Rp '}/></td>\r\n            <td>{data.transaction.tenor} month</td>\r\n            <td>{data.transaction.interestRate} %</td>\r\n            {/*{data.approve == true &&*/}\r\n            <td>\r\n                {/*<a href={`/transaction/${data.id}/detail`} className=\"text-muted\">*/}\r\n                {/*    <i className=\"fas fa-info-circle\" />*/}\r\n                {/*</a>{' '}*/}\r\n                {localStorage.getItem(\"approveTransaction\") == \"true\" &&\r\n                <Button href={`/approval/${data.id}`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faQuestionCircle}/>\r\n                </Button>}\r\n\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TransactionRow;\r\n\r\n","D:\\LAT. FINAL PROJECT\\final\\final\\src\\pages\\customer\\listCustomer\\RowCustomer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\sagas\\totalSaga.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\configs\\reducers\\totalReducer.js",[],"D:\\LAT. FINAL PROJECT\\final\\final\\src\\actions\\totalAction.js",[],{"ruleId":"561","replacedBy":"562"},{"ruleId":"563","replacedBy":"564"},{"ruleId":"565","severity":1,"message":"566","line":23,"column":11,"nodeType":"567","messageId":"568","endLine":23,"endColumn":18},{"ruleId":"565","severity":1,"message":"569","line":1,"column":27,"nodeType":"567","messageId":"568","endLine":1,"endColumn":35},{"ruleId":"565","severity":1,"message":"570","line":3,"column":9,"nodeType":"567","messageId":"568","endLine":3,"endColumn":30},{"ruleId":"565","severity":1,"message":"571","line":11,"column":9,"nodeType":"567","messageId":"568","endLine":11,"endColumn":18},{"ruleId":"565","severity":1,"message":"572","line":12,"column":9,"nodeType":"567","messageId":"568","endLine":12,"endColumn":25},{"ruleId":"573","severity":1,"message":"574","line":56,"column":8,"nodeType":"575","endLine":56,"endColumn":10,"suggestions":"576"},{"ruleId":"573","severity":1,"message":"574","line":62,"column":8,"nodeType":"575","endLine":62,"endColumn":19,"suggestions":"577"},{"ruleId":"578","severity":1,"message":"579","line":67,"column":48,"nodeType":"580","messageId":"581","endLine":67,"endColumn":50},{"ruleId":"565","severity":1,"message":"582","line":11,"column":18,"nodeType":"567","messageId":"568","endLine":11,"endColumn":23},{"ruleId":"565","severity":1,"message":"583","line":11,"column":25,"nodeType":"567","messageId":"568","endLine":11,"endColumn":30},{"ruleId":"565","severity":1,"message":"584","line":11,"column":32,"nodeType":"567","messageId":"568","endLine":11,"endColumn":41},{"ruleId":"565","severity":1,"message":"585","line":11,"column":51,"nodeType":"567","messageId":"568","endLine":11,"endColumn":60},{"ruleId":"565","severity":1,"message":"586","line":14,"column":8,"nodeType":"567","messageId":"568","endLine":14,"endColumn":20},{"ruleId":"573","severity":1,"message":"587","line":59,"column":8,"nodeType":"575","endLine":59,"endColumn":17,"suggestions":"588"},{"ruleId":"565","severity":1,"message":"589","line":83,"column":11,"nodeType":"567","messageId":"568","endLine":83,"endColumn":22},{"ruleId":"565","severity":1,"message":"590","line":92,"column":15,"nodeType":"567","messageId":"568","endLine":92,"endColumn":23},{"ruleId":"565","severity":1,"message":"591","line":111,"column":11,"nodeType":"567","messageId":"568","endLine":111,"endColumn":22},{"ruleId":"578","severity":1,"message":"579","line":134,"column":48,"nodeType":"580","messageId":"581","endLine":134,"endColumn":50},{"ruleId":"578","severity":1,"message":"592","line":234,"column":114,"nodeType":"580","messageId":"581","endLine":234,"endColumn":116},{"ruleId":"578","severity":1,"message":"579","line":273,"column":128,"nodeType":"580","messageId":"581","endLine":273,"endColumn":130},{"ruleId":"578","severity":1,"message":"579","line":18,"column":48,"nodeType":"580","messageId":"581","endLine":18,"endColumn":50},{"ruleId":"565","severity":1,"message":"593","line":7,"column":9,"nodeType":"567","messageId":"568","endLine":7,"endColumn":24},{"ruleId":"565","severity":1,"message":"594","line":8,"column":9,"nodeType":"567","messageId":"568","endLine":8,"endColumn":20},{"ruleId":"565","severity":1,"message":"595","line":8,"column":22,"nodeType":"567","messageId":"568","endLine":8,"endColumn":30},{"ruleId":"565","severity":1,"message":"596","line":8,"column":32,"nodeType":"567","messageId":"568","endLine":8,"endColumn":42},{"ruleId":"565","severity":1,"message":"597","line":8,"column":44,"nodeType":"567","messageId":"568","endLine":8,"endColumn":50},{"ruleId":"565","severity":1,"message":"598","line":15,"column":12,"nodeType":"567","messageId":"568","endLine":15,"endColumn":16},{"ruleId":"565","severity":1,"message":"599","line":15,"column":18,"nodeType":"567","messageId":"568","endLine":15,"endColumn":25},{"ruleId":"573","severity":1,"message":"587","line":20,"column":8,"nodeType":"575","endLine":20,"endColumn":32,"suggestions":"600"},{"ruleId":"573","severity":1,"message":"587","line":25,"column":8,"nodeType":"575","endLine":25,"endColumn":32,"suggestions":"601"},{"ruleId":"578","severity":1,"message":"579","line":30,"column":55,"nodeType":"580","messageId":"581","endLine":30,"endColumn":57},{"ruleId":"578","severity":1,"message":"579","line":84,"column":88,"nodeType":"580","messageId":"581","endLine":84,"endColumn":90},{"ruleId":"602","severity":1,"message":"603","line":103,"column":81,"nodeType":"604","endLine":103,"endColumn":122},{"ruleId":"602","severity":1,"message":"603","line":107,"column":81,"nodeType":"604","endLine":107,"endColumn":127},{"ruleId":"605","severity":1,"message":"606","line":120,"column":31,"nodeType":"607","endLine":121,"endColumn":24},{"ruleId":"565","severity":1,"message":"608","line":7,"column":9,"nodeType":"567","messageId":"568","endLine":7,"endColumn":16},{"ruleId":"565","severity":1,"message":"609","line":7,"column":33,"nodeType":"567","messageId":"568","endLine":7,"endColumn":40},{"ruleId":"565","severity":1,"message":"610","line":7,"column":42,"nodeType":"567","messageId":"568","endLine":7,"endColumn":48},{"ruleId":"573","severity":1,"message":"611","line":87,"column":8,"nodeType":"575","endLine":87,"endColumn":22,"suggestions":"612"},{"ruleId":"573","severity":1,"message":"587","line":97,"column":8,"nodeType":"575","endLine":97,"endColumn":43,"suggestions":"613"},{"ruleId":"578","severity":1,"message":"579","line":101,"column":60,"nodeType":"580","messageId":"581","endLine":101,"endColumn":62},{"ruleId":"578","severity":1,"message":"579","line":104,"column":65,"nodeType":"580","messageId":"581","endLine":104,"endColumn":67},{"ruleId":"578","severity":1,"message":"579","line":118,"column":58,"nodeType":"580","messageId":"581","endLine":118,"endColumn":60},{"ruleId":"578","severity":1,"message":"579","line":118,"column":114,"nodeType":"580","messageId":"581","endLine":118,"endColumn":116},{"ruleId":"578","severity":1,"message":"579","line":144,"column":103,"nodeType":"580","messageId":"581","endLine":144,"endColumn":105},{"ruleId":"578","severity":1,"message":"579","line":166,"column":104,"nodeType":"580","messageId":"581","endLine":166,"endColumn":106},{"ruleId":"578","severity":1,"message":"579","line":235,"column":105,"nodeType":"580","messageId":"581","endLine":235,"endColumn":107},{"ruleId":"578","severity":1,"message":"579","line":259,"column":105,"nodeType":"580","messageId":"581","endLine":259,"endColumn":107},{"ruleId":"573","severity":1,"message":"574","line":30,"column":8,"nodeType":"575","endLine":30,"endColumn":10,"suggestions":"614"},{"ruleId":"573","severity":1,"message":"574","line":34,"column":8,"nodeType":"575","endLine":34,"endColumn":30,"suggestions":"615"},{"ruleId":"578","severity":1,"message":"579","line":71,"column":55,"nodeType":"580","messageId":"581","endLine":71,"endColumn":57},{"ruleId":"573","severity":1,"message":"587","line":32,"column":8,"nodeType":"575","endLine":32,"endColumn":18,"suggestions":"616"},{"ruleId":"578","severity":1,"message":"579","line":72,"column":48,"nodeType":"580","messageId":"581","endLine":72,"endColumn":50},{"ruleId":"573","severity":1,"message":"574","line":56,"column":8,"nodeType":"575","endLine":56,"endColumn":27,"suggestions":"617"},{"ruleId":"573","severity":1,"message":"574","line":62,"column":8,"nodeType":"575","endLine":62,"endColumn":19,"suggestions":"618"},{"ruleId":"578","severity":1,"message":"579","line":67,"column":48,"nodeType":"580","messageId":"581","endLine":67,"endColumn":50},{"ruleId":"565","severity":1,"message":"619","line":1,"column":9,"nodeType":"567","messageId":"568","endLine":1,"endColumn":20},{"ruleId":"565","severity":1,"message":"620","line":1,"column":22,"nodeType":"567","messageId":"568","endLine":1,"endColumn":28},{"ruleId":"565","severity":1,"message":"585","line":1,"column":30,"nodeType":"567","messageId":"568","endLine":1,"endColumn":39},{"ruleId":"565","severity":1,"message":"621","line":1,"column":41,"nodeType":"567","messageId":"568","endLine":1,"endColumn":46},{"ruleId":"573","severity":1,"message":"574","line":30,"column":8,"nodeType":"575","endLine":30,"endColumn":30,"suggestions":"622"},{"ruleId":"573","severity":1,"message":"574","line":36,"column":8,"nodeType":"575","endLine":36,"endColumn":10,"suggestions":"623"},{"ruleId":"573","severity":1,"message":"624","line":42,"column":8,"nodeType":"575","endLine":42,"endColumn":22,"suggestions":"625"},{"ruleId":"578","severity":1,"message":"579","line":61,"column":59,"nodeType":"580","messageId":"581","endLine":61,"endColumn":61},{"ruleId":"565","severity":1,"message":"620","line":12,"column":9,"nodeType":"567","messageId":"568","endLine":12,"endColumn":15},{"ruleId":"565","severity":1,"message":"619","line":12,"column":17,"nodeType":"567","messageId":"568","endLine":12,"endColumn":28},{"ruleId":"573","severity":1,"message":"574","line":28,"column":8,"nodeType":"575","endLine":28,"endColumn":30,"suggestions":"626"},{"ruleId":"573","severity":1,"message":"574","line":32,"column":8,"nodeType":"575","endLine":32,"endColumn":10,"suggestions":"627"},{"ruleId":"573","severity":1,"message":"628","line":38,"column":8,"nodeType":"575","endLine":38,"endColumn":17,"suggestions":"629"},{"ruleId":"573","severity":1,"message":"630","line":50,"column":25,"nodeType":"575","endLine":50,"endColumn":68,"suggestions":"631"},{"ruleId":"632","severity":1,"message":"633","line":78,"column":61,"nodeType":"604","endLine":78,"endColumn":105},{"ruleId":"565","severity":1,"message":"634","line":2,"column":15,"nodeType":"567","messageId":"568","endLine":2,"endColumn":23},{"ruleId":"565","severity":1,"message":"635","line":2,"column":25,"nodeType":"567","messageId":"568","endLine":2,"endColumn":35},{"ruleId":"565","severity":1,"message":"571","line":2,"column":37,"nodeType":"567","messageId":"568","endLine":2,"endColumn":46},{"ruleId":"565","severity":1,"message":"636","line":1,"column":16,"nodeType":"567","messageId":"568","endLine":1,"endColumn":25},{"ruleId":"565","severity":1,"message":"569","line":1,"column":27,"nodeType":"567","messageId":"568","endLine":1,"endColumn":35},{"ruleId":"565","severity":1,"message":"634","line":2,"column":9,"nodeType":"567","messageId":"568","endLine":2,"endColumn":17},{"ruleId":"565","severity":1,"message":"635","line":2,"column":19,"nodeType":"567","messageId":"568","endLine":2,"endColumn":29},{"ruleId":"565","severity":1,"message":"571","line":2,"column":31,"nodeType":"567","messageId":"568","endLine":2,"endColumn":40},{"ruleId":"565","severity":1,"message":"637","line":11,"column":9,"nodeType":"567","messageId":"568","endLine":11,"endColumn":16},{"ruleId":"565","severity":1,"message":"585","line":11,"column":51,"nodeType":"567","messageId":"568","endLine":11,"endColumn":60},{"ruleId":"578","severity":1,"message":"579","line":22,"column":48,"nodeType":"580","messageId":"581","endLine":22,"endColumn":50},{"ruleId":"565","severity":1,"message":"583","line":9,"column":37,"nodeType":"567","messageId":"568","endLine":9,"endColumn":42},{"ruleId":"573","severity":1,"message":"638","line":42,"column":8,"nodeType":"567","endLine":42,"endColumn":12},{"ruleId":"573","severity":1,"message":"639","line":42,"column":8,"nodeType":"567","endLine":42,"endColumn":12,"suggestions":"640"},{"ruleId":"578","severity":1,"message":"579","line":87,"column":48,"nodeType":"580","messageId":"581","endLine":87,"endColumn":50},{"ruleId":"641","severity":1,"message":"642","line":292,"column":19,"nodeType":"643","messageId":"644","endLine":292,"endColumn":46,"fix":"645"},{"ruleId":"565","severity":1,"message":"646","line":10,"column":8,"nodeType":"567","messageId":"568","endLine":10,"endColumn":17},{"ruleId":"573","severity":1,"message":"574","line":51,"column":8,"nodeType":"575","endLine":51,"endColumn":27,"suggestions":"647"},{"ruleId":"573","severity":1,"message":"574","line":57,"column":8,"nodeType":"575","endLine":57,"endColumn":19,"suggestions":"648"},{"ruleId":"578","severity":1,"message":"579","line":62,"column":47,"nodeType":"580","messageId":"581","endLine":62,"endColumn":49},{"ruleId":"565","severity":1,"message":"649","line":11,"column":9,"nodeType":"567","messageId":"568","endLine":11,"endColumn":12},{"ruleId":"565","severity":1,"message":"650","line":11,"column":14,"nodeType":"567","messageId":"568","endLine":11,"endColumn":17},{"ruleId":"565","severity":1,"message":"620","line":11,"column":19,"nodeType":"567","messageId":"568","endLine":11,"endColumn":25},{"ruleId":"565","severity":1,"message":"619","line":11,"column":27,"nodeType":"567","messageId":"568","endLine":11,"endColumn":38},{"ruleId":"573","severity":1,"message":"574","line":30,"column":8,"nodeType":"575","endLine":30,"endColumn":30,"suggestions":"651"},{"ruleId":"573","severity":1,"message":"574","line":34,"column":8,"nodeType":"575","endLine":34,"endColumn":10,"suggestions":"652"},{"ruleId":"573","severity":1,"message":"653","line":40,"column":8,"nodeType":"575","endLine":40,"endColumn":19,"suggestions":"654"},{"ruleId":"578","severity":1,"message":"579","line":57,"column":55,"nodeType":"580","messageId":"581","endLine":57,"endColumn":57},{"ruleId":"578","severity":1,"message":"579","line":84,"column":92,"nodeType":"580","messageId":"581","endLine":84,"endColumn":94},{"ruleId":"565","severity":1,"message":"655","line":4,"column":3,"nodeType":"567","messageId":"568","endLine":4,"endColumn":34},{"ruleId":"565","severity":1,"message":"656","line":6,"column":27,"nodeType":"567","messageId":"568","endLine":6,"endColumn":33},{"ruleId":"565","severity":1,"message":"657","line":6,"column":35,"nodeType":"567","messageId":"568","endLine":6,"endColumn":40},{"ruleId":"565","severity":1,"message":"658","line":6,"column":42,"nodeType":"567","messageId":"568","endLine":6,"endColumn":48},{"ruleId":"565","severity":1,"message":"659","line":7,"column":8,"nodeType":"567","messageId":"568","endLine":7,"endColumn":20},{"ruleId":"565","severity":1,"message":"660","line":8,"column":8,"nodeType":"567","messageId":"568","endLine":8,"endColumn":23},{"ruleId":"565","severity":1,"message":"661","line":5,"column":3,"nodeType":"567","messageId":"568","endLine":5,"endColumn":15},{"ruleId":"565","severity":1,"message":"662","line":6,"column":11,"nodeType":"567","messageId":"568","endLine":6,"endColumn":17},{"ruleId":"565","severity":1,"message":"663","line":8,"column":3,"nodeType":"567","messageId":"568","endLine":8,"endColumn":12},{"ruleId":"565","severity":1,"message":"664","line":9,"column":3,"nodeType":"567","messageId":"568","endLine":9,"endColumn":13},{"ruleId":"565","severity":1,"message":"665","line":10,"column":3,"nodeType":"567","messageId":"568","endLine":10,"endColumn":10},{"ruleId":"632","severity":1,"message":"633","line":56,"column":11,"nodeType":"604","endLine":56,"endColumn":119},{"ruleId":"578","severity":1,"message":"579","line":83,"column":41,"nodeType":"580","messageId":"581","endLine":83,"endColumn":43},{"ruleId":"632","severity":1,"message":"666","line":21,"column":17,"nodeType":"604","endLine":21,"endColumn":63},{"ruleId":"565","severity":1,"message":"667","line":2,"column":9,"nodeType":"567","messageId":"568","endLine":2,"endColumn":22},{"ruleId":"565","severity":1,"message":"665","line":2,"column":24,"nodeType":"567","messageId":"568","endLine":2,"endColumn":31},{"ruleId":"565","severity":1,"message":"593","line":3,"column":9,"nodeType":"567","messageId":"568","endLine":3,"endColumn":24},{"ruleId":"632","severity":1,"message":"666","line":10,"column":9,"nodeType":"604","endLine":10,"endColumn":35},{"ruleId":"632","severity":1,"message":"633","line":31,"column":15,"nodeType":"604","endLine":31,"endColumn":47},{"ruleId":"578","severity":1,"message":"579","line":38,"column":45,"nodeType":"580","messageId":"581","endLine":38,"endColumn":47},{"ruleId":"578","severity":1,"message":"579","line":77,"column":56,"nodeType":"580","messageId":"581","endLine":77,"endColumn":58},{"ruleId":"578","severity":1,"message":"579","line":86,"column":58,"nodeType":"580","messageId":"581","endLine":86,"endColumn":60},{"ruleId":"578","severity":1,"message":"579","line":95,"column":61,"nodeType":"580","messageId":"581","endLine":95,"endColumn":63},{"ruleId":"578","severity":1,"message":"579","line":104,"column":59,"nodeType":"580","messageId":"581","endLine":104,"endColumn":61},{"ruleId":"578","severity":1,"message":"579","line":113,"column":69,"nodeType":"580","messageId":"581","endLine":113,"endColumn":71},{"ruleId":"578","severity":1,"message":"579","line":122,"column":56,"nodeType":"580","messageId":"581","endLine":122,"endColumn":58},{"ruleId":"578","severity":1,"message":"579","line":15,"column":56,"nodeType":"580","messageId":"581","endLine":15,"endColumn":58},{"ruleId":"578","severity":1,"message":"579","line":21,"column":59,"nodeType":"580","messageId":"581","endLine":21,"endColumn":61},{"ruleId":"632","severity":1,"message":"666","line":12,"column":17,"nodeType":"604","endLine":12,"endColumn":63},{"ruleId":"632","severity":1,"message":"666","line":12,"column":17,"nodeType":"604","endLine":12,"endColumn":63},{"ruleId":"565","severity":1,"message":"668","line":7,"column":8,"nodeType":"567","messageId":"568","endLine":7,"endColumn":18},{"ruleId":"565","severity":1,"message":"669","line":3,"column":9,"nodeType":"567","messageId":"568","endLine":3,"endColumn":22},{"ruleId":"565","severity":1,"message":"670","line":5,"column":9,"nodeType":"567","messageId":"568","endLine":5,"endColumn":20},{"ruleId":"565","severity":1,"message":"671","line":5,"column":5,"nodeType":"567","messageId":"568","endLine":5,"endColumn":30},{"ruleId":"565","severity":1,"message":"672","line":5,"column":32,"nodeType":"567","messageId":"568","endLine":5,"endColumn":65},{"ruleId":"565","severity":1,"message":"673","line":5,"column":67,"nodeType":"567","messageId":"568","endLine":5,"endColumn":100},{"ruleId":"565","severity":1,"message":"674","line":15,"column":9,"nodeType":"567","messageId":"568","endLine":15,"endColumn":12},{"ruleId":"675","severity":1,"message":"676","line":65,"column":5,"nodeType":"677","messageId":"678","endLine":65,"endColumn":62},{"ruleId":"565","severity":1,"message":"679","line":4,"column":5,"nodeType":"567","messageId":"568","endLine":4,"endColumn":18},{"ruleId":"565","severity":1,"message":"680","line":5,"column":5,"nodeType":"567","messageId":"568","endLine":5,"endColumn":26},{"ruleId":"565","severity":1,"message":"681","line":6,"column":5,"nodeType":"567","messageId":"568","endLine":6,"endColumn":26},{"ruleId":"565","severity":1,"message":"682","line":15,"column":92,"nodeType":"567","messageId":"568","endLine":15,"endColumn":118},{"ruleId":"565","severity":1,"message":"683","line":14,"column":43,"nodeType":"567","messageId":"568","endLine":14,"endColumn":58},{"ruleId":"565","severity":1,"message":"684","line":8,"column":5,"nodeType":"567","messageId":"568","endLine":8,"endColumn":25},{"ruleId":"565","severity":1,"message":"672","line":11,"column":5,"nodeType":"567","messageId":"568","endLine":11,"endColumn":38},{"ruleId":"565","severity":1,"message":"673","line":12,"column":5,"nodeType":"567","messageId":"568","endLine":12,"endColumn":38},{"ruleId":"565","severity":1,"message":"668","line":18,"column":8,"nodeType":"567","messageId":"568","endLine":18,"endColumn":18},{"ruleId":"675","severity":1,"message":"676","line":29,"column":13,"nodeType":"677","messageId":"678","endLine":29,"endColumn":46},{"ruleId":"573","severity":1,"message":"685","line":50,"column":8,"nodeType":"575","endLine":50,"endColumn":10,"suggestions":"686"},{"ruleId":"578","severity":1,"message":"579","line":121,"column":36,"nodeType":"580","messageId":"581","endLine":121,"endColumn":38},{"ruleId":"578","severity":1,"message":"579","line":140,"column":58,"nodeType":"580","messageId":"581","endLine":140,"endColumn":60},{"ruleId":"687","severity":1,"message":"688","line":259,"column":99,"nodeType":"689","endLine":259,"endColumn":106},{"ruleId":"578","severity":1,"message":"579","line":283,"column":108,"nodeType":"580","messageId":"581","endLine":283,"endColumn":110},{"ruleId":"675","severity":1,"message":"676","line":359,"column":5,"nodeType":"677","messageId":"678","endLine":359,"endColumn":60},{"ruleId":"565","severity":1,"message":"620","line":1,"column":9,"nodeType":"567","messageId":"568","endLine":1,"endColumn":15},{"ruleId":"565","severity":1,"message":"619","line":1,"column":17,"nodeType":"567","messageId":"568","endLine":1,"endColumn":28},{"ruleId":"573","severity":1,"message":"574","line":31,"column":8,"nodeType":"575","endLine":31,"endColumn":30,"suggestions":"690"},{"ruleId":"573","severity":1,"message":"574","line":35,"column":8,"nodeType":"575","endLine":35,"endColumn":10,"suggestions":"691"},{"ruleId":"573","severity":1,"message":"624","line":41,"column":8,"nodeType":"575","endLine":41,"endColumn":22,"suggestions":"692"},{"ruleId":"578","severity":1,"message":"579","line":59,"column":59,"nodeType":"580","messageId":"581","endLine":59,"endColumn":61},{"ruleId":"565","severity":1,"message":"693","line":11,"column":8,"nodeType":"567","messageId":"568","endLine":11,"endColumn":14},{"ruleId":"565","severity":1,"message":"694","line":20,"column":12,"nodeType":"567","messageId":"568","endLine":20,"endColumn":17},{"ruleId":"565","severity":1,"message":"695","line":20,"column":19,"nodeType":"567","messageId":"568","endLine":20,"endColumn":27},{"ruleId":"573","severity":1,"message":"696","line":45,"column":8,"nodeType":"575","endLine":45,"endColumn":18,"suggestions":"697"},{"ruleId":"565","severity":1,"message":"590","line":62,"column":15,"nodeType":"567","messageId":"568","endLine":62,"endColumn":23},{"ruleId":"565","severity":1,"message":"698","line":75,"column":11,"nodeType":"567","messageId":"568","endLine":75,"endColumn":24},{"ruleId":"565","severity":1,"message":"590","line":80,"column":15,"nodeType":"567","messageId":"568","endLine":80,"endColumn":23},{"ruleId":"565","severity":1,"message":"699","line":93,"column":11,"nodeType":"567","messageId":"568","endLine":93,"endColumn":29},{"ruleId":"565","severity":1,"message":"590","line":98,"column":15,"nodeType":"567","messageId":"568","endLine":98,"endColumn":23},{"ruleId":"700","severity":1,"message":"701","line":114,"column":12,"nodeType":"702","messageId":"703","endLine":114,"endColumn":29},{"ruleId":"578","severity":1,"message":"592","line":127,"column":37,"nodeType":"580","messageId":"581","endLine":127,"endColumn":39},{"ruleId":"578","severity":1,"message":"579","line":140,"column":34,"nodeType":"580","messageId":"581","endLine":140,"endColumn":36},{"ruleId":"578","severity":1,"message":"579","line":155,"column":55,"nodeType":"580","messageId":"581","endLine":155,"endColumn":57},{"ruleId":"578","severity":1,"message":"579","line":264,"column":92,"nodeType":"580","messageId":"581","endLine":264,"endColumn":94},{"ruleId":"605","severity":1,"message":"606","line":355,"column":31,"nodeType":"607","endLine":356,"endColumn":28},{"ruleId":"565","severity":1,"message":"693","line":5,"column":8,"nodeType":"567","messageId":"568","endLine":5,"endColumn":14},{"ruleId":"565","severity":1,"message":"619","line":13,"column":9,"nodeType":"567","messageId":"568","endLine":13,"endColumn":20},{"ruleId":"565","severity":1,"message":"620","line":13,"column":22,"nodeType":"567","messageId":"568","endLine":13,"endColumn":28},{"ruleId":"565","severity":1,"message":"585","line":13,"column":39,"nodeType":"567","messageId":"568","endLine":13,"endColumn":48},{"ruleId":"573","severity":1,"message":"574","line":32,"column":8,"nodeType":"575","endLine":32,"endColumn":30,"suggestions":"704"},{"ruleId":"573","severity":1,"message":"574","line":36,"column":8,"nodeType":"575","endLine":36,"endColumn":10,"suggestions":"705"},{"ruleId":"573","severity":1,"message":"653","line":42,"column":8,"nodeType":"575","endLine":42,"endColumn":19,"suggestions":"706"},{"ruleId":"578","severity":1,"message":"579","line":63,"column":57,"nodeType":"580","messageId":"581","endLine":63,"endColumn":59},{"ruleId":"573","severity":1,"message":"574","line":21,"column":8,"nodeType":"575","endLine":21,"endColumn":10,"suggestions":"707"},{"ruleId":"573","severity":1,"message":"708","line":28,"column":8,"nodeType":"575","endLine":28,"endColumn":19,"suggestions":"709"},{"ruleId":"565","severity":1,"message":"710","line":4,"column":9,"nodeType":"567","messageId":"568","endLine":4,"endColumn":22},{"ruleId":"565","severity":1,"message":"711","line":4,"column":24,"nodeType":"567","messageId":"568","endLine":4,"endColumn":36},{"ruleId":"565","severity":1,"message":"712","line":4,"column":38,"nodeType":"567","messageId":"568","endLine":4,"endColumn":49},{"ruleId":"565","severity":1,"message":"713","line":4,"column":69,"nodeType":"567","messageId":"568","endLine":4,"endColumn":76},{"ruleId":"578","severity":1,"message":"579","line":28,"column":61,"nodeType":"580","messageId":"581","endLine":28,"endColumn":63},"no-native-reassign",["714"],"no-negated-in-lhs",["715"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'findAccountByIdAction' is defined but never used.","'useParams' is defined but never used.","'PaginationButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onReload'. Either include it or remove the dependency array.","ArrayExpression",["716"],["717"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Input' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Container' is defined but never used.","'DropdownList' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["718"],"'handlePhoto' is assigned a value but never used.","'response' is assigned a value but never used.","'handleRoles' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'FontAwesomeIcon' is defined but never used.","'faHandshake' is defined but never used.","'faIdCard' is defined but never used.","'faMailBulk' is defined but never used.","'faUser' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["719"],["720"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'faCheck' is defined but never used.","'faCross' is defined but never used.","'faSave' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["721"],["722"],["723"],["724"],["725"],["726"],["727"],"'ButtonGroup' is defined but never used.","'Button' is defined but never used.","'Table' is defined but never used.",["728"],["729"],"React Hook useEffect has a missing dependency: 'transaction'. Either include it or remove the dependency array.",["730"],["731"],["732"],"React Hook useEffect has a missing dependency: 'report'. Either include it or remove the dependency array.",["733"],"React Hook useEffect has a missing dependency: 'reports'. Either include it or remove the dependency array.",["734"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'useEffect' is defined but never used.","'Spinner' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'id' and 'role'. Either include them or remove the dependency array. If 'setData' needs the current value of 'role', you can also switch to useReducer instead of useState and read 'role' in the reducer.",["735"],"no-whitespace-before-property","Unexpected whitespace before property data.","MemberExpression","unexpectedWhitespace",{"range":"736","text":"737"},"'ReasonRow' is defined but never used.",["738"],["739"],"'Row' is defined but never used.","'Col' is defined but never used.",["740"],["741"],"React Hook useEffect has a missing dependency: 'customer'. Either include it or remove the dependency array.",["742"],"'watchFindAllCustomerBySubmitter' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ListCustomer' is defined but never used.","'TransactionList' is defined but never used.","'faFolderPlus' is defined but never used.","'faLock' is defined but never used.","'faUserCog' is defined but never used.","'faUserPlus' is defined but never used.","'faUsers' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faCheckDouble' is defined but never used.","'pagination' is defined but never used.","'FaFontAwesome' is defined but never used.","'faArrowLeft' is defined but never used.","'FIND_TRANSACTION_BY_STAFF' is defined but never used.","'FIND_TRANSACTION_BY_STAFF_FAILURE' is defined but never used.","'FIND_TRANSACTION_BY_STAFF_SUCCESS' is defined but never used.","'act' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'SAVE_CUSTOMER' is defined but never used.","'SAVE_CUSTOMER_FAILURE' is defined but never used.","'SAVE_CUSTOMER_SUCCESS' is defined but never used.","'FIND_CUSTOMER_BY_SUBMITTER' is defined but never used.","'UPDATE_CUSTOMER' is defined but never used.","'FIND_REPORT_BY_STAFF' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["743"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["744"],["745"],["746"],"'SignIn' is defined but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["747"],"'uploadIdPhoto' is assigned a value but never used.","'uploadProfilePhoto' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing",["748"],["749"],["750"],["751"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["752"],"'faCheckCircle' is defined but never used.","'faInfoCircle' is defined but never used.","'faPencilAlt' is defined but never used.","'faTrash' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"759","fix":"761"},{"desc":"762","fix":"763"},{"desc":"764","fix":"765"},{"desc":"753","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"755","fix":"773"},{"desc":"767","fix":"774"},{"desc":"753","fix":"775"},{"desc":"776","fix":"777"},{"desc":"767","fix":"778"},{"desc":"753","fix":"779"},{"desc":"780","fix":"781"},{"desc":"782","fix":"783"},{"desc":"784","fix":"785"},[19030,19032],".",{"desc":"786","fix":"787"},{"desc":"755","fix":"788"},{"desc":"767","fix":"789"},{"desc":"753","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"767","fix":"795"},{"desc":"753","fix":"796"},{"desc":"776","fix":"797"},{"desc":"798","fix":"799"},{"desc":"767","fix":"800"},{"desc":"753","fix":"801"},{"desc":"791","fix":"802"},{"desc":"753","fix":"803"},{"desc":"804","fix":"805"},"Update the dependencies array to be: [onReload]",{"range":"806","text":"807"},"Update the dependencies array to be: [isRemoved, onReload]",{"range":"808","text":"809"},"Update the dependencies array to be: [account, id]",{"range":"810","text":"811"},"Update the dependencies array to be: [findCustomerByIdAction, id]",{"range":"812","text":"813"},{"range":"814","text":"813"},"Update the dependencies array to be: [history, savedApprove]",{"range":"815","text":"816"},"Update the dependencies array to be: [id, transaction, transactionSubmitter]",{"range":"817","text":"818"},{"range":"819","text":"807"},"Update the dependencies array to be: [onReload, pageParam, sizeParam]",{"range":"820","text":"821"},"Update the dependencies array to be: [id, needType]",{"range":"822","text":"823"},"Update the dependencies array to be: [findAllNeedAction, onReload]",{"range":"824","text":"825"},{"range":"826","text":"809"},{"range":"827","text":"821"},{"range":"828","text":"807"},"Update the dependencies array to be: [transaction, transactions]",{"range":"829","text":"830"},{"range":"831","text":"821"},{"range":"832","text":"807"},"Update the dependencies array to be: [report, reports]",{"range":"833","text":"834"},"Update the dependencies array to be: [findAllReportAction, pageParam, reports, sizeParam]",{"range":"835","text":"836"},"Update the dependencies array to be: [id, role]",{"range":"837","text":"838"},"Update the dependencies array to be: [findAllRoleAction, onReload]",{"range":"839","text":"840"},{"range":"841","text":"809"},{"range":"842","text":"821"},{"range":"843","text":"807"},"Update the dependencies array to be: [customer, customers]",{"range":"844","text":"845"},"Update the dependencies array to be: [data, findCustomerByIdAction, id]",{"range":"846","text":"847"},{"range":"848","text":"821"},{"range":"849","text":"807"},{"range":"850","text":"830"},"Update the dependencies array to be: [customer, data.id, findCustomerByIdAction, id]",{"range":"851","text":"852"},{"range":"853","text":"821"},{"range":"854","text":"807"},{"range":"855","text":"845"},{"range":"856","text":"807"},"Update the dependencies array to be: [dashboard, data]",{"range":"857","text":"858"},[1770,1772],"[onReload]",[1868,1879],"[isRemoved, onReload]",[1950,1959],"[account, id]",[800,824],"[findCustomerByIdAction, id]",[920,944],[2598,2612],"[history, savedApprove]",[2961,2996],"[id, transaction, transactionSubmitter]",[1270,1272],[1327,1349],"[onReload, pageParam, sizeParam]",[1238,1248],"[id, needType]",[1677,1696],"[findAllNeedAction, onReload]",[1792,1803],[1237,1259],[1352,1354],[1469,1483],"[transaction, transactions]",[1037,1059],[1114,1116],[1216,1225],"[report, reports]",[1502,1545],"[findAllReportAction, pageParam, reports, sizeParam]",[1538,1542],"[id, role]",[1573,1592],"[findAllRoleAction, onReload]",[1687,1698],[1197,1219],[1274,1276],[1382,1393],"[customer, customers]",[1878,1880],"[data, findCustomerByIdAction, id]",[1198,1220],[1275,1277],[1392,1406],[1776,1786],"[customer, data.id, findCustomerByIdAction, id]",[1208,1230],[1285,1287],[1394,1405],[562,564],[675,686],"[dashboard, data]"]