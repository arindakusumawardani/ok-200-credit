[{"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\index.js":"1","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\reportWebVitals.js":"2","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\App.js":"3","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\routes.js":"4","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\store.js":"5","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\SignIn.js":"6","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\AccountList.js":"7","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\SignUp.js":"8","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\home\\HomeMaster.js":"9","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\TransactionDetail.js":"10","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\DetailCustomer.js":"11","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportList.js":"12","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportDetail.js":"13","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonUse.js":"14","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\loginAction.js":"15","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\index.js":"16","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\index.js":"17","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\index.js":"18","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\index.js":"19","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerForm\\index.js":"20","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\index.js":"21","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\index.js":"22","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\signupAction.js":"23","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\AccountRow.js":"24","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Footer.js":"25","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Menu.js":"26","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Header.js":"27","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\transactionAction.js":"28","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Home.js":"29","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\approvalAction.js":"30","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\customerAction.js":"31","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\Containers\\Container.js":"32","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\DropdownList\\DropdownList.js":"33","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportRow.js":"34","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\reportAction.js":"35","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\home\\card\\CardboxMaster.js":"36","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\navbar\\NavbarMaster.js":"37","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\sidebar\\SideNavBar.js":"38","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\constants\\actions.js":"39","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\Containers\\index.js":"40","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\customerReducer.js":"41","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\transactionReducer.js":"42","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\loginReducer.js":"43","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\signupReducer.js":"44","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\approvalReducer.js":"45","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\reportReducer.js":"46","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\loginSaga.js":"47","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\customerSaga.js":"48","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\transactionSaga.js":"49","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\reportSaga.js":"50","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\approvalSaga.js":"51","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\signupSaga.js":"52","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerForm\\CustomerForm.js":"53","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\ListCustomer.js":"54","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"55","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionList.js":"56","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Home.js":"57","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\api.js":"58","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\RowCustomer.js":"59","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"60","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Error\\index.js":"61","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Error\\Error.js":"62","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerList\\CustomerRow.js":"63","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js":"64","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\Row.js":"65","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\needReducer.js":"66","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonRow.js":"67","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\needAction.js":"68","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonForm.js":"69","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\index.js":"70","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\App.js":"71","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\reportWebVitals.js":"72","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\routes.js":"73","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\store.js":"74","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\TransactionDetail.js":"75","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\home\\HomeMaster.js":"76","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonUse.js":"77","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportList.js":"78","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\DetailCustomer.js":"79","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js":"80","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\listTransactionByStaff\\ListTransactionByStaff.js":"81","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportDetail.js":"82","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonForm.js":"83","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\loginAction.js":"84","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\Error\\index.js":"85","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\index.js":"86","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\index.js":"87","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\index.js":"88","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\index.js":"89","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\customerForm\\index.js":"90","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\index.js":"91","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\index.js":"92","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\signupAction.js":"93","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Header.js":"94","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Menu.js":"95","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Footer.js":"96","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\DropdownList\\DropdownList.js":"97","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\transactionAction.js":"98","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\approvalAction.js":"99","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\Home.js":"100","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\Containers\\Container.js":"101","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\needAction.js":"102","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\Row.js":"103","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\navbar\\NavbarMaster.js":"104","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\home\\card\\CardboxMaster.js":"105","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\sidebar\\SideNavBar.js":"106","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\customerAction.js":"107","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\reportAction.js":"108","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportRow.js":"109","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\constants\\actions.js":"110","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonRow.js":"111","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"112","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\transactionReducer.js":"113","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\customerReducer.js":"114","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\loginReducer.js":"115","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\Error\\Error.js":"116","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\signupReducer.js":"117","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\reportReducer.js":"118","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\needReducer.js":"119","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\approvalReducer.js":"120","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\loginSaga.js":"121","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\signupSaga.js":"122","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\customerSaga.js":"123","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\transactionSaga.js":"124","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\reportSaga.js":"125","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\approvalSaga.js":"126","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\needSaga.js":"127","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"128","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionList.js":"129","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\customerForm\\CustomerForm.js":"130","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\ListCustomer.js":"131","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Home.js":"132","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\Containers\\index.js":"133","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\api.js":"134","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\RowCustomer.js":"135","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\listTransactionByStaff\\Row.js":"136","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\reportByStaff\\ListReportByStaff.js":"137","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\reportByStaff\\Row.js":"138","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\SignIn.js":"139","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\AccountList.js":"140","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\SignUp.js":"141","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\EditAccount.js":"142","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\AccountRow.js":"143","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\profile\\EditPassword.js":"144"},{"size":569,"mtime":1616467501880,"results":"145","hashOfConfig":"146"},{"size":375,"mtime":1616467501900,"results":"147","hashOfConfig":"146"},{"size":889,"mtime":1616467501853,"results":"148","hashOfConfig":"146"},{"size":3105,"mtime":1616597333577,"results":"149","hashOfConfig":"146"},{"size":349,"mtime":1616467501879,"results":"150","hashOfConfig":"146"},{"size":8096,"mtime":1616558157575,"results":"151","hashOfConfig":"146"},{"size":5630,"mtime":1616595919568,"results":"152","hashOfConfig":"146"},{"size":20038,"mtime":1616555051836,"results":"153","hashOfConfig":"146"},{"size":2478,"mtime":1616467501889,"results":"154","hashOfConfig":"146"},{"size":12440,"mtime":1616595503109,"results":"155","hashOfConfig":"146"},{"size":8860,"mtime":1616467992761,"results":"156","hashOfConfig":"146"},{"size":7692,"mtime":1616596562233,"results":"157","hashOfConfig":"146"},{"size":12228,"mtime":1616467992780,"results":"158","hashOfConfig":"146"},{"size":5337,"mtime":1616596735562,"results":"159","hashOfConfig":"146"},{"size":194,"mtime":1616467501854,"results":"160","hashOfConfig":"146"},{"size":1540,"mtime":1616573815222,"results":"161","hashOfConfig":"146"},{"size":1516,"mtime":1616599845239,"results":"162","hashOfConfig":"146"},{"size":41,"mtime":1616467501897,"results":"163","hashOfConfig":"146"},{"size":38,"mtime":1616467501887,"results":"164","hashOfConfig":"146"},{"size":38,"mtime":1616467501884,"results":"165","hashOfConfig":"146"},{"size":41,"mtime":1616467501899,"results":"166","hashOfConfig":"146"},{"size":1054,"mtime":1616467992755,"results":"167","hashOfConfig":"146"},{"size":741,"mtime":1616467501854,"results":"168","hashOfConfig":"146"},{"size":1244,"mtime":1616596074391,"results":"169","hashOfConfig":"146"},{"size":286,"mtime":1616467501868,"results":"170","hashOfConfig":"146"},{"size":5733,"mtime":1616597333587,"results":"171","hashOfConfig":"146"},{"size":1964,"mtime":1616560471058,"results":"172","hashOfConfig":"146"},{"size":620,"mtime":1616467501855,"results":"173","hashOfConfig":"146"},{"size":2245,"mtime":1616467501882,"results":"174","hashOfConfig":"146"},{"size":459,"mtime":1616573815385,"results":"175","hashOfConfig":"146"},{"size":603,"mtime":1616598186129,"results":"176","hashOfConfig":"146"},{"size":495,"mtime":1616467501866,"results":"177","hashOfConfig":"146"},{"size":822,"mtime":1616467501867,"results":"178","hashOfConfig":"146"},{"size":1684,"mtime":1616467992787,"results":"179","hashOfConfig":"146"},{"size":160,"mtime":1616467501854,"results":"180","hashOfConfig":"146"},{"size":2727,"mtime":1616467501890,"results":"181","hashOfConfig":"146"},{"size":3650,"mtime":1616467501869,"results":"182","hashOfConfig":"146"},{"size":3030,"mtime":1616467501871,"results":"183","hashOfConfig":"146"},{"size":4892,"mtime":1616599845098,"results":"184","hashOfConfig":"146"},{"size":35,"mtime":1616467501866,"results":"185","hashOfConfig":"146"},{"size":3968,"mtime":1616550260293,"results":"186","hashOfConfig":"146"},{"size":3721,"mtime":1616467501876,"results":"187","hashOfConfig":"146"},{"size":898,"mtime":1616467501874,"results":"188","hashOfConfig":"146"},{"size":3604,"mtime":1616467501875,"results":"189","hashOfConfig":"146"},{"size":2743,"mtime":1616573815293,"results":"190","hashOfConfig":"146"},{"size":931,"mtime":1616467501875,"results":"191","hashOfConfig":"146"},{"size":802,"mtime":1616467501877,"results":"192","hashOfConfig":"146"},{"size":2793,"mtime":1616550260220,"results":"193","hashOfConfig":"146"},{"size":3679,"mtime":1616599845184,"results":"194","hashOfConfig":"146"},{"size":712,"mtime":1616560246931,"results":"195","hashOfConfig":"146"},{"size":2163,"mtime":1616573815331,"results":"196","hashOfConfig":"146"},{"size":3052,"mtime":1616560246848,"results":"197","hashOfConfig":"146"},{"size":22414,"mtime":1616576151414,"results":"198","hashOfConfig":"146"},{"size":6657,"mtime":1616490625270,"results":"199","hashOfConfig":"146"},{"size":19482,"mtime":1616593214623,"results":"200","hashOfConfig":"146"},{"size":6149,"mtime":1616596116258,"results":"201","hashOfConfig":"146"},{"size":4083,"mtime":1616467992751,"results":"202","hashOfConfig":"146"},{"size":636,"mtime":1616467501872,"results":"203","hashOfConfig":"146"},{"size":930,"mtime":1616552479273,"results":"204","hashOfConfig":"146"},{"size":1170,"mtime":1616571545784,"results":"205","hashOfConfig":"146"},{"size":33,"mtime":1616467501882,"results":"206","hashOfConfig":"146"},{"size":1618,"mtime":1616519593107,"results":"207","hashOfConfig":"146"},{"size":1274,"mtime":1616467501886,"results":"208","hashOfConfig":"146"},{"size":6231,"mtime":1616597789392,"results":"209","hashOfConfig":"146"},{"size":1027,"mtime":1616552535917,"results":"210","hashOfConfig":"146"},{"size":2065,"mtime":1616565009419,"results":"211","hashOfConfig":"146"},{"size":250,"mtime":1616596735536,"results":"212","hashOfConfig":"146"},{"size":296,"mtime":1616559611069,"results":"213","hashOfConfig":"146"},{"size":6049,"mtime":1616560655467,"results":"214","hashOfConfig":"146"},{"size":569,"mtime":1616467501880,"results":"215","hashOfConfig":"216"},{"size":891,"mtime":1616820659496,"results":"217","hashOfConfig":"216"},{"size":375,"mtime":1616467501900,"results":"218","hashOfConfig":"216"},{"size":3962,"mtime":1616822282748,"results":"219","hashOfConfig":"216"},{"size":349,"mtime":1616467501879,"results":"220","hashOfConfig":"216"},{"size":17385,"mtime":1616820659517,"results":"221","hashOfConfig":"216"},{"size":2478,"mtime":1616467501889,"results":"222","hashOfConfig":"216"},{"size":5511,"mtime":1616820659512,"results":"223","hashOfConfig":"216"},{"size":7731,"mtime":1616820659514,"results":"224","hashOfConfig":"216"},{"size":8295,"mtime":1616820659507,"results":"225","hashOfConfig":"216"},{"size":6231,"mtime":1616601914865,"results":"226","hashOfConfig":"216"},{"size":6182,"mtime":1616820659519,"results":"227","hashOfConfig":"216"},{"size":12228,"mtime":1616467992780,"results":"228","hashOfConfig":"216"},{"size":6485,"mtime":1616820659511,"results":"229","hashOfConfig":"216"},{"size":194,"mtime":1616467501854,"results":"230","hashOfConfig":"216"},{"size":33,"mtime":1616467501882,"results":"231","hashOfConfig":"216"},{"size":1672,"mtime":1616606925890,"results":"232","hashOfConfig":"216"},{"size":1571,"mtime":1616606925762,"results":"233","hashOfConfig":"216"},{"size":41,"mtime":1616467501899,"results":"234","hashOfConfig":"216"},{"size":41,"mtime":1616467501897,"results":"235","hashOfConfig":"216"},{"size":38,"mtime":1616467501884,"results":"236","hashOfConfig":"216"},{"size":38,"mtime":1616467501887,"results":"237","hashOfConfig":"216"},{"size":1054,"mtime":1616467992755,"results":"238","hashOfConfig":"216"},{"size":741,"mtime":1616467501854,"results":"239","hashOfConfig":"216"},{"size":3124,"mtime":1616822334087,"results":"240","hashOfConfig":"216"},{"size":5956,"mtime":1616820659500,"results":"241","hashOfConfig":"216"},{"size":286,"mtime":1616467501868,"results":"242","hashOfConfig":"216"},{"size":822,"mtime":1616467501867,"results":"243","hashOfConfig":"216"},{"size":620,"mtime":1616467501855,"results":"244","hashOfConfig":"216"},{"size":459,"mtime":1616573815385,"results":"245","hashOfConfig":"216"},{"size":2245,"mtime":1616467501882,"results":"246","hashOfConfig":"216"},{"size":495,"mtime":1616467501866,"results":"247","hashOfConfig":"216"},{"size":296,"mtime":1616559611069,"results":"248","hashOfConfig":"216"},{"size":1027,"mtime":1616552535917,"results":"249","hashOfConfig":"216"},{"size":3650,"mtime":1616467501869,"results":"250","hashOfConfig":"216"},{"size":2727,"mtime":1616467501890,"results":"251","hashOfConfig":"216"},{"size":3030,"mtime":1616467501871,"results":"252","hashOfConfig":"216"},{"size":603,"mtime":1616598186129,"results":"253","hashOfConfig":"216"},{"size":160,"mtime":1616467501854,"results":"254","hashOfConfig":"216"},{"size":3064,"mtime":1616820659515,"results":"255","hashOfConfig":"216"},{"size":5184,"mtime":1616820659501,"results":"256","hashOfConfig":"216"},{"size":592,"mtime":1616662999040,"results":"257","hashOfConfig":"216"},{"size":1403,"mtime":1616687023458,"results":"258","hashOfConfig":"216"},{"size":4775,"mtime":1616604638407,"results":"259","hashOfConfig":"216"},{"size":3968,"mtime":1616601914943,"results":"260","hashOfConfig":"216"},{"size":898,"mtime":1616467501874,"results":"261","hashOfConfig":"216"},{"size":1419,"mtime":1616609012013,"results":"262","hashOfConfig":"216"},{"size":3604,"mtime":1616820610802,"results":"263","hashOfConfig":"216"},{"size":1932,"mtime":1616606925687,"results":"264","hashOfConfig":"216"},{"size":2067,"mtime":1616820659502,"results":"265","hashOfConfig":"216"},{"size":2779,"mtime":1616645095635,"results":"266","hashOfConfig":"216"},{"size":802,"mtime":1616467501877,"results":"267","hashOfConfig":"216"},{"size":3099,"mtime":1616823913577,"results":"268","hashOfConfig":"216"},{"size":2793,"mtime":1616550260220,"results":"269","hashOfConfig":"216"},{"size":3674,"mtime":1616604707624,"results":"270","hashOfConfig":"216"},{"size":1452,"mtime":1616606925914,"results":"271","hashOfConfig":"216"},{"size":2403,"mtime":1616647108743,"results":"272","hashOfConfig":"216"},{"size":1552,"mtime":1616560415472,"results":"273","hashOfConfig":"216"},{"size":18878,"mtime":1616820659522,"results":"274","hashOfConfig":"216"},{"size":6194,"mtime":1616820659522,"results":"275","hashOfConfig":"216"},{"size":24541,"mtime":1616820659509,"results":"276","hashOfConfig":"216"},{"size":6725,"mtime":1616820659510,"results":"277","hashOfConfig":"216"},{"size":5808,"mtime":1616820659499,"results":"278","hashOfConfig":"216"},{"size":35,"mtime":1616467501866,"results":"279","hashOfConfig":"216"},{"size":636,"mtime":1616645520763,"results":"280","hashOfConfig":"216"},{"size":930,"mtime":1616552479273,"results":"281","hashOfConfig":"216"},{"size":1087,"mtime":1616686910126,"results":"282","hashOfConfig":"216"},{"size":7574,"mtime":1616820659516,"results":"283","hashOfConfig":"216"},{"size":2638,"mtime":1616820659516,"results":"284","hashOfConfig":"216"},{"size":7727,"mtime":1616820659505,"results":"285","hashOfConfig":"216"},{"size":5756,"mtime":1616823336560,"results":"286","hashOfConfig":"216"},{"size":20296,"mtime":1616823869511,"results":"287","hashOfConfig":"216"},{"size":15721,"mtime":1616820659505,"results":"288","hashOfConfig":"216"},{"size":1429,"mtime":1616820958389,"results":"289","hashOfConfig":"216"},{"size":10658,"mtime":1616823336484,"results":"290","hashOfConfig":"216"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},"1xf8cdu",{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"293"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"293"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"293"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"293"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"293"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"293"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"293"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"293"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"293"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"293"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"293"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"293"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"293"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"293"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"293"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"293"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"293"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"293"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"293"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},"5yjydr",{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"450"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"450"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"450"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"450"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"450"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"450"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"450"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"450"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"450"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"450"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"450"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"450"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"450"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"450"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"450"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"450"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"450"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"450"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"450"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"450"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"450"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"450"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"450"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"450"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"450"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"450"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"450"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"450"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"600"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"450"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"450"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"450"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"450"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"450"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"450"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"450"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"450"},"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\index.js",[],["630","631"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\reportWebVitals.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\App.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\routes.js",["632","633","634"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\store.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\SignIn.js",["635"],"import React, {useEffect, useState} from \"react\";\r\nimport {faKey, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Button} from \"reactstrap\";\r\nimport undraw_Access_account_re_8spm from \"../../assets/images/undraw_Access_account_re_8spm.svg\"\r\nimport \"./login.css\"\r\nimport {useHistory} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginRequestAction} from \"../../actions/loginAction\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst SignIn = ({loginData, isLoading, error, dispatchLoginAction}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const [validation, setValidation] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onSubmit = () => {\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                username: username,\r\n                password: password\r\n            }\r\n            dispatchLoginAction(data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // jika login sukses\r\n        if (loginData) {\r\n            localStorage.setItem('token', loginData.token)\r\n            localStorage.setItem('roles', loginData.roles)\r\n            localStorage.setItem('username', loginData.username)\r\n            console.log(\"sukses login\", loginData)\r\n\r\n            //pilih role\r\n            if (loginData.roles === \"MASTER\") {\r\n                history.push('/master/home')\r\n            } else if (loginData.roles === \"STAFF\") {\r\n                history.push('/master/home')\r\n            } else if (loginData.roles === \"SUPERVISOR\") {\r\n                history.push('/master/home')\r\n            } else {\r\n                setValidation(\"*Sorry you are not allowed to sign here\")\r\n            }\r\n\r\n            swal(\"Login Success!\", \"\", \"success\");\r\n            // history.push('/master/home')\r\n        }\r\n        // jika login error\r\n        if (error) {\r\n            setValidation(\"*Username or Password invalid!\")\r\n            swal(\"Login Error!\", \"\", \"error\")\r\n        }\r\n\r\n    }, [loginData, error])\r\n\r\n    useEffect(() => {\r\n        setValidation(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n    }, [username, password])\r\n\r\n    const validate = () => {\r\n        //var kosong, agar bisa di update isinya\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (usernameError || passwordError) {\r\n            setUsernameError(usernameError);\r\n            setPasswordError(passwordError);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <div>\r\n                        <img src={undraw_Access_account_re_8spm} alt=\"\"\r\n                             className=\"img-fluid d-none d-md-block\"/>\r\n                             <br/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Sign In</h1><br/>\r\n                    <form>\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"username\"\r\n                                       type=\"text\"\r\n                                       name=\"username\"\r\n                                       placeholder=\"Username\"\r\n                                       onChange={(e) => handleUsernameChange(e)}\r\n                                       value={username}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>\r\n                                {usernameError}\r\n                            </div>\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       onChange={(e) => handlePasswordChange(e)}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>{passwordError}</div>\r\n\r\n                            <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                <div style={{fontSize: 12, color: \"red\"}}>{validation}</div>\r\n                                <Button\r\n                                    style={{background: \"#e42256\"}}\r\n                                    onClick={() => onSubmit()}\r\n                                    block>\r\n                                        <span className=\"font-weight-bold\"\r\n                                              style={{color: \"#ffff\"}}>SIGN IN</span>\r\n                                </Button>\r\n                            </div>\r\n                            {/*<div className=\"text-center w-100\">*/}\r\n                            {/*    <br/>*/}\r\n                            {/*    <p className=\"text-muted font-weight-bold\">*/}\r\n                            {/*        Forgot Password?*/}\r\n                            {/*        <a href=\"#\" className=\"text-primary ml-2\">Click here</a>*/}\r\n                            {/*    </p>*/}\r\n                            {/*    <hr/>*/}\r\n                            {/*</div>*/}\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginData: state.loginReducer.data,\r\n        isLoading: state.loginReducer.isLoading,\r\n        error: state.loginReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchLoginAction: loginRequestAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\AccountList.js",["636","637","638"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\SignUp.js",["639","640","641","642","643","644","645","646"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope,\r\n    faKey, faServer,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./login.css\"\r\nimport {Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\r\nimport {findAccountByIdAction, saveAccountAction} from \"../../actions/signupAction\";\r\nimport {connect} from \"react-redux\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst SignUp = ({saveDispatch, error, saveAccount, users, update, isLoading}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [roles, setRoles] = useState('')\r\n\r\n    const [photo, setPhoto] = useState({\r\n        profilePicture: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        username: \"\",\r\n        fullName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        profilePicture: \"\",\r\n        role: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id !== data.id) {\r\n            findAccountByIdAction(id);\r\n            setData(users)\r\n        }\r\n    }, [users])\r\n\r\n    useEffect(() => {\r\n        if (saveAccount) {\r\n            history.push('/master')\r\n        }\r\n        if (error) {\r\n            swal(\"Register error\", `${error.message}`, \"error\")\r\n        }\r\n    }, [saveAccount, history, error])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto({...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name]: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleRoles = (e) => {\r\n        setData({\r\n            ...data,\r\n            role: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n        saveDispatch(data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/users\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/dashboard\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_Updated_resume_re_q1or} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Create Account</h1>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        {!isLoading ?\r\n                                                                            <Form onSubmit={handleSubmit}>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUserCircle}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.fullName || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"fullName\"\r\n                                                                                            placeholder=\"Full Name\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.username || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"username\"\r\n                                                                                            placeholder=\"Username\"\r\n                                                                                            minLength={4}\r\n                                                                                            maxLength={10}\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.email || \"\"}\r\n                                                                                            type=\"email\"\r\n                                                                                            name=\"email\"\r\n                                                                                            placeholder=\"Email Address\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n                                        {/*                                            <div*/}\r\n                                        {/*                                                className=\"input-group col-lg-12 mb-4\">*/}\r\n                                        {/*                                                <div*/}\r\n                                        {/*                                                    className=\"input-group-prepend\">*/}\r\n                                        {/*<span className=\"input-group-text bg-white px-4 border-md border-right-0\">*/}\r\n                                        {/*    <FontAwesomeIcon icon={faKey}/>*/}\r\n                                        {/*</span>*/}\r\n                                        {/*                                                </div>*/}\r\n                                        {/*                                                <input*/}\r\n                                        {/*                                                    required*/}\r\n                                        {/*                                                    onChange={handleChange}*/}\r\n                                        {/*                                                    value={data?.password}*/}\r\n                                        {/*                                                    type=\"password\"*/}\r\n                                        {/*                                                    name=\"password\"*/}\r\n                                        {/*                                                    placeholder=\"Password\"*/}\r\n                                        {/*                                                    minLength={4}*/}\r\n                                        {/*                                                    maxLength={10}*/}\r\n                                        {/*                                                    className=\"form-control bg-white border-left-0 border-md\"/><br/>*/}\r\n                                        {/*                                            </div>*/}\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n\r\n                                                                                        <DropdownList\r\n                                                                                            data={[\r\n                                                                                                {\r\n                                                                                                    value: \"STAFF\",\r\n                                                                                                    label: \"STAFF\"\r\n                                                                                                },\r\n                                                                                                {\r\n                                                                                                    value: \"SUPERVISOR\",\r\n                                                                                                    label: \"SUPERVISOR\"\r\n                                                                                                }\r\n                                                                                            ]}\r\n                                                                                            value={data?.role}\r\n                                                                                            placeholder=\"Select Role\"\r\n                                                                                            handleDropdown={handleRoles}\r\n                                                                                        />\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <FormGroup>\r\n                                                                                            <Label for=\"profilePicture\"\r\n                                                                                                   sm={4}>Profile\r\n                                                                                                Photo</Label>\r\n                                                                                            <Col sm={12}>\r\n                                                                                                <Input\r\n                                                                                                    type=\"file\"\r\n                                                                                                    name=\"profilePicture\"\r\n                                                                                                    onChange={handlePhoto}\r\n                                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                                            </Col>\r\n                                                                                        </FormGroup>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n                                                                            :\r\n                                                                            <div>Loading...</div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <p>error</p>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.findAccountByIdReducer.data,\r\n        saveAccount: state.saveAccountReducer.data,\r\n        error: state.saveAccountReducer.error,\r\n        isLoading: state.findAccountByIdReducer.isLoading,\r\n        update: state.updateAccountReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDispatch: saveAccountAction, findAccountByIdAction\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    mapDispatchToProps)(SignUp);","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\home\\HomeMaster.js",["647","648","649"],"import React, {Component} from \"react\";\r\nimport CardboxMaster from \"./card/CardboxMaster\";\r\nimport {Row, Button, Jumbotron, Col} from \"reactstrap\";\r\nimport './home.css';\r\nimport Image from \"../../assets/images/undraw_Code_thinking_re_gka2.svg\"\r\nimport HeaderMaster from \"../../components/navbar/NavbarMaster\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Sidebar from \"../../components/sidebar/SideNavBar\";\r\nimport BootstrapNavbar from \"../Home\";\r\n\r\nclass HomeMaster extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                        <>\r\n                            {/*<HeaderMaster/>*/}\r\n                            <BootstrapNavbar/>\r\n                            <Sidebar/>\r\n                            <div className=\"jumbotron\">\r\n                                <Jumbotron className=\"jumbotron-fluid\" style={{height: \"30vh\"}}>\r\n                                    <Row style={{marginTop: \"-5%\"}}>\r\n                                        <Col>\r\n                                            <h1 style={{color: \"#e42256\", fontSize: \"5vw\", marginLeft: \"15%\"}}>\r\n                                                Hello, {localStorage.getItem('username')}!</h1>\r\n                                            <p style={{fontSize: \"2vw\", marginLeft: \"15%\"}}>What do you want to do?</p>\r\n                                            <Button href=\"/register\"\r\n                                                    style={{background: \"#e42256\", marginLeft: \"15%\", marginTop: \"5%\"}}><FontAwesomeIcon\r\n                                                icon={faPlus}/> New Account</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <img src={Image} alt=\"image\" className=\"img-fluid float-right\"\r\n                                                 style={{marginRight: \"15%\"}}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Jumbotron>\r\n                            </div>\r\n                            <CardboxMaster/>\r\n                        </>\r\n                        :\r\n                        <div> cannot access</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeMaster;","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\TransactionDetail.js",["650","651","652","653","654","655"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\DetailCustomer.js",["656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678"],"import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {Input, ModalFooter} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {findCustomerByIdAction} from \"../../actions/customerAction\";\r\nimport {Button} from \"reactstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport {Label} from \"reactstrap\";\r\nimport {FormGroup} from \"reactstrap\";\r\nimport {Form} from \"reactstrap\";\r\nimport {ModalBody} from \"reactstrap\";\r\nimport {ModalHeader} from \"reactstrap\";\r\nimport {Modal} from \"reactstrap\";\r\nimport Container from \"../../components/Containers\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faHandshake, faIdCard, faMailBulk, faSave, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport man from \"../../assets/images/icon/man.png\"\r\nimport id from \"../../assets/images/icon/id.svg\"\r\n\r\nfunction CustomerDetail({isLoading, customer, findCustomerByIdAction}) {\r\n\r\n    let {id} = useParams()\r\n    const {data, setData} = useState({\r\n        name : \"\"\r\n    })\r\n    useEffect(() => {\r\n        findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id > 0)\r\n            findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                // localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                //     <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Detail Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-header border-0\">\r\n                                                            {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                            <div className=\"card-tools\">\r\n                                                                <a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">\r\n                                                                    <i className=\"fas fa-pencil-alt\" />\r\n                                                                </a>\r\n                                                                <a href=\"/customer\" className=\"btn btn-tool btn-sm\">\r\n                                                                    <i className=\"fas fa-arrow-left\" />\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"card-body table-responsive p-0\">\r\n                                                            <table className=\"table table-striped table-valign-middle\">\r\n                                                                {/*<thead>*/}\r\n                                                                {/*<tr>*/}\r\n                                                                {/*    <th>Key</th>*/}\r\n                                                                {/*    <th>Value</th>*/}\r\n                                                                {/*</tr>*/}\r\n                                                                {/*</thead>*/}\r\n                                                                <tbody style={{textAlign: \"left\"}}>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faUser}/></td>\r\n                                                                    <td>{customer.name}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faMailBulk}/></td>\r\n                                                                    <td>{customer.email}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faIdCard}/></td>\r\n                                                                    <td>{customer.idNumber}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faHandshake}/></td>\r\n                                                                    <td>{customer.employeeType}</td>\r\n                                                                </tr>\r\n                                                                {customer.employeeType == \"CONTRACT\"\r\n                                                                &&\r\n                                                                    <>\r\n                                                                        <tr>\r\n                                                                            <td>Contract Length</td>\r\n                                                                            <td>{customer.contractLength}</td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Contract Start</td>\r\n                                                                            <td>{customer.contractStart}</td>\r\n                                                                        </tr>\r\n                                                                    </>\r\n                                                                }\r\n                                                                        <tr>\r\n                                                                            <td>ID Card Photo</td>\r\n                                                                            <td><img src={customer.idPhoto} width={100}/></td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Profile Photo</td>\r\n                                                                            <td><img src={customer.profilePhoto} width={100}/></td>\r\n                                                                        </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    // </>\r\n                    // :\r\n                    // <div> cannot access</div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.findCustomerByIdReducer.loading || state.saveCustomerReducer.loading,\r\n        customer: state.findCustomerByIdReducer.data || [],\r\n    }\r\n}\r\n\r\n//findById ambil dari action\r\nconst mapDispatchToProps = {findCustomerByIdAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetail)","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportList.js",["679","680","681","682","683"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportDetail.js",["684","685","686","687","688"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {Row, Col, Table} from \"reactstrap\";\r\n\r\n\r\nfunction ReportDetail() {\r\n\r\n    const {id} = useParams()\r\n    const [data, setData] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <div>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Detail Report</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"#\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-pencil-alt\" />\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <Table>\r\n\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\">DATA CUSTOMER :</Col>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Name</Col>\r\n                                                                <Col sm=\"4\">Eka</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Email</Col>\r\n                                                                <Col sm=\"4\">Eka@gmail.com</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Id Number</Col>\r\n                                                                <Col sm=\"4\">1234568647834</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Address</Col>\r\n                                                                <Col sm=\"4\">Samping Kamar</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Employee Type</Col>\r\n                                                                <Col sm=\"4\">Non</Col>\r\n                                                            </Row>\r\n\r\n                                                            <hr/>\r\n\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\">TRANSACTION :</Col>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Income</Col>\r\n                                                                <Col sm=\"4\">1000</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Outcome</Col>\r\n                                                                <Col sm=\"4\">300</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Loan</Col>\r\n                                                                <Col sm=\"4\">100</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Interest Rate</Col>\r\n                                                                <Col sm=\"4\">2%</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Tenor</Col>\r\n                                                                <Col sm=\"4\">3</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Main Loan</Col>\r\n                                                                <Col sm=\"4\">1,67</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Interest</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Installment Total</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Installment</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Credit ratio</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n\r\n                                                            <hr/>\r\n\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\">APPROVED :</Col>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Finance Criteria</Col>\r\n                                                                <Col sm=\"4\">true</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Employee Criteria</Col>\r\n                                                                <Col sm=\"4\">true</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Submitted Date</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Approved Date</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                        </Table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div> cannot access</div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ReportDetail)\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonUse.js",["689","690","691","692","693","694","695","696","697","698","699"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\loginAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\index.js",["700","701","702","703","704"],"import React from 'react'\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\nimport Content from \"./Home\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ListCustomer from \"../../pages/customer/listCustomer\";\r\nimport TransactionList from \"../../pages/transaction/transactionList\";\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Menu/>\r\n            {/*<ListCustomer/>*/}\r\n            <Content/>\r\n            {/*<Router>*/}\r\n            {/*    <Switch>*/}\r\n            {/*        <Route path=\"/customer\" component={ListCustomer} exact />*/}\r\n            {/*        /!*<Route path=\"/customer/form\" component={CustomerForm} exact />*!/*/}\r\n            {/*        <Route path=\"/transaction\" component={TransactionList} exact />*/}\r\n            {/*        <Route path=\"/report\" component={Content} exact/>*/}\r\n            {/*    </Switch>*/}\r\n            {/*</Router>*/}\r\n            <Footer/>\r\n        </div>\r\n\r\n    )\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\signupAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\AccountRow.js",["705","706","707","708","709"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Footer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Menu.js",["710","711","712","713","714","715","716","717"],"import React from \"react\";\r\nimport {faCheckDouble, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Menu() {\r\n  return (\r\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" style={{background:\"#e42256\"}}>\r\n        {/* Brand Logo */}\r\n        <a className=\"brand-link\">\r\n          {/*<img*/}\r\n          {/*  src=\"dist/img/AdminLTELogo.png\"*/}\r\n          {/*  alt=\"AdminLTE Logo\"*/}\r\n          {/*  className=\"brand-image img-circle elevation-3\"*/}\r\n          {/*  style={{ opacity: \".8\" }}*/}\r\n          {/*/>*/}\r\n          <span className=\"brand-text font-weight-light\">OK' 200</span>\r\n        </a>\r\n        {/* Sidebar */}\r\n        <div className=\"sidebar\">\r\n          {/* Sidebar user panel (optional) */}\r\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n            <div className=\"image\">\r\n              {/*<img*/}\r\n              {/*  src=\"dist/img/user2-160x160.jpg\"*/}\r\n              {/*  className=\"img-circle elevation-2\"*/}\r\n              {/*  alt=\"User Image\"*/}\r\n              {/*/>*/}\r\n            </div>\r\n            <div className=\"info\">\r\n              <a href=\"#\" className=\"d-block\">\r\n                {localStorage.getItem('username')}\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/* Sidebar Menu */}\r\n          <nav className=\"mt-2\">\r\n            {localStorage.getItem(\"roles\") == \"MASTER\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/master\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-users\"/>\r\n                  <p>\r\n                    List Account\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/customer/form\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-user-check\"/>\r\n                  <p>\r\n                    Form Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/customer\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    List Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/report\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            }\r\n            {localStorage.getItem(\"roles\") == \"STAFF\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/customer/form\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-user-check\"/>\r\n                  <p>\r\n                    Form Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/staff/customer\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    List Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/staff/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/staff/report\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            }\r\n\r\n            {localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/report\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            }\r\n\r\n          </nav>\r\n          {/* /.sidebar-menu */}\r\n        </div>\r\n        {/* /.sidebar */}\r\n      </aside>\r\n  );\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Header.js",["718","719","720","721"],"import React from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {faFolderPlus, faHome, faSignOutAlt, faUserPlus, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Header() {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleOnclick = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('roles')\r\n    localStorage.removeItem('username')\r\n    // history.push('/')\r\n  }\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\" style={{background:\"#ff8370\"}}>\r\n      {/* Left navbar links */}\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\r\n            <i className=\"fas fa-bars\" />\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <a href=\"/master/home\" className=\"nav-link\">\r\n            <FontAwesomeIcon icon={faHome}/>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* Right navbar links */}\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        {localStorage.getItem(\"roles\") == \"MASTER\" &&\r\n        <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/need\">\r\n                  <FontAwesomeIcon icon={faFolderPlus}/>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/register\">\r\n                  <FontAwesomeIcon icon={faUserPlus}/>\r\n                </a>\r\n              </li>\r\n        </ul>\r\n        }\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className=\"nav-link\"\r\n            onClick={handleOnclick}\r\n            href=\"/\"\r\n          >\r\n            <FontAwesomeIcon icon={faSignOutAlt}/>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\transactionAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Home.js",["722","723"],"import React, {useState} from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { Navbar,Nav } from 'react-bootstrap'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faCheckDouble,\r\n    faHome,\r\n    faMoneyCheck,\r\n    faSignOutAlt,\r\n    faUsers\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Header = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const handleOnclick = () => {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('roles')\r\n        localStorage.removeItem('username')\r\n    }\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Router>\r\n                            <Navbar style={{background:\"#e42256\"}} expand=\"lg\" sticky=\"top\">\r\n                                <Navbar.Brand style={{color:\"#FFffff\"}}>OK'200</Navbar.Brand>\r\n                                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className=\"mr-auto\">\r\n                                        <Nav.Link href=\"/master/home\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faHome}/></Nav.Link>\r\n                                    </Nav>\r\n                                    <Nav.Link href=\"/customer\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faUsers}/></Nav.Link>\r\n                                    <Nav.Link href=\"/master/transaction\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faMoneyCheck}/></Nav.Link>\r\n                                    <Nav.Link href=\"/master/report\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faCheckDouble}/></Nav.Link>\r\n                                    <Nav.Link href=\"/\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faSignOutAlt}/></Nav.Link>\r\n                                </Navbar.Collapse>\r\n                            </Navbar>\r\n                            <br />\r\n                        </Router>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Header;","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\approvalAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\customerAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\Containers\\Container.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\DropdownList\\DropdownList.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportRow.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\reportAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\home\\card\\CardboxMaster.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\navbar\\NavbarMaster.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\sidebar\\SideNavBar.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\constants\\actions.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\Containers\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\customerReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\transactionReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\loginReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\signupReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\approvalReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\reportReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\loginSaga.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\customerSaga.js",["724"],"import { put, takeLatest } from \"redux-saga/effects\"\r\nimport {\r\n  FIND_ALL_CUSTOMER_FAILURE,\r\n  FIND_ALL_CUSTOMER_SUCCESS,\r\n  FIND_ALL_CUSTOMER,\r\n\r\n  SAVE_CUSTOMER,\r\n  SAVE_CUSTOMER_FAILURE,\r\n  SAVE_CUSTOMER_SUCCESS,\r\n\r\n  FIND_CUSTOMER_BY_ID,\r\n  FIND_CUSTOMER_BY_ID_FAILURE,\r\n  FIND_CUSTOMER_BY_ID_SUCCESS,\r\n\r\n  UPDATE_CUSTOMER, FIND_CUSTOMER_BY_SUBMITTER_SUCCESS, FIND_CUSTOMER_BY_SUBMITTER_FAILURE\r\n\r\n} from \"../constants/actions\"\r\nimport axios from \"../api\"\r\n\r\nfunction* findAllCustomerSaga() {\r\n  let result = yield axios.get(\"/customer\")\r\n    .then(data => {\r\n      return ({\r\n        type: FIND_ALL_CUSTOMER_SUCCESS,\r\n        data: data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      return ({\r\n        type: FIND_ALL_CUSTOMER_FAILURE,\r\n        error: err\r\n      })\r\n    })\r\n  yield put(result)\r\n}\r\n\r\nfunction* saveCustomerSaga(action) {\r\n  let model = action.model;\r\n  let method = 'POST', url = '/customer';\r\n  if (model.id) {\r\n    method = \"PATCH\";\r\n    url += `/${model.id}`\r\n  }\r\n\r\n  let result = yield axios({\r\n    url: url,\r\n    method: method,\r\n    data: model\r\n  })\r\n    .then( data => {\r\n      return {\r\n        type: SAVE_CUSTOMER_SUCCESS,\r\n        data: data\r\n      }\r\n    })\r\n    .catch(e => {\r\n      return {\r\n        type: SAVE_CUSTOMER_FAILURE,\r\n        error: e\r\n      }\r\n    })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findCustomerByIdSaga(action) {\r\n  let result = yield axios.get(`/customer/${action.id}`)\r\n      .then(data => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_ID_SUCCESS,\r\n          data: data\r\n        })\r\n      })\r\n      .catch(e => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_ID_FAILURE,\r\n          error: e\r\n        })\r\n      })\r\n  yield put(result)\r\n}\r\n\r\nfunction* findCustomerByStaffSaga(action) {\r\n  let result = yield axios.get('/customer/staff')\r\n      .then(data => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_SUBMITTER_SUCCESS,\r\n          data: data\r\n        })\r\n      })\r\n      .catch(e => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_SUBMITTER_FAILURE,\r\n          error: e\r\n        })\r\n      })\r\n  yield put(result)\r\n}\r\n\r\nfunction* updateCustomerSaga(action) {\r\n  let result = false\r\n\r\n  yield put({\r\n    type: UPDATE_CUSTOMER,\r\n    data: result\r\n  })\r\n}\r\n\r\n\r\nexport function* watchFindAllCustomer() {\r\n  yield takeLatest(FIND_ALL_CUSTOMER, findAllCustomerSaga)\r\n}\r\n\r\nexport function* watchSaveCustomer() {\r\n  yield takeLatest(SAVE_CUSTOMER, saveCustomerSaga)\r\n}\r\n\r\nexport function* watchFindCustomerById() {\r\n  yield takeLatest(FIND_CUSTOMER_BY_ID, findCustomerByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateCustomer() {\r\n  yield takeLatest(UPDATE_CUSTOMER, updateCustomerSaga)\r\n}\r\n\r\nexport function* watchFindAllCustomerBySubmitter() {\r\n  yield takeLatest(FIND_ALL_CUSTOMER, findCustomerByStaffSaga)\r\n}\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\transactionSaga.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\reportSaga.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\approvalSaga.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\signupSaga.js",["725"],"import axios from \"../api\";\r\nimport {\r\n    FIND_ACCOUNT_BY_ID,\r\n    FIND_ALL_ACCOUNT,\r\n    FIND_ALL_ACCOUNT_FAILURE,\r\n    FIND_ALL_ACCOUNT_SUCCESS, REMOVE_ACCOUNT_BY_ID, REMOVE_ACCOUNT_BY_ID_FAILURE, REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n    SAVE_ACCOUNT,\r\n    SAVE_ACCOUNT_FAILURE,\r\n    SAVE_ACCOUNT_SUCCESS, UPDATE_ACCOUNT, UPDATE_CUSTOMER\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\n\r\nfunction* findAllAccountSaga() {\r\n    let result = yield axios.get(\"/master\")\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveAccountSaga(action) {\r\n    let model = action.model;\r\n    let method = 'POST', url = '/master/signup';\r\n    if (model.id) {\r\n        method = \"PATCH\";\r\n        url += `/${model.id}`\r\n    }\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_ACCOUNT_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_ACCOUNT_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findAccountByIdSaga(action) {\r\n    let result = yield axios.get(`/users/${action.id}`)\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* updateAccountSaga(action) {\r\n    let result = false\r\n\r\n    yield put({\r\n        type: UPDATE_ACCOUNT,\r\n        data: result\r\n    })\r\n}\r\n\r\nfunction* removeAccountById(action) {\r\n    let result = yield axios.delete(`/users/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini action\", data)\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nexport function* watchFindAllAccount() {\r\n    yield takeLatest(FIND_ALL_ACCOUNT, findAllAccountSaga)\r\n}\r\n\r\nexport function* watchSaveAccount() {\r\n    yield takeLatest(SAVE_ACCOUNT, saveAccountSaga)\r\n}\r\n\r\nexport function* watchFindByIdAccount() {\r\n    yield takeLatest(FIND_ACCOUNT_BY_ID, findAccountByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateAccountById() {\r\n    yield takeLatest(UPDATE_ACCOUNT, updateAccountSaga)\r\n}\r\n\r\nexport function* watchRemoveById() {\r\n    yield takeLatest(REMOVE_ACCOUNT_BY_ID, removeAccountById)\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerForm\\CustomerForm.js",["726","727","728","729","730","731","732","733","734","735","736","737","738","739","740"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {findCustomerByIdAction, saveCustomerAction} from \"../../../actions/customerAction\"\r\nimport { Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport { Button, Form, FormGroup, Input, Label, Col} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport SignIn from \"../../login/SignIn\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst CustomerForm = ({error, isLoading, saveCustomer, saveCustomerAction, customer, findCustomerByIdAction}) => {\r\n    const {id} = useParams()\r\n    const [roles, setRoles] = useState(localStorage.getItem(\"roles\"))\r\n    const [redirect] = useState(false)\r\n    const [photo, setPhoto] = useState({\r\n        profilePhoto: {},\r\n        idPhoto: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        idNumber: 0,\r\n        address: \"\",\r\n        employeeType: \"\",\r\n        contractLength: \"\",\r\n        contractStart: \"\",\r\n        idPhoto: \"\",\r\n        profilePhoto: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id !== data.id) {\r\n            findCustomerByIdAction(id);\r\n            setData(customer)\r\n            // console.log(\"ini useffect\", customer)\r\n        }\r\n    }, [customer])\r\n\r\n\r\n    useEffect(() => {\r\n        if (saveCustomer) {\r\n            history.push('/customer')\r\n        }\r\n    }, [saveCustomer, history])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto({...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name]: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const uploadIdPhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.idPhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    idPhoto: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    const uploadProfilePhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.profilePhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    profilePhoto: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleNumber = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        if(name = \"idNumber\") {\r\n\r\n            if(value.length <= 15)\r\n                setData({...data, [name]: value})\r\n\r\n        } else {\r\n            setData({...data, [name]: value})\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleEmployee = (e) => {\r\n        setData({...data, employeeType: e})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveCustomerAction(data)\r\n\r\n        // swal(\"Save Success!\", \"\", \"success\");\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/customer\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" || localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                    <>\r\n                        <div>\r\n                            <Container error={error}/>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Form Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                {!isLoading ?\r\n                                                                    <Form onSubmit={handleSubmit}>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"name\" sm={3} style={{textAlign:\"left\"}}>Customer's\r\n                                                                                Name</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.name || ''}\r\n                                                                                    type=\"text\"\r\n                                                                                    name=\"name\"\r\n                                                                                    placeholder=\"input name\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"email\" sm={3} style={{textAlign:\"left\"}}>Email</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.email || ''}\r\n                                                                                    type=\"email\"\r\n                                                                                    name=\"email\"\r\n                                                                                    placeholder=\"input email\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"idNumber\" sm={3} style={{textAlign:\"left\"}}>ID\r\n                                                                                Number</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleNumber}\r\n                                                                                    value={data?.idNumber || ''}\r\n                                                                                    type=\"number\"\r\n                                                                                    name=\"idNumber\"\r\n                                                                                    maxLength={'15'}\r\n                                                                                    minLength={'15'}\r\n                                                                                    placeholder=\"input ID number\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"exampleText\"\r\n                                                                                   sm={3} style={{textAlign:\"left\"}}>Address</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.address || ''}\r\n                                                                                    type=\"textarea\"\r\n                                                                                    name=\"address\"\r\n                                                                                    placeholder=\"address\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"select\" sm={3} style={{textAlign:\"left\"}}>Type of\r\n                                                                                customer</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <DropdownList\r\n                                                                                    data={[\r\n                                                                                        {value: \"NON\", label: \"NON\"},\r\n                                                                                        {\r\n                                                                                            value: \"REGULAR\",\r\n                                                                                            label: \"REGULAR\"\r\n                                                                                        },\r\n                                                                                        {\r\n                                                                                            value: \"CONTRACT\",\r\n                                                                                            label: \"CONTRACT\"\r\n                                                                                        }\r\n                                                                                    ]}\r\n                                                                                    value={data?.employeeType}\r\n                                                                                    placeholder=\"Select Employee Type\"\r\n                                                                                    handleDropdown={handleEmployee}\r\n                                                                                />\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                        {data.employeeType == \"CONTRACT\"\r\n                                                                        &&\r\n\r\n                                                                        <div>\r\n                                                                            <FormGroup row>\r\n                                                                                <Label for=\"contractStart\" sm={3} style={{textAlign:\"left\"}}>Contract\r\n                                                                                    Start</Label>\r\n                                                                                <Col sm={9}>\r\n                                                                                    <Input\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.contractStart || ''}\r\n                                                                                        type=\"date\"\r\n                                                                                        name=\"contractStart\"\r\n                                                                                        id=\"contractStart\"\r\n                                                                                        placeholder=\"contract start\"/>\r\n                                                                                </Col>\r\n                                                                            </FormGroup>\r\n                                                                            <FormGroup row>\r\n                                                                                <Label for=\"contractLength\" sm={3} style={{textAlign:\"left\"}}>Contract\r\n                                                                                    Length</Label>\r\n                                                                                <Col sm={9}>\r\n                                                                                    <Input\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.contractLength || ''}\r\n                                                                                        type=\"number\" min=\"1\"\r\n                                                                                        name=\"contractLength\"\r\n                                                                                        id=\"contractLength\"\r\n                                                                                        placeholder=\"contract length\"/>\r\n                                                                                </Col>\r\n                                                                            </FormGroup>\r\n                                                                        </div>\r\n                                                                        }\r\n\r\n                                                                        <FormGroup row>\r\n                                                                            <Label for=\"idPhoto\" sm={3} style={{textAlign:\"left\"}}>ID Card</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    type=\"file\"\r\n                                                                                    name=\"idPhoto\"\r\n                                                                                    onChange={handlePhoto}\r\n                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label for=\"profilePhoto\" sm={3} style={{textAlign:\"left\"}}>Profile\r\n                                                                                Photo</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    type=\"file\"\r\n                                                                                    name=\"profilePhoto\"\r\n                                                                                    onChange={handlePhoto}\r\n                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                        <FormGroup check row>\r\n                                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                                    Submit\r\n                                                                                </Button> {' '}\r\n                                                                                <Button href=\"/customer\"\r\n                                                                                        style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon\r\n                                                                                        icon={faArrowLeft}/>\r\n                                                                                    Cancel\r\n                                                                                </Button>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                    </Form> :\r\n                                                                    <div>Loading...</div>\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    // </>\r\n                    :\r\n                    <p>cannot access</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // call reducer\r\n        error: state.findCustomerByIdReducer.error || state.saveCustomerReducer.error,\r\n        customer: state.findCustomerByIdReducer.data,\r\n        isLoading: state.findCustomerByIdReducer.isLoading,\r\n        update: state.updateCustomerReducer,\r\n        saveCustomer: state.saveCustomerReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveCustomerAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerForm)\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\ListCustomer.js",["741"],"import React, {useEffect} from 'react'\r\nimport {findAllCustomerAction} from '../../../actions/customerAction'\r\nimport {connect} from \"react-redux\"\r\nimport Containers from \"../../../components/Containers/Container\";\r\nimport SignIn from \"../../login/SignIn\";\r\nimport RowCustomer from \"./RowCustomer\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\n\r\nfunction CustomerList({\r\n                          error,\r\n                          isLoading,\r\n                          customers,\r\n                          findAllCustomerAction\r\n                      }) {\r\n\r\n    const onReload = () => {\r\n        findAllCustomerAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllCustomerAction])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                // localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                //     <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">List Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\r\n                                                            {/*</a>*/}\r\n                                                            <a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-plus-circle\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n\r\n                                                        <TableScrollbar rows={10}>\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\r\n                                                            <tr>\r\n                                                                <th>Number</th>\r\n                                                                {/*<th>Submitter</th>*/}\r\n                                                                <th>Customer Name</th>\r\n                                                                <th>ID Card</th>\r\n                                                                <th>Employee Type</th>\r\n                                                                <th>Submitter</th>\r\n                                                                <th>Action</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n                                                            {\r\n                                                                !isLoading ?\r\n                                                                    customers?.list?.map((e, i) => {\r\n\r\n                                                                        return (\r\n                                                                            <RowCustomer key={i} data={e}\r\n                                                                                         number={(customers.page * customers.size) + 1 + i}/>\r\n                                                                        )\r\n                                                                    })\r\n                                                                    :\r\n                                                                    <tr>\r\n                                                                        <td colSpan=\"3\"> Loading..</td>\r\n                                                                    </tr>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n                        </Containers>\r\n                    // </>\r\n                    // :\r\n                    // <div>\r\n                    //     <SignIn/>\r\n                    // </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllCustomerReducer.error,\r\n        customers: state.findAllCustomerReducer.data || [],\r\n        isLoading: state.findAllCustomerReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllCustomerAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["742","743","744","745","746","747","748","749","750","751"],"import {InputGroupText, InputGroup, FormGroup, Form, Input, Label, Button, Col} from \"reactstrap\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {saveTransactionAction} from \"../../../actions/transactionAction\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {findCustomerByIdAction} from \"../../../actions/customerAction\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport NumberFormat from 'react-number-format';\r\nimport {findAllNeedAction} from \"../../../actions/needAction\";\r\nimport {findAllNeedReducer} from \"../../../configs/reducers/needReducer\";\r\nimport ReasonRow from \"../../reasonUse/ReasonRow\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst TransactionForm = ({savedTransaction, isLoading, error, saveTransactionAction, customer, findCustomerByIdAction, needs, findAllNeedAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({\r\n        customer: \"\"\r\n    })\r\n    const [currency, setCurrency] = useState({})\r\n\r\n    const history = useHistory()\r\n\r\n    const onReload = () => {\r\n        findAllNeedAction();\r\n    }\r\n\r\n    useEffect(onReload, [findAllNeedAction])\r\n\r\n    const handleCustomer = () => {\r\n        setData({\r\n            ...data,\r\n            customer: customer.id\r\n        })\r\n    }\r\n\r\n    const handleNeed = (e) => {\r\n        setData({...data, needType: e.id})\r\n    }\r\n\r\n    useEffect(() => {\r\n        findAllNeedAction()\r\n    }, [findAllNeedAction])\r\n\r\n    useEffect(() => {\r\n        if (id !== data.customer) {\r\n            findCustomerByIdAction(id);\r\n            setData({\r\n                ...data,\r\n                customer: id\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // console.log(`CUSTOMER `, customer, `DATA `, data)\r\n        console.log(data)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (savedTransaction) {\r\n            history.push('/transaction')\r\n        }\r\n    }, [savedTransaction, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleCurrency = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        if(parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveTransactionAction(data)\r\n        // console.log(data)\r\n    }\r\n    if (redirect === true) {\r\n        return <Redirect to='/transaction'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            localStorage.getItem(\"roles\") == \"MASTER\" || localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                <>\r\n\r\n            <Container error={error}/>\r\n            <Header/>\r\n            <Menu/>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0 text-dark\">Form Transaction</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body table-responsive p-0\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form form-container\">\r\n                                                {!isLoading ? needs &&\r\n                                                    <Form onSubmit={handleSubmit}>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"income\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Income</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n                                                                    {/*<Input >*/}\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"income\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.income || ''}\r\n                                                                        placeholder=\"income\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    {/*</Input>*/}\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"outcome\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Outcome</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"outcome\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.outcome || ''}\r\n                                                                        placeholder=\"outcome\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"loan\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Loan</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"loan\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.loan || ''}\r\n                                                                        placeholder=\"outcome\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label htmlFor=\"tenor\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Tenor</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <Input required\r\n                                                                       onChange={handleChange}\r\n                                                                       type=\"number\" min=\"1\" max=\"6\"\r\n                                                                       value={data?.tenor || ''}\r\n                                                                       name=\"tenor\"\r\n                                                                       placeholder=\"tenor\"/>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"interestRate\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Interest Rate</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        name=\"interestRate\"\r\n                                                                        value={data?.interestRate || ''}\r\n                                                                        placeholder=\"interest rate\" min={0} max={100}\r\n                                                                        type=\"number\" min=\"0\" step=\"1\"/>\r\n                                                                    <InputGroupText>%</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        {/*{!isLoading ?*/}\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"select\" sm={2} style={{textAlign: \"left\"}}>Need\r\n                                                                Type</Label>\r\n                                                            <Col sm={10} >\r\n                                                                    <select onChange={e => setData({...data, needType: e.target.value})}>\r\n                                                                        <option selected disabled hidden>Choose here</option>\r\n                                                                        {needs?.list?.map((e, i) => (\r\n                                                                        <option key={i} value={e.id} data={e} selected={e.id == data?.id || false}>{e.type}</option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n\r\n\r\n                                                                {/*<select name=\"need\" onChange={handleChange}>*/}\r\n                                                                {/*    */}\r\n                                                                {/*    {needs?.list?.map((e, i) => (*/}\r\n                                                                {/*        <option key={i} value={e.id}*/}\r\n                                                                {/*                selected={e.id == data?.id || false}>{e.type}</option>*/}\r\n                                                                {/*    ))}*/}\r\n                                                                {/*</select>*/}\r\n\r\n                                                                {/*<DropdownList*/}\r\n                                                                {/*    data={[*/}\r\n                                                                {/*        needs?.list?.map(e => {*/}\r\n                                                                {/*            return (*/}\r\n                                                                {/*                {value: e.id, label: e.type}*/}\r\n                                                                {/*            )*/}\r\n                                                                {/*        })*/}\r\n                                                                {/*        // {value: \"CAPITAL\", label: \"CAPITAL\"},*/}\r\n                                                                {/*        // {*/}\r\n                                                                {/*        //     value: \"CONSUMPTIVE\",*/}\r\n                                                                {/*        //     label: \"CONSUMPTIVE\"*/}\r\n                                                                {/*        // },*/}\r\n                                                                {/*        // {value: \"INVESTMENT\", label: \"INVESTMENT\"}*/}\r\n                                                                {/*    ]}*/}\r\n                                                                {/*    value={data?.needType}*/}\r\n                                                                {/*    placeholder=\"Select Need Type\"*/}\r\n                                                                {/*    handleDropdown={handleNeed}*/}\r\n                                                                {/*/>*/}\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        {/*:*/}\r\n                                                        {/*    <p>Loading...</p>*/}\r\n\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"notes\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Note</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <Input\r\n                                                                    required\r\n                                                                    onChange={handleChange}\r\n                                                                    value={data?.notes || ''}\r\n                                                                    type=\"text\"\r\n                                                                    name=\"notes\"\r\n                                                                    id=\"notes\"\r\n                                                                    placeholder=\"input note\"/>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup check row>\r\n                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                    Submit\r\n                                                                </Button> {' '}\r\n                                                                <Button href=\"/customer\"\r\n                                                                        style={{background: \"#e42256\"}}>\r\n                                                                    <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                                                    Cancel\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                    </Form> :\r\n                                                    <div>Loading...</div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        :\r\n        <p>\r\n            cannot access\r\n        </p>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.findCustomerByIdReducer.data,\r\n        savedTransaction: state.saveTransactionReducer.data,\r\n        isLoading: state.saveTransactionReducer.isLoading,\r\n        error: state.saveTransactionReducer.error,\r\n        needs: state.findAllNeedReducer.data\r\n    }\r\n    console.log(\"mapStateToProps\", findAllNeedReducer.data)\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveTransactionAction, findAllNeedAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionList.js",["752","753","754","755","756","757"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Home.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\api.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\RowCustomer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionRow.js",["758","759","760","761"],"import React from 'react'\r\nimport {Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheckCircle, faInfoCircle, faPencilAlt, faQuestionCircle, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TransactionRow = ({data, onUpdate, number}) => {\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.transaction.customer.name}</td>\r\n            <td>{data.transaction.customer.employeeType} </td>\r\n            <td>{data.transaction.loan}</td>\r\n            <td>{data.transaction.tenor}</td>\r\n            <td>{data.transaction.interestRate}</td>\r\n            {/*{data.approve == true &&*/}\r\n            <td>\r\n                {/*<a href={`/transaction/${data.id}/detail`} className=\"text-muted\">*/}\r\n                {/*    <i className=\"fas fa-info-circle\" />*/}\r\n                {/*</a>{' '}*/}\r\n                <Button href={`/transaction/${data.id}`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faQuestionCircle}/>\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TransactionRow;\r\n\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Error\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Error\\Error.js",["762","763"],"import React from 'react'\r\nimport {Button, Col, Container, Row} from \"reactstrap\";\r\nimport Containers from \"../../components/Containers/Container\";\r\nimport undraw_Notify from \"../../assets/images/undraw_Notify.svg\";\r\n\r\nconst Error = () => {\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                <Container fluid style={{width: \"100%\"}}>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <div className=\"d-flex justify-content-center mb-3\">\r\n                                    <h1 style={{\r\n                                        fontSize: \"3vw\",\r\n                                        color: \"#e42556\",\r\n                                        margin: \"3%\",\r\n                                        textAlign: \"center\"\r\n                                    }}>You Can't Access This Page</h1>\r\n                                </div>\r\n                                <hr/>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                            <div>\r\n                                <div>\r\n                                    <img src={undraw_Notify} alt=\"\"\r\n                                         className=\"img-fluid d-none d-md-block\"/>\r\n                                    <br/>\r\n\r\n                                </div>\r\n                            </div>\r\n                    </Row>\r\n\r\n\r\n                </Container>\r\n                }\r\n                </div>\r\n                )\r\n                }\r\n\r\n                export default Error\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerList\\CustomerRow.js",["764","765","766","767"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js",["768"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\Row.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\needReducer.js",["769","770","771","772","773","774","775"],"import {\r\n    FIND_NEEDTYPE_BY_ID, FIND_NEEDTYPE_BY_ID_FAILURE, FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS, REMOVE_NEEDTYPE_BY_ID, REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS, UPDATE_NEEDTYPE, UPDATE_NEEDTYPE_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const findAllNeedReducer = (state = initialState, action) => {\r\n    // console.log(\"ini action reducer\", action.data)\r\n    switch (action.type) {\r\n        case FIND_ALL_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case FIND_ALL_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_ALL_NEEDTYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const saveNeedReducer = (state = {...initialState}, action) => {\r\n    switch (action.type) {\r\n        case SAVE_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case SAVE_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case SAVE_NEEDTYPE_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonRow.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\needAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonForm.js",["776"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport { Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport { Button, Form, FormGroup, Input, Label, Col} from \"reactstrap\";\r\nimport {saveNeedAction} from \"../../actions/needAction\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\n\r\nconst ReasonForm = ({saveNeedAction, saveNeedType, error, isLoading}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [data, setData] = useState({})\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (saveNeedType) {\r\n            history.push('/need')\r\n        }\r\n    }, [saveNeedType, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n        console.log(\"handlechange\", data)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveNeedAction(data)\r\n\r\n        console.log(\"handlesubmit\", data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/need\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Header/>\r\n                <Menu/>\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"content-header\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <h1 className=\"m-0 text-dark\">Need Type</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-body table-responsive p-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form form-container\">\r\n                                                    {!isLoading ?\r\n                                                        <Form onSubmit={handleSubmit}>\r\n                                                            <FormGroup row>\r\n                                                                <Label htmlFor=\"type\" sm={3} style={{textAlign:\"left\"}}>Need\r\n                                                                    Type</Label>\r\n                                                                <Col sm={9}>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        value={data?.type || ''}\r\n                                                                        type=\"text\"\r\n                                                                        name=\"type\"\r\n                                                                        placeholder=\"input need type\"/>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup check row>\r\n                                                                <Col sm={{size: 10, offset: 2}}>\r\n                                                                    <Button style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon icon={faSave}/>\r\n                                                                        Submit\r\n                                                                    </Button> {' '}\r\n                                                                    <Button href=\"/need\"\r\n                                                                            style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon\r\n                                                                            icon={faArrowLeft}/>\r\n                                                                        Cancel\r\n                                                                    </Button>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n\r\n                                                        </Form> :\r\n                                                        <div>Loading...</div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        saveNeedType: state.saveNeedReducer.data,\r\n        error: state.saveNeedReducer.err,\r\n        isLoading: state.saveNeedReducer.isLoading\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {saveNeedAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonForm)","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\index.js",[],["777","778"],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\App.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\reportWebVitals.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\routes.js",["779","780","781","782"],"import React from \"react\";\r\nimport TransactionList from \"../pages/transaction/transactionList\";\r\nimport CustomerForm from \"../pages/customer/customerForm\";\r\nimport SignIn from \"../pages/account/SignIn\";\r\nimport HomeMaster from \"../pages/home/HomeMaster\";\r\nimport SignUp from \"../pages/account/SignUp\";\r\nimport TransactionForm from \"../pages/transaction/transactionForm\";\r\nimport Dashboard from \"../components/dashboard\";\r\nimport ListCustomer from \"../pages/customer/listCustomer\";\r\nimport DetailCustomer from \"../pages/customer/DetailCustomer\";\r\nimport CustomerDetail from \"../pages/customer/DetailCustomer\";\r\nimport AccountList from \"../pages/account/AccountList\";\r\nimport TransactionDetail from \"../pages/transaction/TransactionDetail\";\r\nimport ReportList from \"../pages/report/ReportList\";\r\nimport ReportDetail from \"../pages/report/ReportDetail\";\r\nimport ReasonUse from \"../pages/reasonUse/ReasonUse\";\r\nimport Error from \"../pages/Error\";\r\nimport ListCustomerByStaff from \"../pages/customer/listCustomerByStaff/ListCustomerByStaff\";\r\nimport ReasonForm from \"../pages/reasonUse/ReasonForm\";\r\nimport ListTransactionByStaff from \"../pages/transaction/listTransactionByStaff/ListTransactionByStaff\";\r\nimport ListReportByStaff from \"../pages/report/reportByStaff/ListReportByStaff\";\r\nimport EditAccount from \"../pages/account/EditAccount\";\r\nimport EditPassword from \"../pages/profile/EditPassword\";\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: <SignIn />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/master',\r\n        component: <AccountList/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/master/:id',\r\n        component: <SignUp/>,\r\n        exact: true\r\n\r\n    },\r\n    // {\r\n    //     path: '/users/:id',\r\n    //     component: <SignUp/>,\r\n    //     exact: true\r\n    // },\r\n    {\r\n        path: '/need',\r\n        component: <ReasonUse/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/need/form',\r\n        component: <ReasonForm/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/dashboard',\r\n        component: <Dashboard />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/customer/staff',\r\n        component: <ListCustomer />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/customer',\r\n        component: <ListCustomer />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/master/home',\r\n        component: <Dashboard />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/register',\r\n        component: <SignUp />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/customer/form',\r\n        component: <CustomerForm />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/customer/:id/edit',\r\n        component: <CustomerForm />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/transaction',\r\n        component: <TransactionList />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/transaction/form/:id',\r\n        component: <TransactionForm />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/customer/:id/detail',\r\n        component: <CustomerDetail />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/transaction/:id',\r\n        component: <TransactionDetail />,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/report',\r\n        component: <ReportList/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/error',\r\n        component: <Error/>,\r\n        exact: true\r\n    },\r\n    // {\r\n    //     path: '/staff/customer',\r\n    //     component: <ListCustomer/>,\r\n    //     exact: true\r\n    // },\r\n    {\r\n        path: '/approval/staff',\r\n        component: <ListTransactionByStaff/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/report/staff',\r\n        component: <ListReportByStaff/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/staff/password',\r\n        component: <EditPassword/>,\r\n        exact: true\r\n    },\r\n    {\r\n        path: '/edit/id',\r\n        component: <EditAccount/>,\r\n        exact: true\r\n    }\r\n\r\n];\r\n\r\nexport default routes\r\n","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\store.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\TransactionDetail.js",["783","784","785","786","787","788","789","790","791","792","793","794"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useParams, useHistory, Redirect} from 'react-router-dom'\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheck, faCheckCircle, faCross, faSave, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport NumberFormat from \"react-number-format\"\r\nimport {Button} from \"reactstrap\";\r\nimport {findByIdApprovalAction, saveApprovalAction} from \"../../actions/approvalAction\";\r\nimport Error from \"../Error\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nfunction TransactionDetail({findByIdDispatch, transaction, isLoading, saveApprovalAction, savedApprove}) {\r\n\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({})\r\n    const [approval, setApproval] = useState({\r\n        id: null,\r\n        approve: null\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    // const handleApproval = () => {\r\n    //     saveApprovalAction({\r\n    //         transaction: data?.transaction?.id,\r\n    //         approve: true\r\n    //     })\r\n    //     history.push('/report')\r\n    //     // console.log(\"handle\", )\r\n    // }\r\n\r\n    const handleApproval = () => {\r\n        setApproval({\r\n            id: data?.transaction?.id,\r\n            approve: true\r\n        })\r\n\r\n        saveApprovalAction({\r\n            id: data.id,\r\n            approve: {\r\n                approve: true\r\n            }\r\n        })\r\n        console.log(approval)\r\n        // history.push('/report')\r\n        swal(\"Approve!\", \"Transaction has been approved!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleReject = () => {\r\n        setApproval({\r\n            id: data?.transaction?.id,\r\n            approve: false\r\n        })\r\n\r\n        saveApprovalAction({\r\n            id: data.id,\r\n            approve: {\r\n                approve: false\r\n            }\r\n        })\r\n        console.log(approval)\r\n        swal(\"Reject!\", \"Transaction has been rejected!\", \"success\");\r\n    }\r\n    //\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault()\r\n    //     saveApprovalAction(approval)\r\n    //\r\n    //     console.log(\"handleSubmit\", approval)\r\n    // }\r\n\r\n    useEffect(() => {\r\n        if (savedApprove) {\r\n            history.push('/report')\r\n            console.log(\"useeffect\", savedApprove)\r\n        }\r\n    }, [savedApprove])\r\n\r\n    useEffect(() => {\r\n        if (id && transaction) {\r\n\r\n            setData({...transaction})\r\n        }\r\n        console.log(\"ini data\", transaction)\r\n    }, [transaction])\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            findByIdDispatch(id)\r\n        }\r\n    }, [id, findByIdDispatch])\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/report\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"STAFF\" || localStorage.getItem(\"roles\") == \"SUPERVISOR\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Detail Transaction</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            {/*<a href=\"/transaction/form\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                            {/*    <i className=\"fas fa-pencil-alt\"/>*/}\r\n                                                            {/*</a>*/}\r\n                                                            {localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&\r\n                                                            <a href=\"/transaction\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>}\r\n                                                            {localStorage.getItem(\"roles\") == \"STAFF\" &&\r\n                                                            <a href=\"/approval/staff\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n\r\n                                                            <tr>\r\n                                                                <td>Name</td>\r\n                                                                <td>{data?.transaction?.customer?.name}</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Employee Type</td>\r\n                                                                <td>{data?.transaction?.customer?.employeeType}</td>\r\n                                                            </tr>\r\n                                                            {data?.transaction?.customer?.employeeType == \"CONTRACT\"\r\n                                                            &&\r\n                                                            <>\r\n                                                                <tr>\r\n                                                                    <td>Contract Start</td>\r\n                                                                    <td>{data?.transaction?.customer?.contractStart}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Contract Length</td>\r\n                                                                    <td>{data?.transaction?.customer?.contractLength} month</td>\r\n                                                                </tr>\r\n                                                            </>}\r\n                                                            <tr>\r\n                                                                <td>Income</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.income}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Outcome</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.outcome}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Loan</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.loan}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Tenor</td>\r\n                                                                <td>{data?.transaction?.tenor} month</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Interest Rate</td>\r\n                                                                <td>{data?.transaction?.interestRate} %</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Main Loan</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.mainLoan}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Interest</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.interest}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Installment</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.installment}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Installment Total</td>\r\n                                                                <td><NumberFormat value={data?.transaction?.installmentTotal}\r\n                                                                                  displayType={'text'}\r\n                                                                                  thousandSeparator={true}\r\n                                                                                  prefix={'Rp '}/></td>\r\n                                                            </tr>\r\n                                                            {localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&\r\n                                                                <>\r\n                                                            <tr>\r\n                                                                <td>Credit ratio</td>\r\n                                                                <td>{data?.transaction?.creditRatio} %</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Finance Criteria</td>\r\n                                                                <td>{data?.transaction?.financeCriteria ?\r\n                                                                    \"True\" : \"False\"\r\n                                                                }</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Employee Criteria</td>\r\n                                                                <td>{data?.transaction?.employeeCriteria ?\r\n                                                                    \"True\" : \"False\"\r\n                                                                }</td>\r\n                                                            </tr>\r\n                                                            </>}\r\n                                                            <tr>\r\n                                                                <td>Notes</td>\r\n                                                                <td>{data?.transaction?.notes}</td>\r\n                                                            </tr>\r\n                                                            {localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <Button style={{background: \"#e42256\"}}\r\n                                                                            onClick={handleApproval}>\r\n                                                                        <FontAwesomeIcon icon={faCheckCircle}/>\r\n                                                                        Approve\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <Button style={{background: \"#e42256\"}}\r\n                                                                            onClick={handleReject}>\r\n                                                                        <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                                                        Reject\r\n                                                                    </Button>\r\n                                                                </td>\r\n                                                            </tr>}\r\n\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.findApprovalByIdReducer || state.saveApprovalReducer.loading,\r\n        transaction: state.findApprovalByIdReducer.data,\r\n        savedApprove: state.saveApprovalReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findByIdDispatch: findByIdApprovalAction,\r\n    saveApprovalAction\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionDetail)","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\home\\HomeMaster.js",["795","796","797"],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonUse.js",["798","799","800","801","802","803","804","805","806","807","808","809"],"import React, {useEffect, useState} from \"react\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Container, Button, Form} from \"reactstrap\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {findAllNeedAction} from \"../../actions/needAction\";\r\nimport {connect} from \"react-redux\";\r\nimport Containers from \"../../components/Containers/Container\";\r\nimport TransactionRow from \"../transaction/transactionList/TransactionRow\";\r\nimport SignIn from \"../login/SignIn\";\r\nimport ReasonRow from \"./ReasonRow\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\n\r\n\r\nconst ReasonUse = ({findAllNeedAction, needs, error, isLoading}) => {\r\n\r\n    const onReload = () => {\r\n        findAllNeedAction();\r\n    }\r\n\r\n    useEffect(onReload, [findAllNeedAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n            <Containers error={error}>\r\n                <Header/>\r\n                <Menu/>\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"content-header\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <h1 className=\"m-0 text-dark\">Loan Purpose</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header border-0\">\r\n                                            {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                            <div className=\"card-tools\">\r\n                                                {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                {/*    <i className=\"fas fa-download\"/>*/}\r\n                                                {/*</a>*/}\r\n                                                <a href=\"/need/form\" className=\"btn btn-tool btn-sm\">\r\n                                                    <i className=\"fas fa-plus-circle\"/>\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"card-body table-responsive p-0\">\r\n                                            <table className=\"table table-striped table-valign-middle\">\r\n                                                <thead style={{textAlign: \"left\"}}>\r\n                                                <tr>\r\n                                                    <th>No</th>\r\n                                                    {/*<th>Id</th>*/}\r\n                                                    <th>Type</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody style={{textAlign: \"left\"}}>\r\n                                                {\r\n                                                    !isLoading ?\r\n                                                        needs?.list?.map((e, i) => {\r\n                                                            return (\r\n                                                                <ReasonRow key={i} data={e}\r\n                                                                           number={(needs.page * needs.size) + 1 + i}/>\r\n                                                            )\r\n                                                        }) :\r\n                                                        <tr>\r\n                                                            <td colSpan=\"3\"> Loading..</td>\r\n                                                        </tr>\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*<Footer/>*/}\r\n\r\n            </Containers>\r\n            <Footer/>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        needs: state.findAllNeedReducer.data,\r\n        error: state.findAllNeedReducer,\r\n        isLoading: state.findAllNeedReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllNeedAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonUse)","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportList.js",["810","811","812","813","814"],"import Containers from '../../components/Containers/Container'\r\nimport React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport SignIn from \"../login/SignIn\";\r\nimport {findAllReportAction} from \"../../actions/reportAction\";\r\nimport ReportRow from \"./ReportRow\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Error from \"../Error\";\r\n\r\nfunction ReportList({\r\n    isLoading, reports, error, findAllReportAction\r\n                    }) {\r\n\r\n    const onReload = () => {\r\n        findAllReportAction();\r\n        console.log(\"ini data\", reports)\r\n    }\r\n\r\n    useEffect(onReload, [findAllReportAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" || localStorage.getItem(\"roles\") == \"SUPERVISOR\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Report</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"#\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-download\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <TableScrollbar rows={10}>\r\n                                                        <table className=\"table table-bordered table-valign-middle table-head-fixed\">\r\n                                                            <thead style={{background:\"#FCE051\"}}>\r\n                                                            <tr >\r\n                                                                <th colSpan=\"5\"> Customer Data</th>\r\n                                                                <th colSpan=\"11\">Transaction</th>\r\n                                                                <th colSpan=\"5\">Approved</th>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>No</th>\r\n                                                                <th>Name</th>\r\n                                                                <th>Email</th>\r\n                                                                <th>Id Number</th>\r\n                                                                <th>Address</th>\r\n                                                                <th>Employee Type</th>\r\n                                                                <th>Income</th>\r\n                                                                <th>Outcome</th>\r\n                                                                <th>Loan Amount</th>\r\n                                                                <th>Interest Rate</th>\r\n                                                                <th>Tenor</th>\r\n                                                                <th>Principle</th>\r\n                                                                <th>Interest</th>\r\n                                                                <th>Installment</th>\r\n                                                                <th>Installment Total</th>\r\n                                                                <th>Credit ratio</th>\r\n                                                                <th>Finance Criteria</th>\r\n                                                                <th>Employee Criteria</th>\r\n                                                                <th>Approval</th>\r\n                                                                <th>Submitted Date</th>\r\n                                                                <th>Approved Date</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n\r\n                                                            <tbody>\r\n                                                            {\r\n                                                                ! isLoading ?\r\n                                                                    reports?.list?.map((e,i) => {\r\n                                                                        return (\r\n                                                                            <ReportRow key={i} data={e}\r\n                                                                            number={(reports.page * reports.size) + 1 + i}/>\r\n                                                                        )\r\n                                                                    }) :\r\n                                                                    <tr>\r\n                                                                        <td> Loading ...</td>\r\n                                                                    </tr>\r\n\r\n                                                            }\r\n                                                            </tbody>\r\n\r\n                                                        </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n                        </Containers>\r\n\r\n                    </>\r\n                    :\r\n                    <div>\r\n                       <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        reports: state.findAllReportReducer.data || [],\r\n        error: state.findAllReportReducer.error,\r\n        isLoading: state.findAllReportReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllReportAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportList);","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\DetailCustomer.js",["815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837"],"import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {Input, ModalFooter} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {findCustomerByIdAction} from \"../../actions/customerAction\";\r\nimport {Button} from \"reactstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport {Label} from \"reactstrap\";\r\nimport {FormGroup} from \"reactstrap\";\r\nimport {Form} from \"reactstrap\";\r\nimport {ModalBody} from \"reactstrap\";\r\nimport {ModalHeader} from \"reactstrap\";\r\nimport {Modal} from \"reactstrap\";\r\nimport Container from \"../../components/Containers\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faHandshake, faIdCard, faMailBulk, faSave, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport man from \"../../assets/images/icon/man.png\"\r\nimport id from \"../../assets/images/icon/id.svg\"\r\n\r\nfunction CustomerDetail({isLoading, customer, findCustomerByIdAction}) {\r\n\r\n    let {id} = useParams()\r\n    const {data, setData} = useState({\r\n        name : \"\"\r\n    })\r\n    useEffect(() => {\r\n        findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id > 0)\r\n            findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                // localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                //     <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Detail Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-header border-0\">\r\n                                                            {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                            <div className=\"card-tools\">\r\n                                                                {/*<a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                                {/*    <i className=\"fas fa-pencil-alt\" />*/}\r\n                                                                {/*</a>*/}\r\n                                                                <a href=\"/customer/staff\" className=\"btn btn-tool btn-sm\">\r\n                                                                    <i className=\"fas fa-arrow-left\" />\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"card-body table-responsive p-0\">\r\n                                                            <table className=\"table table-striped table-valign-middle\">\r\n                                                                {/*<thead>*/}\r\n                                                                {/*<tr>*/}\r\n                                                                {/*    <th>Key</th>*/}\r\n                                                                {/*    <th>Value</th>*/}\r\n                                                                {/*</tr>*/}\r\n                                                                {/*</thead>*/}\r\n                                                                <tbody style={{textAlign: \"left\"}}>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faUser}/></td>\r\n                                                                    <td>{customer.name}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faMailBulk}/></td>\r\n                                                                    <td>{customer.email}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faIdCard}/></td>\r\n                                                                    <td>{customer.idNumber}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faHandshake}/></td>\r\n                                                                    <td>{customer.employeeType}</td>\r\n                                                                </tr>\r\n                                                                {customer.employeeType == \"CONTRACT\"\r\n                                                                &&\r\n                                                                    <>\r\n                                                                        <tr>\r\n                                                                            <td>Contract Length</td>\r\n                                                                            <td>{customer.contractLength}</td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Contract Start</td>\r\n                                                                            <td>{customer.contractStart}</td>\r\n                                                                        </tr>\r\n                                                                    </>\r\n                                                                }\r\n                                                                        <tr>\r\n                                                                            <td>ID Card Photo</td>\r\n                                                                            <td><img src={customer.idPhoto} width={100}/></td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Profile Photo</td>\r\n                                                                            <td><img src={customer.profilePhoto} width={100}/></td>\r\n                                                                        </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    // </>\r\n                    // :\r\n                    // <div> cannot access</div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.findCustomerByIdReducer.loading || state.saveCustomerReducer.loading,\r\n        customer: state.findCustomerByIdReducer.data || [],\r\n    }\r\n}\r\n\r\n//findById ambil dari action\r\nconst mapDispatchToProps = {findCustomerByIdAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetail)","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js",["838"],"import React, {useEffect} from 'react'\r\nimport {findAllCustomerAction} from '../../../actions/customerAction'\r\nimport {connect} from \"react-redux\"\r\nimport Containers from \"../../../components/Containers/Container\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Row from \"./Row\";\r\nimport Error from \"../../Error\";\r\nimport Footer from \"../../../components/dashboard/Footer\";\r\n\r\nfunction CustomerListBySubmitter({\r\n                          error,\r\n                          isLoading,\r\n                          customers,\r\n                          findAllCustomerAction\r\n                      }) {\r\n\r\n    const onReload = () => {\r\n        findAllCustomerAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllCustomerAction])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                    <>\r\n                <Containers error={error}>\r\n                    <Header/>\r\n                    <Menu/>\r\n                    <div className=\"content-wrapper\">\r\n                        <div className=\"content-header\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row mb-2\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <h1 className=\"m-0 text-dark\">List Customer</h1>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-header border-0\">\r\n                                                {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                <div className=\"card-tools\">\r\n                                                    {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                    {/*    <i className=\"fas fa-download\"/>*/}\r\n                                                    {/*</a>*/}\r\n                                                    <a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">\r\n                                                        <i className=\"fas fa-plus-circle\"/>\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"card-body table-responsive p-0\">\r\n\r\n                                                <TableScrollbar rows={10}>\r\n                                                    <table className=\"table table-striped table-valign-middle\">\r\n                                                        <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\r\n                                                        <tr>\r\n                                                            <th>Number</th>\r\n                                                            {/*<th>Submitter</th>*/}\r\n                                                            <th>Customer Name</th>\r\n                                                            <th>ID Card</th>\r\n                                                            <th>Employee Type</th>\r\n                                                            <th>Submitter</th>\r\n                                                            <th>Action</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody style={{textAlign: \"left\"}}>\r\n                                                        {\r\n                                                            !isLoading ?\r\n                                                                customers?.list?.map((e, i) => {\r\n\r\n                                                                    return (\r\n                                                                        <Row key={i} data={e}\r\n                                                                                     number={(customers.page * customers.size) + 1 + i}/>\r\n                                                                    )\r\n                                                                })\r\n                                                                :\r\n                                                                <tr>\r\n                                                                    <td colSpan=\"3\"> Loading..</td>\r\n                                                                </tr>\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </TableScrollbar>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Footer/>\r\n                </Containers>\r\n                 </>\r\n                :\r\n                <div>\r\n                    <Error/>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllCustomerBySubmitter.error,\r\n        customers: state.findAllCustomerBySubmitter.data || [],\r\n        isLoading: state.findAllCustomerBySubmitter.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllCustomerAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerListBySubmitter)\r\n","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\listTransactionByStaff\\ListTransactionByStaff.js",["839","840","841","842"],"import {Button, Container, Table} from \"reactstrap\";\r\nimport Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Row from \"../../transaction/listTransactionByStaff/Row\";\r\n\r\nfunction TransactionList({\r\n                             isLoading,\r\n                             transactions,\r\n                             error,\r\n                             findAllTransactionAction\r\n                         }) {\r\n\r\n    const onReload = () => {\r\n        findAllTransactionAction();\r\n\r\n        console.log(\"on reload\", )\r\n    };\r\n\r\n    useEffect(onReload, [findAllTransactionAction])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">List Transaction</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        <div className=\"card-tools\">\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <TableScrollbar rows={10}>\r\n                                                            <table className=\"table table-striped table-valign-middle\">\r\n                                                                <thead\r\n                                                                    style={{textAlign: \"left\", background: \"#FCE051\"}}>\r\n                                                                <tr>\r\n                                                                    <th>No</th>\r\n                                                                    <th>Name</th>\r\n                                                                    <th>Employee Type</th>\r\n                                                                    <th>Loan Amount</th>\r\n                                                                    <th>Tenor</th>\r\n                                                                    <th>Interest Rate</th>\r\n                                                                    <th>Pending Approval</th>\r\n                                                                </tr>\r\n                                                                </thead>\r\n                                                                <tbody style={{textAlign: \"left\"}}>\r\n                                                                {\r\n                                                                    !isLoading ?\r\n                                                                        transactions?.list?.map((e, i) => {\r\n                                                                            return (\r\n                                                                                <Row key={i} data={e}\r\n                                                                                     number={(transactions.page * transactions.size) + 1 + i}/>\r\n                                                                            )\r\n                                                                        }) :\r\n                                                                        <tr>\r\n                                                                            <td colSpan=\"3\"> Loading..</td>\r\n                                                                        </tr>\r\n                                                                }\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n\r\n                        </Containers>\r\n                    </>\r\n                    :\r\n                    <p>\r\n                        cannot access\r\n                    </p>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllTransactionByStaff.error,\r\n        transactions: state.findAllTransactionByStaff.data || [],\r\n        isLoading: state.findAllTransactionByStaff.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllTransactionAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportDetail.js",["843","844","845","846","847"],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonForm.js",["848","849"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport { Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport { Button, Form, FormGroup, Input, Label, Col} from \"reactstrap\";\r\nimport {saveNeedAction} from \"../../actions/needAction\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport Error from \"../Error\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ReasonForm = ({saveNeedAction, saveNeedType, error, isLoading}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [data, setData] = useState({})\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (saveNeedType) {\r\n            swal(\"Add Loan Purpose Success\", \"\", \"success\")\r\n            history.push('/need')\r\n        }\r\n        if (error) {\r\n            swal(\"Sorry..!\",`${error.message}`, \"error\")\r\n        }\r\n        console.log(\"error\", error)\r\n    }, [saveNeedType, history, error])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n        console.log(\"handlechange\", data)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveNeedAction(data)\r\n\r\n        console.log(\"handlesubmit\", data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/need\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n            <div>\r\n                <Header/>\r\n                <Menu/>\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"content-header\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <h1 className=\"m-0 text-dark\">Need Type</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-body table-responsive p-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form form-container\">\r\n                                                    {!isLoading ?\r\n                                                        <Form onSubmit={handleSubmit}>\r\n                                                            <FormGroup row>\r\n                                                                <Label htmlFor=\"type\" sm={3} style={{textAlign:\"left\"}}>Need\r\n                                                                    Type</Label>\r\n                                                                <Col sm={9}>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        value={data?.type || ''}\r\n                                                                        type=\"text\"\r\n                                                                        name=\"type\"\r\n                                                                        placeholder=\"input need type\"/>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup check row>\r\n                                                                <Col sm={{size: 10, offset: 2}}>\r\n                                                                    <Button style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon icon={faSave}/>\r\n                                                                        Submit\r\n                                                                    </Button> {' '}\r\n                                                                    <Button href=\"/need\"\r\n                                                                            style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon\r\n                                                                            icon={faArrowLeft}/>\r\n                                                                        Cancel\r\n                                                                    </Button>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n\r\n                                                        </Form> :\r\n                                                        <div>Loading...</div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n        :\r\n    <div>\r\n        <Error/>\r\n    </div>\r\n}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        saveNeedType: state.saveNeedReducer.data,\r\n        error: state.saveNeedReducer.error,\r\n        isLoading: state.saveNeedReducer.isLoading\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {saveNeedAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonForm)","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\loginAction.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\Error\\index.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\index.js",["850"],"import {combineReducers} from \"redux\";\r\nimport {\r\n  findAllCustomerByIdReducer, findAllCustomerBySubmitter,\r\n  findAllCustomerReducer,\r\n  findCustomerByIdReducer,\r\n  saveCustomerReducer,\r\n  updateCustomerReducer\r\n} from \"./customerReducer\";\r\nimport {\r\n  finAllTransactionReducer, findAllTransactionByStaff,\r\n  findTransactionByIdReducer,\r\n  saveTransactionReducer,\r\n  updateTransactionReducer\r\n} from \"./transactionReducer\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {\r\n  findAccountByIdReducer,\r\n  findAllAccountReducer,\r\n  removeAccountByIdReducer,\r\n  saveAccountReducer,\r\n  updateAccountReducer\r\n} from \"./signupReducer\";\r\nimport {findAllReportReducer} from \"./reportReducer\";\r\nimport {saveApprovalReducer, findAllApprovalReducer, findApprovalByIdReducer} from \"./approvalReducer\";\r\nimport {findAllNeedReducer, saveNeedReducer} from \"./needReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  //CUSTOMER\r\n  findAllCustomerReducer,\r\n  saveCustomerReducer,\r\n  findCustomerByIdReducer,\r\n  updateCustomerReducer,\r\n\r\n  findAllCustomerBySubmitter,\r\n\r\n  //TRANSACTION\r\n  finAllTransactionReducer,\r\n  saveTransactionReducer,\r\n  findTransactionByIdReducer,\r\n  updateTransactionReducer,\r\n  findAllTransactionByStaff,\r\n\r\n  //LOGIN\r\n  loginReducer,\r\n\r\n  //SIGNUP\r\n  findAllAccountReducer,\r\n  saveAccountReducer,\r\n  findAccountByIdReducer,\r\n  updateAccountReducer,\r\n  removeAccountByIdReducer,\r\n\r\n  //REPORT\r\n  findAllReportReducer,\r\n\r\n  //APPROVAL\r\n  saveApprovalReducer,\r\n  findAllApprovalReducer,\r\n  findApprovalByIdReducer,\r\n\r\n  //NEEDTYPE\r\n  findAllNeedReducer,\r\n  saveNeedReducer,\r\n})\r\n\r\nexport default rootReducer","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\index.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\index.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\index.js",["851","852","853","854","855"],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\signupAction.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Header.js",["856","857","858","859","860","861","862","863"],"import React from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {\r\n  faCogs,\r\n  faFolderPlus,\r\n  faHome, faLock,\r\n  faSignOutAlt,\r\n  faUserCog,\r\n  faUserPlus,\r\n  faUsers\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleOnclick = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('roles')\r\n    localStorage.removeItem('username')\r\n    // history.push('/')\r\n  }\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\" style={{background:\"#ff8370\"}}>\r\n      {/* Left navbar links */}\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\r\n            <i className=\"fas fa-bars\" />\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <Link to=\"/dashboard\" className=\"nav-link\">\r\n            <FontAwesomeIcon icon={faHome}/>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* Right navbar links */}\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        {/*{localStorage.getItem(\"roles\") == \"MASTER\" &&*/}\r\n        {/*<ul className=\"navbar-nav ml-auto\">*/}\r\n        {/*      <li className=\"nav-item\">*/}\r\n        {/*        <a className=\"nav-link\" href=\"/need\">*/}\r\n        {/*          <FontAwesomeIcon icon={faFolderPlus}/>*/}\r\n        {/*        </a>*/}\r\n        {/*      </li>*/}\r\n        {/*      <li className=\"nav-item\">*/}\r\n        {/*        <a className=\"nav-link\" href=\"/register\">*/}\r\n        {/*          <FontAwesomeIcon icon={faUserPlus}/>*/}\r\n        {/*        </a>*/}\r\n        {/*      </li>*/}\r\n        {/*</ul>*/}\r\n        {/*}*/}\r\n        {localStorage.getItem(\"roles\") == \"STAFF\" &&\r\n        <>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link\" data-toggle=\"dropdown\">\r\n              {/*<i className=\"far fa-bell\" />*/}\r\n              <FontAwesomeIcon icon={faCogs}/>\r\n            </a>\r\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\r\n              <div className=\"dropdown-divider\" />\r\n              <a href=\"#\" className=\"dropdown-item\">\r\n                <FontAwesomeIcon icon={faUserCog}/> Setting Profile\r\n                <span className=\"float-right text-muted text-sm\"></span>\r\n              </a>\r\n              <div className=\"dropdown-divider\" />\r\n              <a href=\"/staff/password\" className=\"dropdown-item\">\r\n                <FontAwesomeIcon icon={faLock} /> Change Password\r\n                <span className=\"float-right text-muted text-sm\"></span>\r\n              </a>\r\n            </div>\r\n          </li>\r\n        </>\r\n        }\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className=\"nav-link\"\r\n            onClick={handleOnclick}\r\n            href=\"/\"\r\n          >\r\n            <FontAwesomeIcon icon={faSignOutAlt}/>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Menu.js",["864","865","866","867","868","869","870","871"],"import React from \"react\";\r\nimport {faCheckDouble, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Menu() {\r\n  return (\r\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" style={{background:\"#e42256\"}}>\r\n        {/* Brand Logo */}\r\n        <a className=\"brand-link\">\r\n          {/*<img*/}\r\n          {/*  src=\"dist/img/AdminLTELogo.png\"*/}\r\n          {/*  alt=\"AdminLTE Logo\"*/}\r\n          {/*  className=\"brand-image img-circle elevation-3\"*/}\r\n          {/*  style={{ opacity: \".8\" }}*/}\r\n          {/*/>*/}\r\n          <span className=\"brand-text font-weight-light\">OK' 200</span>\r\n        </a>\r\n        {/* Sidebar */}\r\n        <div className=\"sidebar\">\r\n          {/* Sidebar user panel (optional) */}\r\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n            <div className=\"image\">\r\n              {/*<img*/}\r\n              {/*  src=\"dist/img/user2-160x160.jpg\"*/}\r\n              {/*  className=\"img-circle elevation-2\"*/}\r\n              {/*  alt=\"User Image\"*/}\r\n              {/*/>*/}\r\n            </div>\r\n            <div className=\"info\">\r\n              <a href=\"#\" className=\"d-block\">\r\n                {localStorage.getItem('username')}\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/* Sidebar Menu */}\r\n          <nav className=\"mt-2\">\r\n            {localStorage.getItem(\"roles\") == \"MASTER\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n              <li className=\"nav-item has-treeview\">\r\n                <Link to=\"/master\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-users\"/>\r\n                  <p>\r\n                    Account User\r\n                  </p>\r\n                </Link>\r\n              </li>\r\n              {/*<li className=\"nav-item has-treeview\">*/}\r\n              {/*  <a href=\"/customer/form\" className=\"nav-link\">*/}\r\n              {/*    <i className=\"nav-icon fas fa-user-check\"/>*/}\r\n              {/*    <p>*/}\r\n              {/*      Form Customer*/}\r\n              {/*    </p>*/}\r\n              {/*  </a>*/}\r\n              {/*</li>*/}\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/need\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    Loan Purpose\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              {/*<li className=\"nav-item has-treeview\">*/}\r\n              {/*  <a href=\"/transaction\" className=\"nav-link\">*/}\r\n              {/*    <i className=\"nav-icon fas fa-wallet\"/>*/}\r\n              {/*    <p>*/}\r\n              {/*      Transaction*/}\r\n              {/*    </p>*/}\r\n              {/*  </a>*/}\r\n              {/*</li>*/}\r\n              {/*<li className=\"nav-item has-treeview\">*/}\r\n              {/*  <a href=\"/report\" className=\"nav-link\">*/}\r\n              {/*    <i className=\"nav-icon fas fa-check-double\"/>*/}\r\n              {/*    <p>*/}\r\n              {/*      Report*/}\r\n              {/*    </p>*/}\r\n              {/*  </a>*/}\r\n              {/*</li>*/}\r\n            </ul>\r\n            }\r\n            {localStorage.getItem(\"roles\") == \"STAFF\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n              {/*<li className=\"nav-item has-treeview\">*/}\r\n              {/*  <a href=\"/customer/form\" className=\"nav-link\">*/}\r\n              {/*    <i className=\"nav-icon fas fa-user-check\"/>*/}\r\n              {/*    <p>*/}\r\n              {/*      Form Customer*/}\r\n              {/*    </p>*/}\r\n              {/*  </a>*/}\r\n              {/*</li>*/}\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/customer/staff\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/approval/staff\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/report/staff\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            }\r\n\r\n            {localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/report\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            }\r\n\r\n          </nav>\r\n          {/* /.sidebar-menu */}\r\n        </div>\r\n        {/* /.sidebar */}\r\n      </aside>\r\n  );\r\n}","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Footer.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\DropdownList\\DropdownList.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\transactionAction.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\approvalAction.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\Home.js",["872","873"],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\Containers\\Container.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\needAction.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\Row.js",["874","875","876"],"import React from 'react'\r\n\r\nconst Row = ({data, onUpdate, number}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.name}</td>\r\n            <td>{data.idNumber} </td>\r\n            <td>{data.employeeType}</td>\r\n            <td>{data.submitter}</td>\r\n            <td>\r\n                <a onClick={data} href={`/customer/${data.id}/detail`} className=\"text-muted\">\r\n                    <i className=\"fas fa-info-circle\" />\r\n                </a>{' '}\r\n                <a onClick={onUpdate} href={`/customer/${data.id}/edit`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\" />\r\n                </a>{' '}\r\n                {localStorage.getItem(\"roles\") == \"MASTER\" || \"STAFF\" &&\r\n                <>\r\n                <a onClick={data} href={`/transaction/form/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-wallet\" />\r\n                </a>\r\n                    </>}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\navbar\\NavbarMaster.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\home\\card\\CardboxMaster.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\sidebar\\SideNavBar.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\customerAction.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\actions\\reportAction.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\ReportRow.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\constants\\actions.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonRow.js",["877","878"],"import React from 'react'\r\n\r\nconst ReasonRow = ({data, number, onUpdate, onDeleted}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            {/*<td>{data.id}</td>*/}\r\n            <td>{data.type} </td>\r\n            <td>\r\n                <a onClick={onUpdate} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\"/>\r\n                </a>{' '}\r\n                <a onClick={onDeleted} className=\"text-muted\">\r\n                    <i className=\"fas fa-trash-alt\"/>\r\n                </a>{' '}</td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ReasonRow;","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionRow.js",["879","880","881","882"],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\transactionReducer.js",["883","884","885"],"import {\r\n    FIND_ALL_CUSTOMER,\r\n    FIND_ALL_TRANSACTION,\r\n    FIND_ALL_TRANSACTION_FAILURE,\r\n    FIND_ALL_TRANSACTION_SUCCESS,\r\n    FIND_CUSTOMER_BY_SUBMITTER_FAILURE,\r\n    FIND_CUSTOMER_BY_SUBMITTER_SUCCESS,\r\n    FIND_TRANSACTION_BY_ID,\r\n    FIND_TRANSACTION_BY_ID_FAILURE,\r\n    FIND_TRANSACTION_BY_ID_SUCCESS,\r\n    FIND_TRANSACTION_BY_STAFF,\r\n    FIND_TRANSACTION_BY_STAFF_FAILURE,\r\n    FIND_TRANSACTION_BY_STAFF_SUCCESS,\r\n    SAVE_TRANSACTION,\r\n    SAVE_TRANSACTION_FAILURE,\r\n    SAVE_TRANSACTION_SUCCESS,\r\n    UPDATE_TRANSACTION,\r\n    UPDATE_TRANSACTION_FAILURE,\r\n    UPDATE_TRANSACTION_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\n\r\nconst initialState = {\r\n    data: null,\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const finAllTransactionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_ALL_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case FIND_ALL_TRANSACTION_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_ALL_TRANSACTION_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const saveTransactionReducer = (state = {...initialState}, action) => {\r\n    switch (action.type) {\r\n        case SAVE_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            };\r\n        case SAVE_TRANSACTION_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case SAVE_TRANSACTION_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const findTransactionByIdReducer = (state = {initialState, data: false}, action) => {\r\n    switch (action.type) {\r\n        case FIND_TRANSACTION_BY_ID:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n\r\n            };\r\n        case FIND_TRANSACTION_BY_ID_SUCCESS:\r\n            console.log(\"ini reducer\", action.data)\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_TRANSACTION_BY_ID_FAILURE:\r\n            return {\r\n                data: false,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null,\r\n            };\r\n    }\r\n}\r\n\r\nexport const updateTransactionReducer = (state = {...initialState}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case UPDATE_TRANSACTION_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            }\r\n        case UPDATE_TRANSACTION_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const findAllTransactionByStaff = (state = initialState, action) => {\r\n    // console.log(\"ini action\", action)\r\n    switch (action.type) {\r\n        case FIND_TRANSACTION_BY_STAFF:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case FIND_TRANSACTION_BY_STAFF_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_TRANSACTION_BY_STAFF_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\customerReducer.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\loginReducer.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\Error\\Error.js",["886","887"],"import React from 'react'\r\nimport undraw_page_not_found_su7k from \"../../assets/images/undraw_page_not_found_su7k.svg\";\r\nimport {FaFontAwesome} from \"react-icons/all\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faHome} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Button} from \"reactstrap\";\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <div>\r\n                        <img src={undraw_page_not_found_su7k} alt=\"\"\r\n                             className=\"img-fluid d-none d-md-block\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Page not found!</h1><br/>\r\n                    <h4 style={{color: \"#e42256\"}}>Sorry, you can not access this page!</h4><br/>\r\n                    <h4 style={{color: \"#e42256\"}}>Please, back to home!</h4><br/>\r\n                    <Button href=\"/dashboard\"\r\n                            style={{background: \"#e42256\"}}>\r\n                        <FontAwesomeIcon\r\n                            icon={faHome}/> Back\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\signupReducer.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\reportReducer.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\needReducer.js",["888","889","890","891","892","893","894"],"import {\r\n    FIND_NEEDTYPE_BY_ID, FIND_NEEDTYPE_BY_ID_FAILURE, FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS, REMOVE_NEEDTYPE_BY_ID, REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS, UPDATE_NEEDTYPE, UPDATE_NEEDTYPE_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const findAllNeedReducer = (state = initialState, action) => {\r\n    // console.log(\"ini action reducer\", action.data)\r\n    switch (action.type) {\r\n        case FIND_ALL_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case FIND_ALL_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_ALL_NEEDTYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const saveNeedReducer = (state = {...initialState}, action) => {\r\n\r\n    switch (action.type) {\r\n        case SAVE_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case SAVE_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case SAVE_NEEDTYPE_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\reducers\\approvalReducer.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\loginSaga.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\signupSaga.js",["895"],"import axios from \"../api\";\r\nimport {\r\n    FIND_ACCOUNT_BY_ID,\r\n    FIND_ALL_ACCOUNT,\r\n    FIND_ALL_ACCOUNT_FAILURE,\r\n    FIND_ALL_ACCOUNT_SUCCESS, REMOVE_ACCOUNT_BY_ID, REMOVE_ACCOUNT_BY_ID_FAILURE, REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n    SAVE_ACCOUNT,\r\n    SAVE_ACCOUNT_FAILURE,\r\n    SAVE_ACCOUNT_SUCCESS, UPDATE_ACCOUNT, UPDATE_CUSTOMER\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\n\r\nfunction* findAllAccountSaga() {\r\n    let result = yield axios.get(\"/master\")\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveAccountSaga(action) {\r\n    console.log(\"saga\", action.model)\r\n    let model = action.model;\r\n    let method = 'POST', url = '/master/signup';\r\n    if (model.id) {\r\n        method = \"PATCH\";\r\n        url = `/master/${model.id}`\r\n    }\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_ACCOUNT_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_ACCOUNT_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findAccountByIdSaga(action) {\r\n    let result = yield axios.get(`/master/${action.id}`)\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* updateAccountSaga(action) {\r\n    let result = false\r\n\r\n    yield put({\r\n        type: UPDATE_ACCOUNT,\r\n        data: result\r\n    })\r\n}\r\n\r\nfunction* removeAccountById(action) {\r\n    let result = yield axios.delete(`/master/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini action\", data)\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nexport function* watchFindAllAccount() {\r\n    yield takeLatest(FIND_ALL_ACCOUNT, findAllAccountSaga)\r\n}\r\n\r\nexport function* watchSaveAccount() {\r\n    yield takeLatest(SAVE_ACCOUNT, saveAccountSaga)\r\n}\r\n\r\nexport function* watchFindByIdAccount() {\r\n    yield takeLatest(FIND_ACCOUNT_BY_ID, findAccountByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateAccountById() {\r\n    yield takeLatest(UPDATE_ACCOUNT, updateAccountSaga)\r\n}\r\n\r\nexport function* watchRemoveById() {\r\n    yield takeLatest(REMOVE_ACCOUNT_BY_ID, removeAccountById)\r\n}","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\customerSaga.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\transactionSaga.js",["896","897","898","899"],"\r\nimport {put, takeLatest} from \"redux-saga/effects\";\r\nimport axios from \"../api\";\r\nimport {\r\n    FIND_ALL_APPROVAL_SUCCESS,\r\n    FIND_ALL_TRANSACTION,\r\n    FIND_ALL_TRANSACTION_FAILURE,\r\n    FIND_ALL_TRANSACTION_SUCCESS,\r\n    FIND_CUSTOMER_BY_SUBMITTER_FAILURE,\r\n    FIND_CUSTOMER_BY_SUBMITTER_SUCCESS,\r\n    FIND_TRANSACTION_BY_ID,\r\n    FIND_TRANSACTION_BY_ID_FAILURE,\r\n    FIND_TRANSACTION_BY_ID_SUCCESS,\r\n    FIND_TRANSACTION_BY_STAFF,\r\n    FIND_TRANSACTION_BY_STAFF_FAILURE,\r\n    FIND_TRANSACTION_BY_STAFF_SUCCESS,\r\n    SAVE_TRANSACTION,\r\n    SAVE_TRANSACTION_FAILURE,\r\n    SAVE_TRANSACTION_SUCCESS,\r\n    UPDATE_TRANSACTION_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\nfunction* findAllTransactionSaga(data) {\r\n\r\n    let result = yield axios.get(\"/approval/waiting\")\r\n        .then (data => {\r\n            return ({\r\n                type : FIND_ALL_TRANSACTION_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return({\r\n                type: FIND_ALL_TRANSACTION_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* saveTransactionSaga(action) {\r\n    let model = action.model\r\n    let method = 'POST', url = '/transaction';\r\n\r\n    let result = yield axios ({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_TRANSACTION_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_TRANSACTION_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findTransactionByIdSaga(action) {\r\n    let result = yield axios.get(`/transaction/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini saga\", data)\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_ID_SUCCESS,\r\n                data: data\r\n\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put (result)\r\n}\r\n\r\nfunction* updateTransactionSaga(action) {\r\n    let result = yield axios.get(`/${action.id}/transaction}`)\r\n        .then(data => {\r\n            return({\r\n                type: UPDATE_TRANSACTION_SUCCESS,\r\n                data: result\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put({\r\n    })\r\n}\r\n\r\nfunction* findTransactionByStaffSaga(action) {\r\n    let result = yield axios.get('/approval/staff')\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_STAFF_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_TRANSACTION_BY_STAFF_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nexport function* watchFindAllTransaction() {\r\n    yield takeLatest(FIND_ALL_TRANSACTION, findAllTransactionSaga)\r\n}\r\n\r\nexport function* watchSaveTransaction() {\r\n    yield takeLatest(SAVE_TRANSACTION, saveTransactionSaga)\r\n}\r\n\r\nexport function* watchFindTransactionById() {\r\n    yield takeLatest (FIND_TRANSACTION_BY_ID, findTransactionByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateTransactionById() {\r\n    yield takeLatest (UPDATE_TRANSACTION_SUCCESS, updateTransactionSaga)\r\n}\r\n\r\nexport function* watchFindAllTransactionByStaff() {\r\n    yield takeLatest (FIND_ALL_TRANSACTION, findTransactionByStaffSaga)\r\n}","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\reportSaga.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\approvalSaga.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\sagas\\needSaga.js",["900","901","902","903","904"],"import {\r\n    FIND_NEEDTYPE_BY_ID,\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS, REMOVE_NEEDTYPE_BY_ID, REMOVE_NEEDTYPE_BY_ID_FAILURE, REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS, UPDATE_NEEDTYPE\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\n\r\nfunction* findAllNeedSaga() {\r\n    let result = yield axios.get(\"/need\")\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_NEEDTYPE_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_NEEDTYPE_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveNeedSaga(action) {\r\n    let model = action.model;\r\n    let method = 'POST', url = '/need';\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_NEEDTYPE_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_NEEDTYPE_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nexport function* watchFindAllNeed() {\r\n    yield takeLatest(FIND_ALL_NEEDTYPE, findAllNeedSaga)\r\n}\r\n\r\nexport function* watchSaveNeed() {\r\n    yield takeLatest(SAVE_NEEDTYPE, saveNeedSaga)\r\n}","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["905","906","907","908","909","910","911","912","913"],"import {InputGroupText, InputGroup, FormGroup, Form, Input, Label, Button, Col} from \"reactstrap\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {saveTransactionAction} from \"../../../actions/transactionAction\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {findCustomerByIdAction} from \"../../../actions/customerAction\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport NumberFormat from 'react-number-format';\r\nimport {findAllNeedAction} from \"../../../actions/needAction\";\r\nimport {findAllNeedReducer} from \"../../../configs/reducers/needReducer\";\r\nimport ReasonRow from \"../../reasonUse/ReasonRow\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../../Error\";\r\n\r\nconst TransactionForm = ({savedTransaction, isLoading, error, saveTransactionAction, customer, findCustomerByIdAction, needs, findAllNeedAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({\r\n        customer: \"\"\r\n    })\r\n    const [currency, setCurrency] = useState({})\r\n\r\n    const history = useHistory()\r\n\r\n    const onReload = () => {\r\n        findAllNeedAction();\r\n    }\r\n\r\n    useEffect(onReload, [findAllNeedAction])\r\n\r\n    // const handleCustomer = () => {\r\n    //     setData({\r\n    //         ...data,\r\n    //         customer: customer.id\r\n    //     })\r\n    // }\r\n    //\r\n    // const handleNeed = (e) => {\r\n    //     setData({...data, needType: e.id})\r\n    // }\r\n\r\n    useEffect(() => {\r\n        findAllNeedAction()\r\n    }, [findAllNeedAction])\r\n\r\n    useEffect(() => {\r\n        if (id !== data.customer) {\r\n            findCustomerByIdAction(id);\r\n            setData({\r\n                ...data,\r\n                customer: id\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // console.log(`CUSTOMER `, customer, `DATA `, data)\r\n        console.log(data)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (savedTransaction) {\r\n\r\n            if (localStorage.getItem(\"roles\") == \"MASTER\") {\r\n                swal(\"Success!\", \"Add transaction success!\", \"success\");\r\n                history.push('/transaction')\r\n            } else if (localStorage.getItem(\"roles\") == \"STAFF\") {\r\n                swal(\"Success!\", \"Add transaction success!\", \"success\");\r\n                history.push('/approval/staff')\r\n            } else {\r\n                swal(\"*Sorry you are not allowed to sign here\")\r\n            }\r\n\r\n            // history.push('/transaction')\r\n        }\r\n    }, [savedTransaction, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleCurrency = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        if(parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(data?.transaction?.customer?.employeeType !== \"NON EMPLOYEE\" ) {\r\n\r\n        }\r\n        saveTransactionAction(data)\r\n        // console.log(data)\r\n    }\r\n    if (redirect === true) {\r\n        return <Redirect to='/transaction'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                <>\r\n            <Container error={error}/>\r\n            <Header/>\r\n            <Menu/>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0 text-dark\">Form Transaction</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body table-responsive p-0\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form form-container\">\r\n                                                {!isLoading ? needs &&\r\n                                                    <Form onSubmit={handleSubmit}>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"income\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Income\r\n                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n                                                                    {/*<Input >*/}\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"income\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.income || ''}\r\n                                                                        placeholder=\"input nominal\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    {/*</Input>*/}\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"outcome\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Outcome\r\n                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"outcome\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.outcome || ''}\r\n                                                                        placeholder=\"input nominal\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"loan\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Loan Amount\r\n                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"loan\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.loan || ''}\r\n                                                                        placeholder=\"input nominal\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label htmlFor=\"tenor\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Tenor\r\n                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                                <p style={{fontSize:\"0.7vw\", color:\"grey\"}}>(max. 6 month)</p>\r\n                                                            </Label>\r\n                                                            <Col sm={10}>\r\n                                                                <Input required\r\n                                                                       onChange={handleChange}\r\n                                                                       type=\"number\" min=\"1\" max=\"6\"\r\n                                                                       value={data?.tenor || ''}\r\n                                                                       name=\"tenor\"\r\n                                                                       placeholder=\"tenor\"/>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"interestRate\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Interest Rate\r\n                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        name=\"interestRate\"\r\n                                                                        value={data?.interestRate || ''}\r\n                                                                        placeholder=\"interest rate\" min={0} max={100}\r\n                                                                        type=\"number\" min=\"0\" step=\"1\"/>\r\n                                                                    <InputGroupText>%</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"select\" sm={2} style={{textAlign: \"left\"}}>Loan Purpose\r\n                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                            </Label>\r\n                                                            <Col sm={10} >\r\n                                                                    <select onChange={e => setData({...data, needType: e.target.value})}>\r\n                                                                        <option selected disabled hidden>Choose here</option>\r\n                                                                        {needs?.list?.map((e, i) => (\r\n                                                                        <option key={i} value={e.id} data={e} selected={e.id == data?.id || false}>{e.type}</option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"notes\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Note\r\n                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                                <p style={{fontSize:\"0.7vw\", color:\"grey\"}}>(max. 250 character     )</p>\r\n                                                            </Label>\r\n                                                            <Col sm={10}>\r\n                                                                <Input\r\n                                                                    required\r\n                                                                    onChange={handleChange}\r\n                                                                    value={data?.notes || ''}\r\n                                                                    type=\"textarea\"\r\n                                                                    name=\"notes\"\r\n                                                                    id=\"notes\"\r\n                                                                    maxLength={250}\r\n                                                                    placeholder=\"input note\"/>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup check row>\r\n                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                    Submit\r\n                                                                </Button> {' '}\r\n                                                                <Button href=\"/customer/staff\"\r\n                                                                        style={{background: \"#e42256\"}}>\r\n                                                                    <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                                                    Cancel\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                    </Form> :\r\n                                                    <div>Loading...</div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        :\r\n        <div>\r\n            <Error/>\r\n        </div>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.findCustomerByIdReducer.data,\r\n        savedTransaction: state.saveTransactionReducer.data,\r\n        isLoading: state.saveTransactionReducer.isLoading,\r\n        error: state.saveTransactionReducer.error,\r\n        needs: state.findAllNeedReducer.data\r\n    }\r\n    console.log(\"mapStateToProps\", findAllNeedReducer.data)\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveTransactionAction, findAllNeedAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionList.js",["914","915","916","917","918","919"],"import {Button, Container, Table} from \"reactstrap\";\r\nimport Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllTransactionAction} from \"../../../actions/transactionAction\";\r\nimport TransactionRow from \"./TransactionRow\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport SignIn from \"../../login/SignIn\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\n\r\nfunction TransactionList({\r\n                             isLoading,\r\n                             transactions,\r\n                             error,\r\n                             findAllTransactionAction\r\n                         }) {\r\n\r\n    const onReload = () => {\r\n        findAllTransactionAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllTransactionAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" || localStorage.getItem(\"roles\") == \"SUPERVISOR\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">List Transaction</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <TableScrollbar rows={10}>\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\r\n                                                            <tr>\r\n                                                                <th>No</th>\r\n                                                                <th>Name</th>\r\n                                                                <th>Employee Type</th>\r\n                                                                <th>Loan</th>\r\n                                                                <th>Tenor</th>\r\n                                                                <th>Interest Rate</th>\r\n                                                                <th>Action</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n                                                            {\r\n                                                                !isLoading ?\r\n                                                                    transactions?.list?.map((e, i) => {\r\n                                                                        return (\r\n                                                                            <TransactionRow key={i} data={e}\r\n                                                                                            number={(transactions.page * transactions.size) + 1 + i}/>\r\n                                                                        )\r\n                                                                    }) :\r\n                                                                    <tr>\r\n                                                                        <td colSpan=\"3\"> Loading..</td>\r\n                                                                    </tr>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n\r\n                        </Containers>\r\n                    </>\r\n                    :\r\n                    <p>\r\n                       cannot access\r\n                    </p>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.finAllTransactionReducer.error,\r\n        transactions: state.finAllTransactionReducer.data || [],\r\n        isLoading: state.finAllTransactionReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllTransactionAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionList);","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\customerForm\\CustomerForm.js",["920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {findCustomerByIdAction, saveCustomerAction} from \"../../../actions/customerAction\"\r\nimport { Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport { Button, Form, FormGroup, Input, Label, Col} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport SignIn from \"../../login/SignIn\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../../Error\";\r\n\r\nconst CustomerForm = ({error, isLoading, saveCustomer, saveCustomerAction, customer, findCustomerByIdAction}) => {\r\n    const {id} = useParams()\r\n    const [roles, setRoles] = useState(localStorage.getItem(\"roles\"))\r\n    const [redirect] = useState(false)\r\n    const [photo, setPhoto] = useState({\r\n        profilePhoto: {},\r\n        idPhoto: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        idNumber: 0,\r\n        address: \"\",\r\n        employeeType: \"\",\r\n        contractLength: \"\",\r\n        contractStart: \"\",\r\n        idPhoto: \"\",\r\n        profilePhoto: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id !== data.id) {\r\n            findCustomerByIdAction(id);\r\n            setData(customer)\r\n            console.log(\"ini useffect\", customer)\r\n        }\r\n    }, [customer])\r\n\r\n\r\n    useEffect(() => {\r\n        if (saveCustomer) {\r\n\r\n            if (localStorage.getItem(\"roles\") == \"MASTER\") {\r\n                history.push('/customer')\r\n            } else if (localStorage.getItem(\"roles\") == \"STAFF\") {\r\n                history.push('/customer/staff')\r\n            } else if (localStorage.getItem(\"roles\") == \"SUPERVISOR\") {\r\n                history.push('/customer')\r\n            } else {\r\n                swal(\"*Sorry you are not allowed to sign here\")\r\n            }\r\n        }\r\n    }, [saveCustomer, history])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto({...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name]: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const uploadIdPhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.idPhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    idPhoto: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    const uploadProfilePhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.profilePhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    profilePhoto: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleNumber = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        if(name = \"idNumber\") {\r\n\r\n            if(value.length <= 16)\r\n                setData({...data, [name]: value})\r\n\r\n        } else {\r\n            setData({...data, [name]: value})\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleEmployee = (e) => {\r\n        setData({...data, employeeType: e})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(data?.idNumber.length == 16  ) {\r\n            saveCustomerAction(data)\r\n            swal(\"Save Success!\", \"\", \"success\");\r\n\r\n        } else {\r\n\r\n            swal(\"Sorry Id Number must be 16 digit!\", \"\", \"warning\");\r\n        }\r\n        console.log(\"INI DATA\",data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/customer\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" || localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                    <>\r\n                        <div>\r\n                            <Container error={error}/>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Form Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                {!isLoading ?\r\n                                                                    <Form onSubmit={handleSubmit}>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"name\" sm={3} style={{textAlign:\"left\"}}>Customer's\r\n                                                                                Name\r\n                                                                            <span style={{color:\"red\"}}> *</span>\r\n                                                                            </Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.name || ''}\r\n                                                                                    type=\"text\"\r\n                                                                                    name=\"name\"\r\n                                                                                    placeholder=\"input name\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"email\" sm={3} style={{textAlign:\"left\"}}>Email\r\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.email || ''}\r\n                                                                                    type=\"email\"\r\n                                                                                    name=\"email\"\r\n                                                                                    placeholder=\"input email\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"idNumber\" sm={3} style={{textAlign:\"left\"}}>ID\r\n                                                                                Number\r\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleNumber}\r\n                                                                                    value={data?.idNumber || ''}\r\n                                                                                    type=\"number\"\r\n                                                                                    name=\"idNumber\"\r\n                                                                                    minLength={16}\r\n                                                                                    placeholder=\"input ID number\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"exampleText\"\r\n                                                                                   sm={3} style={{textAlign:\"left\"}}>Address\r\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.address || ''}\r\n                                                                                    type=\"textarea\"\r\n                                                                                    name=\"address\"\r\n                                                                                    placeholder=\"address\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"select\" sm={3} style={{textAlign:\"left\"}}>Type of\r\n                                                                                customer\r\n                                                                                <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <DropdownList\r\n                                                                                    data={[\r\n                                                                                        {value: \"NON\", label: \"NON EMPLOYEE\"},\r\n                                                                                        {\r\n                                                                                            value: \"REGULAR\",\r\n                                                                                            label: \"EMPLOYEE\"\r\n                                                                                        },\r\n                                                                                        {\r\n                                                                                            value: \"CONTRACT\",\r\n                                                                                            label: \"CONTRACT\"\r\n                                                                                        }\r\n                                                                                    ]}\r\n                                                                                    value={data?.employeeType}\r\n                                                                                    placeholder=\"Select Employee Type\"\r\n                                                                                    handleDropdown={handleEmployee}\r\n                                                                                />\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                        {data.employeeType == \"CONTRACT\"\r\n                                                                        &&\r\n\r\n                                                                        <div>\r\n                                                                            <FormGroup row>\r\n                                                                                <Label for=\"contractStart\" sm={3} style={{textAlign:\"left\"}}>Contract\r\n                                                                                    Start\r\n                                                                                    <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                                <Col sm={9}>\r\n                                                                                    <Input\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.contractStart || ''}\r\n                                                                                        type=\"date\"\r\n                                                                                        name=\"contractStart\"\r\n                                                                                        id=\"contractStart\"\r\n                                                                                        placeholder=\"contract start\"/>\r\n                                                                                </Col>\r\n                                                                            </FormGroup>\r\n                                                                            <FormGroup row>\r\n                                                                                <Label for=\"contractLength\" sm={3} style={{textAlign:\"left\"}}>Contract\r\n                                                                                    Length\r\n                                                                                    <span style={{color:\"red\"}}> *</span></Label>\r\n                                                                                <Col sm={9}>\r\n                                                                                    <Input\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.contractLength || ''}\r\n                                                                                        type=\"number\" min=\"1\"\r\n                                                                                        name=\"contractLength\"\r\n                                                                                        id=\"contractLength\"\r\n                                                                                        placeholder=\"contract length\"/>\r\n                                                                                </Col>\r\n                                                                            </FormGroup>\r\n                                                                        </div>\r\n                                                                        }\r\n\r\n                                                                        <FormGroup row>\r\n                                                                            <Label for=\"idPhoto\" sm={3} style={{textAlign:\"left\"}}>ID Card\r\n                                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                                                <p style={{fontSize:\"0.7vw\", color:\"grey\"}}>image (.jpeg / .png)</p></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    type=\"file\"\r\n                                                                                    name=\"idPhoto\"\r\n                                                                                    onChange={handlePhoto}\r\n                                                                                    accept=\"image/jpeg, image/png\">\r\n                                                                                </Input>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label for=\"profilePhoto\" sm={3} style={{textAlign:\"left\"}}>Profile\r\n                                                                                Photo\r\n                                                                                <span style={{color:\"red\"}}> *</span>\r\n                                                                                <p style={{fontSize:\"0.7vw\", color:\"grey\"}}>image (.jpeg / .png)</p></Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    type=\"file\"\r\n                                                                                    name=\"profilePhoto\"\r\n                                                                                    onChange={handlePhoto}\r\n                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                        <FormGroup check row>\r\n                                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                                    Submit\r\n                                                                                </Button> {' '}\r\n                                                                                <Button href=\"/customer/staff\"\r\n                                                                                        style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon\r\n                                                                                        icon={faArrowLeft}/>\r\n                                                                                    Cancel\r\n                                                                                </Button>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                    </Form> :\r\n                                                                    <div>Loading...</div>\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    // </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // call reducer\r\n        error: state.findCustomerByIdReducer.error || state.saveCustomerReducer.error,\r\n        customer: state.findCustomerByIdReducer.data,\r\n        isLoading: state.findCustomerByIdReducer.isLoading,\r\n        update: state.updateCustomerReducer,\r\n        saveCustomer: state.saveCustomerReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveCustomerAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerForm)\r\n","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\ListCustomer.js",["938","939"],"import React, {useEffect} from 'react'\r\nimport {findAllCustomerAction} from '../../../actions/customerAction'\r\nimport {connect} from \"react-redux\"\r\nimport Containers from \"../../../components/Containers/Container\";\r\nimport SignIn from \"../../login/SignIn\";\r\nimport RowCustomer from \"./RowCustomer\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Error from \"../../Error\";\r\nimport Footer from \"../../../components/dashboard/Footer\";\r\n\r\nfunction CustomerList({\r\n                          error,\r\n                          isLoading,\r\n                          customers,\r\n                          findAllCustomerAction\r\n                      }) {\r\n\r\n    const onReload = () => {\r\n        findAllCustomerAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllCustomerAction])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">List Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\r\n                                                            {/*</a>*/}\r\n                                                            <a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-plus-circle\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n\r\n                                                        <TableScrollbar rows={10}>\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\r\n                                                            <tr>\r\n                                                                <th>Number</th>\r\n                                                                {/*<th>Submitter</th>*/}\r\n                                                                <th>Customer Name</th>\r\n                                                                <th>ID Card</th>\r\n                                                                <th>Employee Type</th>\r\n                                                                <th>Submitter</th>\r\n                                                                <th>Action</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n                                                            {\r\n                                                                !isLoading ?\r\n                                                                    customers?.list?.map((e, i) => {\r\n\r\n                                                                        return (\r\n                                                                            <RowCustomer key={i} data={e}\r\n                                                                                         number={(customers.page * customers.size) + 1 + i}/>\r\n                                                                        )\r\n                                                                    })\r\n                                                                    :\r\n                                                                    <tr>\r\n                                                                        <td colSpan=\"3\"> Loading..</td>\r\n                                                                    </tr>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n                        </Containers>\r\n                     </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllCustomerReducer.error,\r\n        customers: state.findAllCustomerReducer.data || [],\r\n        isLoading: state.findAllCustomerReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllCustomerAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)\r\n","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\dashboard\\Home.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\components\\Containers\\index.js",[],["940","941"],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\configs\\api.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\RowCustomer.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\transaction\\listTransactionByStaff\\Row.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\reportByStaff\\ListReportByStaff.js",["942","943","944"],"import Containers from '../../../components/Containers/Container'\r\nimport React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport TableScrollbar from 'react-table-scrollbar';\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport Row from \"./Row\";\r\nimport Footer from \"../../../components/dashboard/Footer\";\r\nimport {findAllReportAction} from \"../../../actions/reportAction\";\r\nimport Error from \"../../Error\";\r\n\r\nfunction ReportList({\r\n                        isLoading, reports, error, findAllReportAction\r\n                    }) {\r\n\r\n    const onReload = () => {\r\n        findAllReportAction();\r\n        console.log(\"ini data\", reports)\r\n    }\r\n\r\n    useEffect(onReload, [findAllReportAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                    <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Report</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"#\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-download\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <TableScrollbar rows={10}>\r\n                                                            <table className=\"table table-bordered table-valign-middle table-head-fixed\">\r\n                                                                <thead style={{background:\"#FCE051\"}}>\r\n                                                                <tr >\r\n                                                                    <th colSpan=\"5\"> Customer Data</th>\r\n                                                                    <th colSpan=\"11\">Transaction</th>\r\n                                                                    <th colSpan=\"5\">Approved</th>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <th>No</th>\r\n                                                                    <th>Name</th>\r\n                                                                    <th>Email</th>\r\n                                                                    <th>Id Card</th>\r\n                                                                    <th>Address</th>\r\n                                                                    <th>Employee Type</th>\r\n                                                                    <th>Income</th>\r\n                                                                    <th>Outcome</th>\r\n                                                                    <th>Loan Amount</th>\r\n                                                                    <th>Interest Rate</th>\r\n                                                                    <th>Tenor</th>\r\n                                                                    <th>Principle</th>\r\n                                                                    <th>Interest</th>\r\n                                                                    <th>Installment</th>\r\n                                                                    <th>Installment Total</th>\r\n                                                                    <th>Approval</th>\r\n                                                                    <th>Submitted Date</th>\r\n                                                                    <th>Approved Date</th>\r\n                                                                </tr>\r\n                                                                </thead>\r\n\r\n                                                                <tbody>\r\n                                                                {\r\n                                                                    ! isLoading ?\r\n                                                                        reports?.list?.map((e,i) => {\r\n                                                                            return (\r\n                                                                                <Row key={i} data={e}\r\n                                                                                           number={(reports.page * reports.size) + 1 + i}/>\r\n                                                                            )\r\n                                                                        }) :\r\n                                                                        <tr>\r\n                                                                            <td> Loading ...</td>\r\n                                                                        </tr>\r\n\r\n                                                                }\r\n                                                                </tbody>\r\n\r\n                                                            </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Footer/>\r\n                        </Containers>\r\n\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        reports: state.findAllReportByStaff.data || [],\r\n        error: state.findAllReportByStaff.error,\r\n        isLoading: state.findAllReportByStaff.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllReportAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReportList);","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\report\\reportByStaff\\Row.js",[],"D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\SignIn.js",["945"],"import React, {useEffect, useState} from \"react\";\r\nimport {faKey, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Button} from \"reactstrap\";\r\nimport undraw_Access_account_re_8spm from \"../../assets/images/undraw_Access_account_re_8spm.svg\"\r\nimport \"./login.css\"\r\nimport {useHistory} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginRequestAction} from \"../../actions/loginAction\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst SignIn = ({loginData, isLoading, error, dispatchLoginAction}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const [validation, setValidation] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                username: username,\r\n                password: password\r\n            }\r\n            dispatchLoginAction(data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // jika login sukses\r\n        if (loginData) {\r\n            localStorage.setItem('token', loginData.token)\r\n            localStorage.setItem('roles', loginData.roles)\r\n            localStorage.setItem('username', loginData.username)\r\n            console.log(\"sukses login\", loginData)\r\n\r\n            //pilih role\r\n            if (loginData.roles === \"MASTER\") {\r\n                history.push('/dashboard')\r\n            } else if (loginData.roles === \"STAFF\") {\r\n                history.push('/dashboard')\r\n            } else if (loginData.roles === \"SUPERVISOR\") {\r\n                history.push('/dashboard')\r\n            } else {\r\n                setValidation(\"*Sorry you are not allowed to sign here\")\r\n            }\r\n\r\n            swal(\"Login Success!\", \"\", \"success\");\r\n            // history.push('/master/home')\r\n        }\r\n        // jika login error\r\n        if (error) {\r\n            setValidation(\"*Username or Password invalid!\")\r\n            swal(\"Login Error!\", \"\", \"error\")\r\n        }\r\n\r\n    }, [loginData, error])\r\n\r\n    useEffect(() => {\r\n        setValidation(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n    }, [username, password])\r\n\r\n    const validate = () => {\r\n        //var kosong, agar bisa di update isinya\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (usernameError || passwordError) {\r\n            setUsernameError(usernameError);\r\n            setPasswordError(passwordError);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <div>\r\n                        <img src={undraw_Access_account_re_8spm} alt=\"\"\r\n                             className=\"img-fluid d-none d-md-block\"/>\r\n                        <br/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>OK 200</h1><br/>\r\n                    <h5 style={{color: \"#e42256\", fontSize: \"35px\"}}>Credit Partner</h5><br/>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"username\"\r\n                                       type=\"text\"\r\n                                       name=\"username\"\r\n                                       placeholder=\"Username\"\r\n                                       onChange={(e) => handleUsernameChange(e)}\r\n                                       value={username}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>\r\n                                {usernameError}\r\n                            </div>\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       onChange={(e) => handlePasswordChange(e)}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>{passwordError}</div>\r\n\r\n                            <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                <div style={{fontSize: 12, color: \"red\"}}>{validation}</div>\r\n                                <Button\r\n                                    style={{background: \"#e42256\"}}\r\n                                    type=\"submit\"\r\n                                    block>\r\n                                        <span className=\"font-weight-bold\"\r\n                                              style={{color: \"#ffff\"}}>SIGN IN</span>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginData: state.loginReducer.data,\r\n        isLoading: state.loginReducer.isLoading,\r\n        error: state.loginReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchLoginAction: loginRequestAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\AccountList.js",["946","947","948","949","950","951"],"import React, {useEffect, useState} from \"react\";\r\nimport AccountRow from \"./AccountRow\";\r\nimport {findAccountByIdAction, findAllAccountAction, removeByIdAccountAction} from \"../../actions/signupAction\";\r\nimport {connect} from \"react-redux\";\r\nimport Containers from '../../components/Containers/Container'\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../Error\";\r\nimport {useParams} from 'react-router-dom';\r\n\r\n\r\nfunction AccountList({\r\n                         error,\r\n                         isLoading,\r\n                         accounts,\r\n                         findAllAccountAction,\r\n                         dispatchRemoveById,\r\n                         isRemoved\r\n                     }) {\r\n\r\n\r\n\r\n    const onReload = () => {\r\n        findAllAccountAction();\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        swal({\r\n            title: \"Are you sure to delete this data?\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then(willDelete => {\r\n                if (willDelete) {\r\n                    dispatchRemoveById(id);\r\n                    swal(\"Successful deleted\", {\r\n                        icon: \"success\"\r\n                    });\r\n                } else {\r\n                    swal(\"Failed to delete\")\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(onReload, [findAllAccountAction])\r\n\r\n    useEffect(() => {\r\n        onReload()\r\n    }, [findAllAccountAction])\r\n\r\n    useEffect(() => {\r\n        if(isRemoved) {\r\n            onReload()\r\n        }\r\n    }, [isRemoved])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n            <Containers error={error} >\r\n            <Header/>\r\n            <Menu/>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0 text-dark\">List Account</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header border-0\">\r\n                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                        <div className=\"card-tools\">\r\n                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                            {/*    <i className=\"fas fa-download\"/>*/}\r\n                                            {/*</a>*/}\r\n                                            <a href=\"/register\" className=\"btn btn-tool btn-sm\">\r\n                                                <i className=\"fas fa-user-plus\"/>\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body table-responsive p-0\">\r\n                                        <table className=\"table table-striped table-valign-middle\">\r\n\r\n                                        <thead style={{textAlign:\"left\"}}>\r\n                    <tr>\r\n                        <th>Number</th>\r\n                        <th>Username</th>\r\n                        <th>Full Name</th>\r\n                        <th>Email</th>\r\n                        <th>Verification</th>\r\n                        <th>Role</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody style={{textAlign:\"left\"}}>\r\n                    {\r\n                        !isLoading ?\r\n                            accounts?.list?.map((e,i) => {\r\n\r\n                                return(\r\n                                    <AccountRow onDeleted={() => onDelete(e.id)} key={i} data={e} number={(accounts.page * accounts.size) + 1 + i}/>\r\n                                )\r\n                            }) :\r\n                            <tr>\r\n                                <td colSpan=\"3\"> Loading..</td>\r\n                            </tr>\r\n                    }\r\n                    </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n            </Containers>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        accounts: state.findAllAccountReducer.data,\r\n        isLoading: state.findAllAccountReducer.isLoading,\r\n        error: state.findAllAccountReducer.error || state.removeAccountByIdReducer.error,\r\n        isRemoved: state.removeAccountByIdReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllAccountAction,\r\n    dispatchRemoveById: removeByIdAccountAction\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountList)\r\n","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\SignUp.js",["952","953","954","955","956","957","958","959","960","961","962"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope,\r\n    faKey, faServer,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./login.css\"\r\nimport {Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\r\nimport {findAccountByIdAction, saveAccountAction} from \"../../actions/signupAction\";\r\nimport {connect} from \"react-redux\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../Error\";\r\n\r\nconst SignUp = ({saveDispatch, error, saveAccount, account, isLoading}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [photo, setPhoto] = useState({\r\n        profilePicture: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        // username: \"\",\r\n        // fullName: \"\",\r\n        // email: \"\",\r\n        // role: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id && parseInt(id) !== data.id) {\r\n            findAccountByIdAction(id);\r\n            setData(account)\r\n        }\r\n        console.log(\"useEffect\", data)\r\n        console.log(\"useEffect data\", data.id)\r\n    }, [account])\r\n\r\n    useEffect(() => {\r\n        if (saveAccount) {\r\n            swal(\"Register Success\", \"\", \"success\")\r\n            history.push('/master')\r\n        }\r\n        if (error) {\r\n            swal(\"Register error\", `${error.message}`, \"error\")\r\n        }\r\n    }, [saveAccount, history, error])\r\n\r\n    // const handlePhoto = async (e) => {\r\n    //     let name = e.target.name\r\n    //     let value = e.target.files[0]\r\n    //     setPhoto({...photo, [name]: value})\r\n    //\r\n    //     const formData = new FormData()\r\n    //     formData.append(\"file\", value)\r\n    //     formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n    //\r\n    //     const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n    //         method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    //         body: formData // body data type must match \"Content-Type\" header\r\n    //     }).then(res => res.json())\r\n    //         .then(res => {\r\n    //             console.log(res.url)\r\n    //             setData({\r\n    //                 ...data,\r\n    //                 [name]: res.url\r\n    //             })\r\n    //         })\r\n    // }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleRoles = (e) => {\r\n        setData({\r\n            ...data,\r\n            role: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n        saveDispatch(data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/users\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/master\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_Updated_resume_re_q1or} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Create Account</h1>\r\n\r\n                                                                        {!isLoading ?\r\n                                                                            <Form onSubmit={handleSubmit}>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUserCircle}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.fullName || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"fullName\"\r\n                                                                                            placeholder=\"Full Name\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.username || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"username\"\r\n                                                                                            placeholder=\"Username\"\r\n                                                                                            minLength={4}\r\n                                                                                            maxLength={10}\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.email || \"\"}\r\n                                                                                            type=\"email\"\r\n                                                                                            name=\"email\"\r\n                                                                                            placeholder=\"Email Address\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n                                        {/*                                            <div*/}\r\n                                        {/*                                                className=\"input-group col-lg-12 mb-4\">*/}\r\n                                        {/*                                                <div*/}\r\n                                        {/*                                                    className=\"input-group-prepend\">*/}\r\n                                        {/*<span className=\"input-group-text bg-white px-4 border-md border-right-0\">*/}\r\n                                        {/*    <FontAwesomeIcon icon={faKey}/>*/}\r\n                                        {/*</span>*/}\r\n                                        {/*                                                </div>*/}\r\n                                        {/*                                                <input*/}\r\n                                        {/*                                                    required*/}\r\n                                        {/*                                                    onChange={handleChange}*/}\r\n                                        {/*                                                    value={data?.password}*/}\r\n                                        {/*                                                    type=\"password\"*/}\r\n                                        {/*                                                    name=\"password\"*/}\r\n                                        {/*                                                    placeholder=\"Password\"*/}\r\n                                        {/*                                                    minLength={4}*/}\r\n                                        {/*                                                    maxLength={10}*/}\r\n                                        {/*                                                    className=\"form-control bg-white border-left-0 border-md\"/><br/>*/}\r\n                                        {/*                                            </div>*/}\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n\r\n                                                                                        <DropdownList\r\n                                                                                            data={[\r\n                                                                                                {\r\n                                                                                                    value: \"STAFF\",\r\n                                                                                                    label: \"STAFF\"\r\n                                                                                                },\r\n                                                                                                {\r\n                                                                                                    value: \"SUPERVISOR\",\r\n                                                                                                    label: \"SUPERVISOR\"\r\n                                                                                                }\r\n                                                                                            ]}\r\n                                                                                            value={data?.role}\r\n                                                                                            placeholder=\"Select Role\"\r\n                                                                                            handleDropdown={handleRoles}\r\n                                                                                        />\r\n                                                                                    </div>\r\n\r\n                                                                                    {/*<div*/}\r\n                                                                                    {/*    className=\"input-group col-lg-12 mb-4\">*/}\r\n                                                                                    {/*    <FormGroup>*/}\r\n                                                                                    {/*        <Label for=\"profilePicture\"*/}\r\n                                                                                    {/*               sm={4}>Profile*/}\r\n                                                                                    {/*            Photo</Label>*/}\r\n                                                                                    {/*        <Col sm={12}>*/}\r\n                                                                                    {/*            <Input*/}\r\n                                                                                    {/*                type=\"file\"*/}\r\n                                                                                    {/*                name=\"profilePicture\"*/}\r\n                                                                                    {/*                onChange={handlePhoto}*/}\r\n                                                                                    {/*                accept=\"image/jpeg, image/png\"/>*/}\r\n                                                                                    {/*        </Col>*/}\r\n                                                                                    {/*    </FormGroup>*/}\r\n                                                                                    {/*</div>*/}\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n                                                                            :\r\n                                                                            <div>Loading...</div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        account: state.findAccountByIdReducer.data,\r\n        saveAccount: state.saveAccountReducer.data,\r\n        error: state.findAccountByIdReducer.error,\r\n        isLoading: state.findAccountByIdReducer.isLoading,\r\n        update: state.updateAccountReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDispatch: saveAccountAction, findAccountByIdAction\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    mapDispatchToProps)(SignUp);","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\EditAccount.js",["963","964","965","966"],"import Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport undraw_profile from \"../../assets/images/undraw_profile.svg\";\r\nimport {Button, Form, Input} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEnvelope, faUser, faUserCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport Error from \"../Error\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {findAccountByIdAction, saveAccountAction} from \"../../actions/signupAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst EditAccount = ({\r\n                         account,\r\n                         saveAccount,\r\n                         error,\r\n                         isLoading,\r\n                         update,\r\n                         saveDispatch,\r\n                         findAccountByIdAction\r\n                     }) => {\r\n\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({\r\n        username: \"\",\r\n        fullName: \"\",\r\n        email: \"\",\r\n        role: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect( () => {\r\n        if(id !== data?.id) {\r\n            findAccountByIdAction(id);\r\n            setData(account)\r\n        }\r\n        console.log(\"use effect\", account)\r\n    }, [account])\r\n\r\n    useEffect(() => {\r\n        if (saveAccount) {\r\n            swal(\"Register Success\", \"\", \"success\")\r\n            history.push('/master')\r\n        }\r\n        if (error) {\r\n            swal(\"Register error\", `${error.message}`, \"error\")\r\n        }\r\n    }, [saveAccount, history, error])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        saveAccountAction(data)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/master\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/master\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_profile} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Edit Account</h1>\r\n\r\n\r\n                                                                        <Form onSubmit={handleSubmit}>\r\n                                                                            <div className=\"row\">\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUserCircle}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.fullName || ''}\r\n                                                                                        type=\"text\"\r\n                                                                                        name=\"fullName\"\r\n                                                                                        placeholder=\"Full Name\"\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                </div>\r\n\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.username || ''}\r\n                                                                                        type=\"text\"\r\n                                                                                        name=\"username\"\r\n                                                                                        placeholder=\"Username\"\r\n                                                                                        minLength={4}\r\n                                                                                        maxLength={10}\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                                        </span>\r\n                                                                                    </div>\r\n                                                                                    <input\r\n                                                                                        required\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.email || ''}\r\n                                                                                        type=\"email\"\r\n                                                                                        name=\"email\"\r\n                                                                                        placeholder=\"Email Address\"\r\n                                                                                        className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"input-group col-lg-12 mb-4\"\r\n                                                                                    style={{width: \"120vh !important\"}}>\r\n\r\n                                                                                    <DropdownList\r\n                                                                                        style={{height: \"200vh\"}}\r\n                                                                                        data={[\r\n                                                                                            {\r\n                                                                                                value: \"STAFF\",\r\n                                                                                                label: \"STAFF\"\r\n                                                                                            },\r\n                                                                                            {\r\n                                                                                                value: \"SUPERVISOR\",\r\n                                                                                                label: \"SUPERVISOR\"\r\n                                                                                            }\r\n                                                                                        ]}\r\n                                                                                        placeholder=\"Select Role\"\r\n\r\n                                                                                    />\r\n                                                                                </div>\r\n\r\n                                                                                <div\r\n                                                                                    className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                    <Button\r\n                                                                                        style={{background: \"#e42256\"}}\r\n                                                                                        block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>UPDATE</span>\r\n                                                                                    </Button>\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n                                                                        </Form>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        account: state.findAccountByIdReducer.data,\r\n        saveAccount: state.saveAccountReducer.data,\r\n        error: state.saveAccountReducer.error,\r\n        isLoading: state.findAccountByIdReducer.isLoading,\r\n        update: state.updateAccountReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDispatch: saveAccountAction, findAccountByIdAction\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAccount)","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\account\\AccountRow.js",["967","968","969","970","971"],"import React from \"react\";\r\nimport {Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPencilAlt, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst AccountRow = ({data, number, onUpdate, onDeleted}) => {\r\n    return (\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.username}</td>\r\n            <td>{data.fullName}</td>\r\n            <td>{data.email}</td>\r\n            <td>\r\n                {data.isVerified ?\r\n                    \"Verified\" : \"Not Verified\"\r\n                }\r\n            </td>\r\n            <td>{data.role}</td>\r\n            <td>\r\n                <a onClick={onUpdate} href={`/master/${data.id}`} className=\"text-muted\">\r\n                    <i className=\"fas fa-pencil-alt\" />\r\n                </a>{' '}\r\n                <a onClick={onDeleted} className=\"text-muted\">\r\n                    <i className=\"fas fa-trash-alt\" />\r\n                </a>{' '}\r\n\r\n                    {/*<Button onClick={onUpdate} href={`/users/${data.id}`} style={{background:\"#e42256\"}}>*/}\r\n                    {/*    <FontAwesomeIcon icon={faPencilAlt}/>*/}\r\n                    {/*</Button>{' '}*/}\r\n                {/*<Button onClick={onDeleted} style={{background:\"#e42256\"}}>*/}\r\n                {/*    <FontAwesomeIcon icon={faTrash}/>*/}\r\n                {/*</Button>*/}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default AccountRow;","D:\\PROJECT GIT HUB\\ok-200-credit\\project-credit-scoring\\src\\pages\\profile\\EditPassword.js",["972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport gambar from \"../../assets/images/undraw_authentication_fsn5.svg\"\r\nimport {\r\n    faEnvelope,\r\n    faKey, faLock, faLockOpen, faServer,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"../account/login.css\"\r\nimport {Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\nimport Error from \"../Error\";\r\n\r\nconst EditPassword = ({isLoading}) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/dashboard\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={gambar} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Change Password</h1>\r\n                                                                        {!isLoading ?\r\n                                                                            <Form>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faLock}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"password\"\r\n                                                                                            name=\"password\"\r\n                                                                                            placeholder=\"password\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"password\"\r\n                                                                                            name=\"newPassword\"\r\n                                                                                            placeholder=\"new password\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faLockOpen}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            type=\"password\"\r\n                                                                                            name=\"confirmPassword\"\r\n                                                                                            placeholder=\"confirm password\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>CHANGE PASSWORD</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n                                                                            :\r\n                                                                            <div>Loading...</div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <Error/>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default EditPassword;",{"ruleId":"992","replacedBy":"993"},{"ruleId":"994","replacedBy":"995"},{"ruleId":"996","severity":1,"message":"997","line":5,"column":8,"nodeType":"998","messageId":"999","endLine":5,"endColumn":18},{"ruleId":"996","severity":1,"message":"1000","line":10,"column":8,"nodeType":"998","messageId":"999","endLine":10,"endColumn":22},{"ruleId":"996","severity":1,"message":"1001","line":15,"column":8,"nodeType":"998","messageId":"999","endLine":15,"endColumn":20},{"ruleId":"1002","severity":1,"message":"1003","line":65,"column":8,"nodeType":"1004","endLine":65,"endColumn":26,"suggestions":"1005"},{"ruleId":"1002","severity":1,"message":"1006","line":49,"column":8,"nodeType":"1004","endLine":49,"endColumn":30,"suggestions":"1007"},{"ruleId":"1002","severity":1,"message":"1006","line":55,"column":8,"nodeType":"1004","endLine":55,"endColumn":19,"suggestions":"1008"},{"ruleId":"1009","severity":1,"message":"1010","line":61,"column":47,"nodeType":"1011","messageId":"1012","endLine":61,"endColumn":49},{"ruleId":"996","severity":1,"message":"1013","line":6,"column":5,"nodeType":"998","messageId":"999","endLine":6,"endColumn":10},{"ruleId":"996","severity":1,"message":"1014","line":6,"column":12,"nodeType":"998","messageId":"999","endLine":6,"endColumn":20},{"ruleId":"996","severity":1,"message":"1015","line":12,"column":42,"nodeType":"998","messageId":"999","endLine":12,"endColumn":51},{"ruleId":"996","severity":1,"message":"1016","line":24,"column":12,"nodeType":"998","messageId":"999","endLine":24,"endColumn":17},{"ruleId":"996","severity":1,"message":"1017","line":24,"column":19,"nodeType":"998","messageId":"999","endLine":24,"endColumn":27},{"ruleId":"1002","severity":1,"message":"1018","line":44,"column":8,"nodeType":"1004","endLine":44,"endColumn":15,"suggestions":"1019"},{"ruleId":"996","severity":1,"message":"1020","line":64,"column":15,"nodeType":"998","messageId":"999","endLine":64,"endColumn":23},{"ruleId":"1009","severity":1,"message":"1010","line":103,"column":47,"nodeType":"1011","messageId":"1012","endLine":103,"endColumn":49},{"ruleId":"996","severity":1,"message":"1021","line":6,"column":8,"nodeType":"998","messageId":"999","endLine":6,"endColumn":20},{"ruleId":"1009","severity":1,"message":"1010","line":18,"column":51,"nodeType":"1011","messageId":"1012","endLine":18,"endColumn":53},{"ruleId":"1022","severity":1,"message":"1023","line":35,"column":45,"nodeType":"1024","endLine":36,"endColumn":80},{"ruleId":"996","severity":1,"message":"1025","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":34},{"ruleId":"996","severity":1,"message":"1026","line":4,"column":32,"nodeType":"998","messageId":"999","endLine":4,"endColumn":40},{"ruleId":"996","severity":1,"message":"1027","line":12,"column":8,"nodeType":"998","messageId":"999","endLine":12,"endColumn":14},{"ruleId":"1002","severity":1,"message":"1028","line":61,"column":8,"nodeType":"1004","endLine":61,"endColumn":21,"suggestions":"1029"},{"ruleId":"1009","severity":1,"message":"1010","line":72,"column":47,"nodeType":"1011","messageId":"1012","endLine":72,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":72,"column":93,"nodeType":"1011","messageId":"1012","endLine":72,"endColumn":95},{"ruleId":"996","severity":1,"message":"1030","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":14},{"ruleId":"996","severity":1,"message":"1031","line":3,"column":16,"nodeType":"998","messageId":"999","endLine":3,"endColumn":27},{"ruleId":"996","severity":1,"message":"1032","line":6,"column":9,"nodeType":"998","messageId":"999","endLine":6,"endColumn":15},{"ruleId":"996","severity":1,"message":"1033","line":7,"column":9,"nodeType":"998","messageId":"999","endLine":7,"endColumn":12},{"ruleId":"996","severity":1,"message":"1034","line":8,"column":9,"nodeType":"998","messageId":"999","endLine":8,"endColumn":14},{"ruleId":"996","severity":1,"message":"1035","line":9,"column":9,"nodeType":"998","messageId":"999","endLine":9,"endColumn":18},{"ruleId":"996","severity":1,"message":"1036","line":10,"column":9,"nodeType":"998","messageId":"999","endLine":10,"endColumn":13},{"ruleId":"996","severity":1,"message":"1037","line":11,"column":9,"nodeType":"998","messageId":"999","endLine":11,"endColumn":18},{"ruleId":"996","severity":1,"message":"1038","line":12,"column":9,"nodeType":"998","messageId":"999","endLine":12,"endColumn":20},{"ruleId":"996","severity":1,"message":"1039","line":13,"column":9,"nodeType":"998","messageId":"999","endLine":13,"endColumn":14},{"ruleId":"996","severity":1,"message":"1015","line":14,"column":8,"nodeType":"998","messageId":"999","endLine":14,"endColumn":17},{"ruleId":"996","severity":1,"message":"1040","line":17,"column":8,"nodeType":"998","messageId":"999","endLine":17,"endColumn":20},{"ruleId":"996","severity":1,"message":"1041","line":19,"column":9,"nodeType":"998","messageId":"999","endLine":19,"endColumn":20},{"ruleId":"996","severity":1,"message":"1042","line":19,"column":57,"nodeType":"998","messageId":"999","endLine":19,"endColumn":63},{"ruleId":"996","severity":1,"message":"1043","line":20,"column":8,"nodeType":"998","messageId":"999","endLine":20,"endColumn":11},{"ruleId":"996","severity":1,"message":"1044","line":21,"column":8,"nodeType":"998","messageId":"999","endLine":21,"endColumn":10},{"ruleId":"996","severity":1,"message":"1045","line":26,"column":12,"nodeType":"998","messageId":"999","endLine":26,"endColumn":16},{"ruleId":"996","severity":1,"message":"1046","line":26,"column":18,"nodeType":"998","messageId":"999","endLine":26,"endColumn":25},{"ruleId":"1002","severity":1,"message":"1028","line":31,"column":8,"nodeType":"1004","endLine":31,"endColumn":32,"suggestions":"1047"},{"ruleId":"1002","severity":1,"message":"1028","line":36,"column":8,"nodeType":"1004","endLine":36,"endColumn":32,"suggestions":"1048"},{"ruleId":"1009","severity":1,"message":"1010","line":97,"column":88,"nodeType":"1011","messageId":"1012","endLine":97,"endColumn":90},{"ruleId":"1049","severity":1,"message":"1050","line":112,"column":81,"nodeType":"1024","endLine":112,"endColumn":122},{"ruleId":"1049","severity":1,"message":"1050","line":116,"column":81,"nodeType":"1024","endLine":116,"endColumn":127},{"ruleId":"996","severity":1,"message":"1051","line":7,"column":8,"nodeType":"998","messageId":"999","endLine":7,"endColumn":14},{"ruleId":"1002","severity":1,"message":"1052","line":21,"column":25,"nodeType":"1004","endLine":21,"endColumn":46,"suggestions":"1053"},{"ruleId":"1009","severity":1,"message":"1010","line":26,"column":47,"nodeType":"1011","messageId":"1012","endLine":26,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":26,"column":92,"nodeType":"1011","messageId":"1012","endLine":26,"endColumn":94},{"ruleId":"1054","severity":1,"message":"1055","line":49,"column":61,"nodeType":"1024","endLine":49,"endColumn":105},{"ruleId":"996","severity":1,"message":"1056","line":9,"column":12,"nodeType":"998","messageId":"999","endLine":9,"endColumn":14},{"ruleId":"996","severity":1,"message":"1045","line":10,"column":12,"nodeType":"998","messageId":"999","endLine":10,"endColumn":16},{"ruleId":"996","severity":1,"message":"1046","line":10,"column":18,"nodeType":"998","messageId":"999","endLine":10,"endColumn":25},{"ruleId":"1009","severity":1,"message":"1010","line":19,"column":47,"nodeType":"1011","messageId":"1012","endLine":19,"endColumn":49},{"ruleId":"1054","severity":1,"message":"1055","line":39,"column":61,"nodeType":"1024","endLine":39,"endColumn":105},{"ruleId":"996","severity":1,"message":"1057","line":1,"column":27,"nodeType":"998","messageId":"999","endLine":1,"endColumn":35},{"ruleId":"996","severity":1,"message":"1026","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":17},{"ruleId":"996","severity":1,"message":"1058","line":2,"column":19,"nodeType":"998","messageId":"999","endLine":2,"endColumn":29},{"ruleId":"996","severity":1,"message":"1059","line":2,"column":31,"nodeType":"998","messageId":"999","endLine":2,"endColumn":40},{"ruleId":"996","severity":1,"message":"1060","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":24},{"ruleId":"996","severity":1,"message":"1061","line":4,"column":9,"nodeType":"998","messageId":"999","endLine":4,"endColumn":15},{"ruleId":"996","severity":1,"message":"1015","line":5,"column":9,"nodeType":"998","messageId":"999","endLine":5,"endColumn":18},{"ruleId":"996","severity":1,"message":"1032","line":5,"column":20,"nodeType":"998","messageId":"999","endLine":5,"endColumn":26},{"ruleId":"996","severity":1,"message":"1036","line":5,"column":28,"nodeType":"998","messageId":"999","endLine":5,"endColumn":32},{"ruleId":"996","severity":1,"message":"1062","line":11,"column":8,"nodeType":"998","messageId":"999","endLine":11,"endColumn":22},{"ruleId":"996","severity":1,"message":"1051","line":12,"column":8,"nodeType":"998","messageId":"999","endLine":12,"endColumn":14},{"ruleId":"996","severity":1,"message":"1063","line":6,"column":27,"nodeType":"998","messageId":"999","endLine":6,"endColumn":33},{"ruleId":"996","severity":1,"message":"1064","line":6,"column":35,"nodeType":"998","messageId":"999","endLine":6,"endColumn":40},{"ruleId":"996","severity":1,"message":"1065","line":6,"column":42,"nodeType":"998","messageId":"999","endLine":6,"endColumn":48},{"ruleId":"996","severity":1,"message":"1066","line":7,"column":8,"nodeType":"998","messageId":"999","endLine":7,"endColumn":20},{"ruleId":"996","severity":1,"message":"1067","line":8,"column":8,"nodeType":"998","messageId":"999","endLine":8,"endColumn":23},{"ruleId":"996","severity":1,"message":"1032","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":15},{"ruleId":"996","severity":1,"message":"1060","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":24},{"ruleId":"996","severity":1,"message":"1068","line":4,"column":9,"nodeType":"998","messageId":"999","endLine":4,"endColumn":20},{"ruleId":"996","severity":1,"message":"1069","line":4,"column":22,"nodeType":"998","messageId":"999","endLine":4,"endColumn":29},{"ruleId":"1054","severity":1,"message":"1070","line":22,"column":17,"nodeType":"1024","endLine":22,"endColumn":63},{"ruleId":"996","severity":1,"message":"1071","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":22},{"ruleId":"996","severity":1,"message":"1072","line":2,"column":24,"nodeType":"998","messageId":"999","endLine":2,"endColumn":31},{"ruleId":"996","severity":1,"message":"1060","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":24},{"ruleId":"1054","severity":1,"message":"1070","line":9,"column":9,"nodeType":"1024","endLine":9,"endColumn":35},{"ruleId":"1054","severity":1,"message":"1055","line":30,"column":15,"nodeType":"1024","endLine":30,"endColumn":47},{"ruleId":"1009","severity":1,"message":"1010","line":37,"column":44,"nodeType":"1011","messageId":"1012","endLine":37,"endColumn":46},{"ruleId":"1009","severity":1,"message":"1010","line":86,"column":44,"nodeType":"1011","messageId":"1012","endLine":86,"endColumn":46},{"ruleId":"1009","severity":1,"message":"1010","line":128,"column":44,"nodeType":"1011","messageId":"1012","endLine":128,"endColumn":46},{"ruleId":"996","severity":1,"message":"1072","line":3,"column":57,"nodeType":"998","messageId":"999","endLine":3,"endColumn":64},{"ruleId":"996","severity":1,"message":"1073","line":8,"column":9,"nodeType":"998","messageId":"999","endLine":8,"endColumn":16},{"ruleId":"1054","severity":1,"message":"1055","line":22,"column":11,"nodeType":"1024","endLine":22,"endColumn":81},{"ruleId":"1009","severity":1,"message":"1010","line":35,"column":40,"nodeType":"1011","messageId":"1012","endLine":35,"endColumn":42},{"ruleId":"996","severity":1,"message":"1074","line":17,"column":11,"nodeType":"998","messageId":"999","endLine":17,"endColumn":17},{"ruleId":"996","severity":1,"message":"1075","line":19,"column":11,"nodeType":"998","messageId":"999","endLine":19,"endColumn":24},{"ruleId":"996","severity":1,"message":"1076","line":82,"column":11,"nodeType":"998","messageId":"999","endLine":82,"endColumn":34},{"ruleId":"996","severity":1,"message":"1077","line":9,"column":43,"nodeType":"998","messageId":"999","endLine":9,"endColumn":58},{"ruleId":"996","severity":1,"message":"1051","line":11,"column":8,"nodeType":"998","messageId":"999","endLine":11,"endColumn":14},{"ruleId":"996","severity":1,"message":"1078","line":14,"column":8,"nodeType":"998","messageId":"999","endLine":14,"endColumn":12},{"ruleId":"996","severity":1,"message":"1016","line":18,"column":12,"nodeType":"998","messageId":"999","endLine":18,"endColumn":17},{"ruleId":"996","severity":1,"message":"1017","line":18,"column":19,"nodeType":"998","messageId":"999","endLine":18,"endColumn":27},{"ruleId":"1002","severity":1,"message":"1079","line":43,"column":8,"nodeType":"1004","endLine":43,"endColumn":18,"suggestions":"1080"},{"ruleId":"996","severity":1,"message":"1020","line":61,"column":15,"nodeType":"998","messageId":"999","endLine":61,"endColumn":23},{"ruleId":"996","severity":1,"message":"1081","line":74,"column":11,"nodeType":"998","messageId":"999","endLine":74,"endColumn":24},{"ruleId":"996","severity":1,"message":"1020","line":79,"column":15,"nodeType":"998","messageId":"999","endLine":79,"endColumn":23},{"ruleId":"996","severity":1,"message":"1082","line":93,"column":11,"nodeType":"998","messageId":"999","endLine":93,"endColumn":29},{"ruleId":"996","severity":1,"message":"1020","line":98,"column":15,"nodeType":"998","messageId":"999","endLine":98,"endColumn":23},{"ruleId":"1083","severity":1,"message":"1084","line":114,"column":12,"nodeType":"1085","messageId":"1086","endLine":114,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":150,"column":47,"nodeType":"1011","messageId":"1012","endLine":150,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":150,"column":92,"nodeType":"1011","messageId":"1012","endLine":150,"endColumn":94},{"ruleId":"1009","severity":1,"message":"1010","line":252,"column":92,"nodeType":"1011","messageId":"1012","endLine":252,"endColumn":94},{"ruleId":"1087","severity":1,"message":"1088","line":335,"column":31,"nodeType":"1089","endLine":336,"endColumn":24},{"ruleId":"996","severity":1,"message":"1051","line":5,"column":8,"nodeType":"998","messageId":"999","endLine":5,"endColumn":14},{"ruleId":"996","severity":1,"message":"1040","line":10,"column":8,"nodeType":"998","messageId":"999","endLine":10,"endColumn":20},{"ruleId":"996","severity":1,"message":"1090","line":16,"column":8,"nodeType":"998","messageId":"999","endLine":16,"endColumn":17},{"ruleId":"996","severity":1,"message":"1091","line":35,"column":11,"nodeType":"998","messageId":"999","endLine":35,"endColumn":25},{"ruleId":"996","severity":1,"message":"1092","line":42,"column":11,"nodeType":"998","messageId":"999","endLine":42,"endColumn":21},{"ruleId":"1002","severity":1,"message":"1093","line":58,"column":8,"nodeType":"1004","endLine":58,"endColumn":10,"suggestions":"1094"},{"ruleId":"1009","severity":1,"message":"1010","line":101,"column":43,"nodeType":"1011","messageId":"1012","endLine":101,"endColumn":45},{"ruleId":"1009","severity":1,"message":"1010","line":101,"column":88,"nodeType":"1011","messageId":"1012","endLine":101,"endColumn":90},{"ruleId":"1095","severity":1,"message":"1096","line":210,"column":87,"nodeType":"1097","endLine":210,"endColumn":94},{"ruleId":"1009","severity":1,"message":"1010","line":223,"column":126,"nodeType":"1011","messageId":"1012","endLine":223,"endColumn":128},{"ruleId":"1098","severity":1,"message":"1099","line":317,"column":5,"nodeType":"1100","messageId":"1101","endLine":317,"endColumn":60},{"ruleId":"996","severity":1,"message":"1032","line":1,"column":9,"nodeType":"998","messageId":"999","endLine":1,"endColumn":15},{"ruleId":"996","severity":1,"message":"1015","line":1,"column":17,"nodeType":"998","messageId":"999","endLine":1,"endColumn":26},{"ruleId":"996","severity":1,"message":"1102","line":1,"column":28,"nodeType":"998","messageId":"999","endLine":1,"endColumn":33},{"ruleId":"996","severity":1,"message":"1051","line":9,"column":8,"nodeType":"998","messageId":"999","endLine":9,"endColumn":14},{"ruleId":"1009","severity":1,"message":"1010","line":28,"column":47,"nodeType":"1011","messageId":"1012","endLine":28,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":28,"column":92,"nodeType":"1011","messageId":"1012","endLine":28,"endColumn":94},{"ruleId":"996","severity":1,"message":"1103","line":4,"column":9,"nodeType":"998","messageId":"999","endLine":4,"endColumn":22},{"ruleId":"996","severity":1,"message":"1104","line":4,"column":24,"nodeType":"998","messageId":"999","endLine":4,"endColumn":36},{"ruleId":"996","severity":1,"message":"1068","line":4,"column":38,"nodeType":"998","messageId":"999","endLine":4,"endColumn":49},{"ruleId":"996","severity":1,"message":"1069","line":4,"column":69,"nodeType":"998","messageId":"999","endLine":4,"endColumn":76},{"ruleId":"996","severity":1,"message":"1032","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":15},{"ruleId":"996","severity":1,"message":"1105","line":3,"column":8,"nodeType":"998","messageId":"999","endLine":3,"endColumn":18},{"ruleId":"996","severity":1,"message":"1106","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":13},{"ruleId":"996","severity":1,"message":"1042","line":5,"column":49,"nodeType":"998","messageId":"999","endLine":5,"endColumn":55},{"ruleId":"996","severity":1,"message":"1069","line":5,"column":57,"nodeType":"998","messageId":"999","endLine":5,"endColumn":64},{"ruleId":"996","severity":1,"message":"1000","line":6,"column":8,"nodeType":"998","messageId":"999","endLine":6,"endColumn":22},{"ruleId":"1009","severity":1,"message":"1010","line":29,"column":47,"nodeType":"1011","messageId":"1012","endLine":29,"endColumn":49},{"ruleId":"996","severity":1,"message":"1107","line":2,"column":5,"nodeType":"998","messageId":"999","endLine":2,"endColumn":24},{"ruleId":"996","severity":1,"message":"1108","line":2,"column":26,"nodeType":"998","messageId":"999","endLine":2,"endColumn":53},{"ruleId":"996","severity":1,"message":"1109","line":2,"column":55,"nodeType":"998","messageId":"999","endLine":2,"endColumn":82},{"ruleId":"996","severity":1,"message":"1110","line":5,"column":32,"nodeType":"998","messageId":"999","endLine":5,"endColumn":53},{"ruleId":"996","severity":1,"message":"1111","line":5,"column":55,"nodeType":"998","messageId":"999","endLine":5,"endColumn":84},{"ruleId":"996","severity":1,"message":"1112","line":8,"column":28,"nodeType":"998","messageId":"999","endLine":8,"endColumn":43},{"ruleId":"996","severity":1,"message":"1113","line":8,"column":45,"nodeType":"998","messageId":"999","endLine":8,"endColumn":68},{"ruleId":"996","severity":1,"message":"1056","line":14,"column":12,"nodeType":"998","messageId":"999","endLine":14,"endColumn":14},{"ruleId":"992","replacedBy":"1114"},{"ruleId":"994","replacedBy":"1115"},{"ruleId":"996","severity":1,"message":"997","line":5,"column":8,"nodeType":"998","messageId":"999","endLine":5,"endColumn":18},{"ruleId":"996","severity":1,"message":"1000","line":10,"column":8,"nodeType":"998","messageId":"999","endLine":10,"endColumn":22},{"ruleId":"996","severity":1,"message":"1001","line":15,"column":8,"nodeType":"998","messageId":"999","endLine":15,"endColumn":20},{"ruleId":"996","severity":1,"message":"1116","line":18,"column":8,"nodeType":"998","messageId":"999","endLine":18,"endColumn":27},{"ruleId":"996","severity":1,"message":"1117","line":7,"column":9,"nodeType":"998","messageId":"999","endLine":7,"endColumn":16},{"ruleId":"996","severity":1,"message":"1118","line":7,"column":33,"nodeType":"998","messageId":"999","endLine":7,"endColumn":40},{"ruleId":"996","severity":1,"message":"1042","line":7,"column":42,"nodeType":"998","messageId":"999","endLine":7,"endColumn":48},{"ruleId":"1002","severity":1,"message":"1003","line":82,"column":8,"nodeType":"1004","endLine":82,"endColumn":22,"suggestions":"1119"},{"ruleId":"1002","severity":1,"message":"1028","line":90,"column":8,"nodeType":"1004","endLine":90,"endColumn":21,"suggestions":"1120"},{"ruleId":"1009","severity":1,"message":"1010","line":105,"column":47,"nodeType":"1011","messageId":"1012","endLine":105,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":105,"column":91,"nodeType":"1011","messageId":"1012","endLine":105,"endColumn":93},{"ruleId":"1009","severity":1,"message":"1010","line":131,"column":92,"nodeType":"1011","messageId":"1012","endLine":131,"endColumn":94},{"ruleId":"1009","severity":1,"message":"1010","line":135,"column":92,"nodeType":"1011","messageId":"1012","endLine":135,"endColumn":94},{"ruleId":"1009","severity":1,"message":"1010","line":154,"column":104,"nodeType":"1011","messageId":"1012","endLine":154,"endColumn":106},{"ruleId":"1009","severity":1,"message":"1010","line":223,"column":92,"nodeType":"1011","messageId":"1012","endLine":223,"endColumn":94},{"ruleId":"1009","severity":1,"message":"1010","line":246,"column":92,"nodeType":"1011","messageId":"1012","endLine":246,"endColumn":94},{"ruleId":"996","severity":1,"message":"1021","line":6,"column":8,"nodeType":"998","messageId":"999","endLine":6,"endColumn":20},{"ruleId":"1009","severity":1,"message":"1010","line":18,"column":51,"nodeType":"1011","messageId":"1012","endLine":18,"endColumn":53},{"ruleId":"1022","severity":1,"message":"1023","line":35,"column":45,"nodeType":"1024","endLine":36,"endColumn":80},{"ruleId":"996","severity":1,"message":"1057","line":1,"column":27,"nodeType":"998","messageId":"999","endLine":1,"endColumn":35},{"ruleId":"996","severity":1,"message":"1026","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":17},{"ruleId":"996","severity":1,"message":"1058","line":2,"column":19,"nodeType":"998","messageId":"999","endLine":2,"endColumn":29},{"ruleId":"996","severity":1,"message":"1059","line":2,"column":31,"nodeType":"998","messageId":"999","endLine":2,"endColumn":40},{"ruleId":"996","severity":1,"message":"1060","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":24},{"ruleId":"996","severity":1,"message":"1061","line":4,"column":9,"nodeType":"998","messageId":"999","endLine":4,"endColumn":15},{"ruleId":"996","severity":1,"message":"1015","line":5,"column":9,"nodeType":"998","messageId":"999","endLine":5,"endColumn":18},{"ruleId":"996","severity":1,"message":"1032","line":5,"column":20,"nodeType":"998","messageId":"999","endLine":5,"endColumn":26},{"ruleId":"996","severity":1,"message":"1036","line":5,"column":28,"nodeType":"998","messageId":"999","endLine":5,"endColumn":32},{"ruleId":"996","severity":1,"message":"1062","line":11,"column":8,"nodeType":"998","messageId":"999","endLine":11,"endColumn":22},{"ruleId":"996","severity":1,"message":"1051","line":12,"column":8,"nodeType":"998","messageId":"999","endLine":12,"endColumn":14},{"ruleId":"1009","severity":1,"message":"1010","line":29,"column":47,"nodeType":"1011","messageId":"1012","endLine":29,"endColumn":49},{"ruleId":"996","severity":1,"message":"1051","line":7,"column":8,"nodeType":"998","messageId":"999","endLine":7,"endColumn":14},{"ruleId":"1002","severity":1,"message":"1052","line":22,"column":25,"nodeType":"1004","endLine":22,"endColumn":46,"suggestions":"1121"},{"ruleId":"1009","severity":1,"message":"1010","line":27,"column":47,"nodeType":"1011","messageId":"1012","endLine":27,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":27,"column":92,"nodeType":"1011","messageId":"1012","endLine":27,"endColumn":94},{"ruleId":"1054","severity":1,"message":"1055","line":50,"column":61,"nodeType":"1024","endLine":50,"endColumn":105},{"ruleId":"996","severity":1,"message":"1030","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":14},{"ruleId":"996","severity":1,"message":"1031","line":3,"column":16,"nodeType":"998","messageId":"999","endLine":3,"endColumn":27},{"ruleId":"996","severity":1,"message":"1032","line":6,"column":9,"nodeType":"998","messageId":"999","endLine":6,"endColumn":15},{"ruleId":"996","severity":1,"message":"1033","line":7,"column":9,"nodeType":"998","messageId":"999","endLine":7,"endColumn":12},{"ruleId":"996","severity":1,"message":"1034","line":8,"column":9,"nodeType":"998","messageId":"999","endLine":8,"endColumn":14},{"ruleId":"996","severity":1,"message":"1035","line":9,"column":9,"nodeType":"998","messageId":"999","endLine":9,"endColumn":18},{"ruleId":"996","severity":1,"message":"1036","line":10,"column":9,"nodeType":"998","messageId":"999","endLine":10,"endColumn":13},{"ruleId":"996","severity":1,"message":"1037","line":11,"column":9,"nodeType":"998","messageId":"999","endLine":11,"endColumn":18},{"ruleId":"996","severity":1,"message":"1038","line":12,"column":9,"nodeType":"998","messageId":"999","endLine":12,"endColumn":20},{"ruleId":"996","severity":1,"message":"1039","line":13,"column":9,"nodeType":"998","messageId":"999","endLine":13,"endColumn":14},{"ruleId":"996","severity":1,"message":"1015","line":14,"column":8,"nodeType":"998","messageId":"999","endLine":14,"endColumn":17},{"ruleId":"996","severity":1,"message":"1040","line":17,"column":8,"nodeType":"998","messageId":"999","endLine":17,"endColumn":20},{"ruleId":"996","severity":1,"message":"1041","line":19,"column":9,"nodeType":"998","messageId":"999","endLine":19,"endColumn":20},{"ruleId":"996","severity":1,"message":"1042","line":19,"column":57,"nodeType":"998","messageId":"999","endLine":19,"endColumn":63},{"ruleId":"996","severity":1,"message":"1043","line":20,"column":8,"nodeType":"998","messageId":"999","endLine":20,"endColumn":11},{"ruleId":"996","severity":1,"message":"1044","line":21,"column":8,"nodeType":"998","messageId":"999","endLine":21,"endColumn":10},{"ruleId":"996","severity":1,"message":"1045","line":26,"column":12,"nodeType":"998","messageId":"999","endLine":26,"endColumn":16},{"ruleId":"996","severity":1,"message":"1046","line":26,"column":18,"nodeType":"998","messageId":"999","endLine":26,"endColumn":25},{"ruleId":"1002","severity":1,"message":"1028","line":31,"column":8,"nodeType":"1004","endLine":31,"endColumn":32,"suggestions":"1122"},{"ruleId":"1002","severity":1,"message":"1028","line":36,"column":8,"nodeType":"1004","endLine":36,"endColumn":32,"suggestions":"1123"},{"ruleId":"1009","severity":1,"message":"1010","line":97,"column":88,"nodeType":"1011","messageId":"1012","endLine":97,"endColumn":90},{"ruleId":"1049","severity":1,"message":"1050","line":112,"column":81,"nodeType":"1024","endLine":112,"endColumn":122},{"ruleId":"1049","severity":1,"message":"1050","line":116,"column":81,"nodeType":"1024","endLine":116,"endColumn":127},{"ruleId":"1009","severity":1,"message":"1010","line":29,"column":47,"nodeType":"1011","messageId":"1012","endLine":29,"endColumn":49},{"ruleId":"996","severity":1,"message":"1032","line":1,"column":9,"nodeType":"998","messageId":"999","endLine":1,"endColumn":15},{"ruleId":"996","severity":1,"message":"1015","line":1,"column":17,"nodeType":"998","messageId":"999","endLine":1,"endColumn":26},{"ruleId":"996","severity":1,"message":"1102","line":1,"column":28,"nodeType":"998","messageId":"999","endLine":1,"endColumn":33},{"ruleId":"1009","severity":1,"message":"1010","line":30,"column":47,"nodeType":"1011","messageId":"1012","endLine":30,"endColumn":49},{"ruleId":"996","severity":1,"message":"1056","line":9,"column":12,"nodeType":"998","messageId":"999","endLine":9,"endColumn":14},{"ruleId":"996","severity":1,"message":"1045","line":10,"column":12,"nodeType":"998","messageId":"999","endLine":10,"endColumn":16},{"ruleId":"996","severity":1,"message":"1046","line":10,"column":18,"nodeType":"998","messageId":"999","endLine":10,"endColumn":25},{"ruleId":"1009","severity":1,"message":"1010","line":19,"column":47,"nodeType":"1011","messageId":"1012","endLine":19,"endColumn":49},{"ruleId":"1054","severity":1,"message":"1055","line":39,"column":61,"nodeType":"1024","endLine":39,"endColumn":105},{"ruleId":"996","severity":1,"message":"1056","line":16,"column":12,"nodeType":"998","messageId":"999","endLine":16,"endColumn":14},{"ruleId":"1009","severity":1,"message":"1010","line":55,"column":47,"nodeType":"1011","messageId":"1012","endLine":55,"endColumn":49},{"ruleId":"996","severity":1,"message":"1124","line":3,"column":3,"nodeType":"998","messageId":"999","endLine":3,"endColumn":29},{"ruleId":"996","severity":1,"message":"1063","line":6,"column":27,"nodeType":"998","messageId":"999","endLine":6,"endColumn":33},{"ruleId":"996","severity":1,"message":"1064","line":6,"column":35,"nodeType":"998","messageId":"999","endLine":6,"endColumn":40},{"ruleId":"996","severity":1,"message":"1065","line":6,"column":42,"nodeType":"998","messageId":"999","endLine":6,"endColumn":48},{"ruleId":"996","severity":1,"message":"1066","line":7,"column":8,"nodeType":"998","messageId":"999","endLine":7,"endColumn":20},{"ruleId":"996","severity":1,"message":"1067","line":8,"column":8,"nodeType":"998","messageId":"999","endLine":8,"endColumn":23},{"ruleId":"996","severity":1,"message":"1125","line":5,"column":3,"nodeType":"998","messageId":"999","endLine":5,"endColumn":15},{"ruleId":"996","severity":1,"message":"1126","line":9,"column":3,"nodeType":"998","messageId":"999","endLine":9,"endColumn":13},{"ruleId":"996","severity":1,"message":"1072","line":10,"column":3,"nodeType":"998","messageId":"999","endLine":10,"endColumn":10},{"ruleId":"996","severity":1,"message":"1073","line":17,"column":9,"nodeType":"998","messageId":"999","endLine":17,"endColumn":16},{"ruleId":"1054","severity":1,"message":"1055","line":31,"column":11,"nodeType":"1024","endLine":31,"endColumn":81},{"ruleId":"1009","severity":1,"message":"1010","line":58,"column":40,"nodeType":"1011","messageId":"1012","endLine":58,"endColumn":42},{"ruleId":"1054","severity":1,"message":"1070","line":61,"column":13,"nodeType":"1024","endLine":61,"endColumn":60},{"ruleId":"1054","severity":1,"message":"1055","line":67,"column":15,"nodeType":"1024","endLine":67,"endColumn":53},{"ruleId":"996","severity":1,"message":"1071","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":22},{"ruleId":"996","severity":1,"message":"1072","line":2,"column":24,"nodeType":"998","messageId":"999","endLine":2,"endColumn":31},{"ruleId":"996","severity":1,"message":"1060","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":24},{"ruleId":"1054","severity":1,"message":"1070","line":10,"column":9,"nodeType":"1024","endLine":10,"endColumn":35},{"ruleId":"1054","severity":1,"message":"1055","line":31,"column":15,"nodeType":"1024","endLine":31,"endColumn":47},{"ruleId":"1009","severity":1,"message":"1010","line":38,"column":44,"nodeType":"1011","messageId":"1012","endLine":38,"endColumn":46},{"ruleId":"1009","severity":1,"message":"1010","line":87,"column":44,"nodeType":"1011","messageId":"1012","endLine":87,"endColumn":46},{"ruleId":"1009","severity":1,"message":"1010","line":129,"column":44,"nodeType":"1011","messageId":"1012","endLine":129,"endColumn":46},{"ruleId":"996","severity":1,"message":"1074","line":17,"column":11,"nodeType":"998","messageId":"999","endLine":17,"endColumn":17},{"ruleId":"996","severity":1,"message":"1075","line":19,"column":11,"nodeType":"998","messageId":"999","endLine":19,"endColumn":24},{"ruleId":"1009","severity":1,"message":"1010","line":18,"column":48,"nodeType":"1011","messageId":"1012","endLine":18,"endColumn":50},{"ruleId":"1127","severity":1,"message":"1128","line":18,"column":60,"nodeType":"1129","messageId":"1130","endLine":18,"endColumn":62},{"ruleId":"1127","severity":1,"message":"1128","line":18,"column":71,"nodeType":"1129","messageId":"1130","endLine":18,"endColumn":73},{"ruleId":"1054","severity":1,"message":"1070","line":10,"column":17,"nodeType":"1024","endLine":10,"endColumn":62},{"ruleId":"1054","severity":1,"message":"1070","line":13,"column":17,"nodeType":"1024","endLine":13,"endColumn":63},{"ruleId":"996","severity":1,"message":"1103","line":4,"column":9,"nodeType":"998","messageId":"999","endLine":4,"endColumn":22},{"ruleId":"996","severity":1,"message":"1104","line":4,"column":24,"nodeType":"998","messageId":"999","endLine":4,"endColumn":36},{"ruleId":"996","severity":1,"message":"1068","line":4,"column":38,"nodeType":"998","messageId":"999","endLine":4,"endColumn":49},{"ruleId":"996","severity":1,"message":"1069","line":4,"column":69,"nodeType":"998","messageId":"999","endLine":4,"endColumn":76},{"ruleId":"996","severity":1,"message":"1131","line":2,"column":5,"nodeType":"998","messageId":"999","endLine":2,"endColumn":22},{"ruleId":"996","severity":1,"message":"1132","line":5,"column":35,"nodeType":"998","messageId":"999","endLine":5,"endColumn":69},{"ruleId":"996","severity":1,"message":"1133","line":5,"column":71,"nodeType":"998","messageId":"999","endLine":5,"endColumn":105},{"ruleId":"996","severity":1,"message":"1134","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":22},{"ruleId":"996","severity":1,"message":"1041","line":5,"column":9,"nodeType":"998","messageId":"999","endLine":5,"endColumn":20},{"ruleId":"996","severity":1,"message":"1107","line":2,"column":5,"nodeType":"998","messageId":"999","endLine":2,"endColumn":24},{"ruleId":"996","severity":1,"message":"1108","line":2,"column":26,"nodeType":"998","messageId":"999","endLine":2,"endColumn":53},{"ruleId":"996","severity":1,"message":"1109","line":2,"column":55,"nodeType":"998","messageId":"999","endLine":2,"endColumn":82},{"ruleId":"996","severity":1,"message":"1110","line":5,"column":32,"nodeType":"998","messageId":"999","endLine":5,"endColumn":53},{"ruleId":"996","severity":1,"message":"1111","line":5,"column":55,"nodeType":"998","messageId":"999","endLine":5,"endColumn":84},{"ruleId":"996","severity":1,"message":"1112","line":8,"column":28,"nodeType":"998","messageId":"999","endLine":8,"endColumn":43},{"ruleId":"996","severity":1,"message":"1113","line":8,"column":45,"nodeType":"998","messageId":"999","endLine":8,"endColumn":68},{"ruleId":"996","severity":1,"message":"1077","line":9,"column":43,"nodeType":"998","messageId":"999","endLine":9,"endColumn":58},{"ruleId":"996","severity":1,"message":"1135","line":5,"column":5,"nodeType":"998","messageId":"999","endLine":5,"endColumn":30},{"ruleId":"996","severity":1,"message":"1132","line":9,"column":5,"nodeType":"998","messageId":"999","endLine":9,"endColumn":39},{"ruleId":"996","severity":1,"message":"1133","line":10,"column":5,"nodeType":"998","messageId":"999","endLine":10,"endColumn":39},{"ruleId":"996","severity":1,"message":"1136","line":14,"column":5,"nodeType":"998","messageId":"999","endLine":14,"endColumn":30},{"ruleId":"996","severity":1,"message":"1107","line":2,"column":5,"nodeType":"998","messageId":"999","endLine":2,"endColumn":24},{"ruleId":"996","severity":1,"message":"1110","line":5,"column":32,"nodeType":"998","messageId":"999","endLine":5,"endColumn":53},{"ruleId":"996","severity":1,"message":"1137","line":5,"column":55,"nodeType":"998","messageId":"999","endLine":5,"endColumn":84},{"ruleId":"996","severity":1,"message":"1111","line":5,"column":86,"nodeType":"998","messageId":"999","endLine":5,"endColumn":115},{"ruleId":"996","severity":1,"message":"1112","line":8,"column":28,"nodeType":"998","messageId":"999","endLine":8,"endColumn":43},{"ruleId":"996","severity":1,"message":"1040","line":10,"column":8,"nodeType":"998","messageId":"999","endLine":10,"endColumn":20},{"ruleId":"996","severity":1,"message":"1090","line":16,"column":8,"nodeType":"998","messageId":"999","endLine":16,"endColumn":17},{"ruleId":"1002","severity":1,"message":"1093","line":59,"column":8,"nodeType":"1004","endLine":59,"endColumn":10,"suggestions":"1138"},{"ruleId":"1009","severity":1,"message":"1010","line":69,"column":47,"nodeType":"1011","messageId":"1012","endLine":69,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":72,"column":54,"nodeType":"1011","messageId":"1012","endLine":72,"endColumn":56},{"ruleId":"1009","severity":1,"message":"1010","line":116,"column":43,"nodeType":"1011","messageId":"1012","endLine":116,"endColumn":45},{"ruleId":"1095","severity":1,"message":"1096","line":234,"column":87,"nodeType":"1097","endLine":234,"endColumn":94},{"ruleId":"1009","severity":1,"message":"1010","line":247,"column":126,"nodeType":"1011","messageId":"1012","endLine":247,"endColumn":128},{"ruleId":"1098","severity":1,"message":"1099","line":315,"column":5,"nodeType":"1100","messageId":"1101","endLine":315,"endColumn":60},{"ruleId":"996","severity":1,"message":"1032","line":1,"column":9,"nodeType":"998","messageId":"999","endLine":1,"endColumn":15},{"ruleId":"996","severity":1,"message":"1015","line":1,"column":17,"nodeType":"998","messageId":"999","endLine":1,"endColumn":26},{"ruleId":"996","severity":1,"message":"1102","line":1,"column":28,"nodeType":"998","messageId":"999","endLine":1,"endColumn":33},{"ruleId":"996","severity":1,"message":"1051","line":9,"column":8,"nodeType":"998","messageId":"999","endLine":9,"endColumn":14},{"ruleId":"1009","severity":1,"message":"1010","line":28,"column":47,"nodeType":"1011","messageId":"1012","endLine":28,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":28,"column":92,"nodeType":"1011","messageId":"1012","endLine":28,"endColumn":94},{"ruleId":"996","severity":1,"message":"1051","line":11,"column":8,"nodeType":"998","messageId":"999","endLine":11,"endColumn":14},{"ruleId":"996","severity":1,"message":"1016","line":19,"column":12,"nodeType":"998","messageId":"999","endLine":19,"endColumn":17},{"ruleId":"996","severity":1,"message":"1017","line":19,"column":19,"nodeType":"998","messageId":"999","endLine":19,"endColumn":27},{"ruleId":"1002","severity":1,"message":"1079","line":44,"column":8,"nodeType":"1004","endLine":44,"endColumn":18,"suggestions":"1139"},{"ruleId":"1009","severity":1,"message":"1010","line":50,"column":47,"nodeType":"1011","messageId":"1012","endLine":50,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":52,"column":54,"nodeType":"1011","messageId":"1012","endLine":52,"endColumn":56},{"ruleId":"1009","severity":1,"message":"1010","line":54,"column":54,"nodeType":"1011","messageId":"1012","endLine":54,"endColumn":56},{"ruleId":"996","severity":1,"message":"1020","line":71,"column":15,"nodeType":"998","messageId":"999","endLine":71,"endColumn":23},{"ruleId":"996","severity":1,"message":"1081","line":84,"column":11,"nodeType":"998","messageId":"999","endLine":84,"endColumn":24},{"ruleId":"996","severity":1,"message":"1020","line":89,"column":15,"nodeType":"998","messageId":"999","endLine":89,"endColumn":23},{"ruleId":"996","severity":1,"message":"1082","line":103,"column":11,"nodeType":"998","messageId":"999","endLine":103,"endColumn":29},{"ruleId":"996","severity":1,"message":"1020","line":108,"column":15,"nodeType":"998","messageId":"999","endLine":108,"endColumn":23},{"ruleId":"1083","severity":1,"message":"1084","line":124,"column":12,"nodeType":"1085","messageId":"1086","endLine":124,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":148,"column":34,"nodeType":"1011","messageId":"1012","endLine":148,"endColumn":36},{"ruleId":"1009","severity":1,"message":"1010","line":166,"column":47,"nodeType":"1011","messageId":"1012","endLine":166,"endColumn":49},{"ruleId":"1009","severity":1,"message":"1010","line":166,"column":92,"nodeType":"1011","messageId":"1012","endLine":166,"endColumn":94},{"ruleId":"1009","severity":1,"message":"1010","line":273,"column":92,"nodeType":"1011","messageId":"1012","endLine":273,"endColumn":94},{"ruleId":"1087","severity":1,"message":"1088","line":363,"column":31,"nodeType":"1089","endLine":364,"endColumn":24},{"ruleId":"996","severity":1,"message":"1051","line":5,"column":8,"nodeType":"998","messageId":"999","endLine":5,"endColumn":14},{"ruleId":"1009","severity":1,"message":"1010","line":30,"column":47,"nodeType":"1011","messageId":"1012","endLine":30,"endColumn":49},{"ruleId":"992","replacedBy":"1140"},{"ruleId":"994","replacedBy":"1141"},{"ruleId":"1002","severity":1,"message":"1052","line":22,"column":25,"nodeType":"1004","endLine":22,"endColumn":46,"suggestions":"1142"},{"ruleId":"1009","severity":1,"message":"1010","line":27,"column":47,"nodeType":"1011","messageId":"1012","endLine":27,"endColumn":49},{"ruleId":"1054","severity":1,"message":"1055","line":50,"column":61,"nodeType":"1024","endLine":50,"endColumn":105},{"ruleId":"1002","severity":1,"message":"1003","line":66,"column":8,"nodeType":"1004","endLine":66,"endColumn":26,"suggestions":"1143"},{"ruleId":"996","severity":1,"message":"1057","line":1,"column":27,"nodeType":"998","messageId":"999","endLine":1,"endColumn":35},{"ruleId":"996","severity":1,"message":"1144","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":30},{"ruleId":"996","severity":1,"message":"1059","line":11,"column":9,"nodeType":"998","messageId":"999","endLine":11,"endColumn":18},{"ruleId":"1002","severity":1,"message":"1006","line":52,"column":8,"nodeType":"1004","endLine":52,"endColumn":30,"suggestions":"1145"},{"ruleId":"1002","severity":1,"message":"1006","line":58,"column":8,"nodeType":"1004","endLine":58,"endColumn":19,"suggestions":"1146"},{"ruleId":"1009","severity":1,"message":"1010","line":63,"column":47,"nodeType":"1011","messageId":"1012","endLine":63,"endColumn":49},{"ruleId":"996","severity":1,"message":"1013","line":6,"column":5,"nodeType":"998","messageId":"999","endLine":6,"endColumn":10},{"ruleId":"996","severity":1,"message":"1014","line":6,"column":12,"nodeType":"998","messageId":"999","endLine":6,"endColumn":20},{"ruleId":"996","severity":1,"message":"1030","line":12,"column":9,"nodeType":"998","messageId":"999","endLine":12,"endColumn":14},{"ruleId":"996","severity":1,"message":"1034","line":12,"column":16,"nodeType":"998","messageId":"999","endLine":12,"endColumn":21},{"ruleId":"996","severity":1,"message":"1035","line":12,"column":23,"nodeType":"998","messageId":"999","endLine":12,"endColumn":32},{"ruleId":"996","severity":1,"message":"1015","line":12,"column":42,"nodeType":"998","messageId":"999","endLine":12,"endColumn":51},{"ruleId":"996","severity":1,"message":"1033","line":12,"column":59,"nodeType":"998","messageId":"999","endLine":12,"endColumn":62},{"ruleId":"996","severity":1,"message":"1147","line":24,"column":12,"nodeType":"998","messageId":"999","endLine":24,"endColumn":17},{"ruleId":"996","severity":1,"message":"1148","line":24,"column":19,"nodeType":"998","messageId":"999","endLine":24,"endColumn":27},{"ruleId":"1002","severity":1,"message":"1149","line":42,"column":8,"nodeType":"1004","endLine":42,"endColumn":17,"suggestions":"1150"},{"ruleId":"1009","severity":1,"message":"1010","line":102,"column":47,"nodeType":"1011","messageId":"1012","endLine":102,"endColumn":49},{"ruleId":"996","severity":1,"message":"1030","line":4,"column":23,"nodeType":"998","messageId":"999","endLine":4,"endColumn":28},{"ruleId":"996","severity":1,"message":"1073","line":33,"column":11,"nodeType":"998","messageId":"999","endLine":33,"endColumn":18},{"ruleId":"1002","severity":1,"message":"1151","line":41,"column":8,"nodeType":"1004","endLine":41,"endColumn":17,"suggestions":"1152"},{"ruleId":"1009","severity":1,"message":"1010","line":64,"column":47,"nodeType":"1011","messageId":"1012","endLine":64,"endColumn":49},{"ruleId":"996","severity":1,"message":"1032","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":15},{"ruleId":"996","severity":1,"message":"1060","line":3,"column":9,"nodeType":"998","messageId":"999","endLine":3,"endColumn":24},{"ruleId":"996","severity":1,"message":"1068","line":4,"column":9,"nodeType":"998","messageId":"999","endLine":4,"endColumn":20},{"ruleId":"996","severity":1,"message":"1069","line":4,"column":22,"nodeType":"998","messageId":"999","endLine":4,"endColumn":29},{"ruleId":"1054","severity":1,"message":"1070","line":24,"column":17,"nodeType":"1024","endLine":24,"endColumn":63},{"ruleId":"996","severity":1,"message":"1153","line":1,"column":16,"nodeType":"998","messageId":"999","endLine":1,"endColumn":25},{"ruleId":"996","severity":1,"message":"1057","line":1,"column":27,"nodeType":"998","messageId":"999","endLine":1,"endColumn":35},{"ruleId":"996","severity":1,"message":"1026","line":2,"column":9,"nodeType":"998","messageId":"999","endLine":2,"endColumn":17},{"ruleId":"996","severity":1,"message":"1058","line":2,"column":19,"nodeType":"998","messageId":"999","endLine":2,"endColumn":29},{"ruleId":"996","severity":1,"message":"1059","line":2,"column":31,"nodeType":"998","messageId":"999","endLine":2,"endColumn":40},{"ruleId":"996","severity":1,"message":"1154","line":5,"column":5,"nodeType":"998","messageId":"999","endLine":5,"endColumn":15},{"ruleId":"996","severity":1,"message":"1014","line":6,"column":32,"nodeType":"998","messageId":"999","endLine":6,"endColumn":40},{"ruleId":"996","severity":1,"message":"1155","line":7,"column":5,"nodeType":"998","messageId":"999","endLine":7,"endColumn":11},{"ruleId":"996","severity":1,"message":"1156","line":8,"column":5,"nodeType":"998","messageId":"999","endLine":8,"endColumn":17},{"ruleId":"996","severity":1,"message":"1030","line":12,"column":9,"nodeType":"998","messageId":"999","endLine":12,"endColumn":14},{"ruleId":"996","severity":1,"message":"1034","line":12,"column":16,"nodeType":"998","messageId":"999","endLine":12,"endColumn":21},{"ruleId":"996","severity":1,"message":"1035","line":12,"column":23,"nodeType":"998","messageId":"999","endLine":12,"endColumn":32},{"ruleId":"996","severity":1,"message":"1015","line":12,"column":42,"nodeType":"998","messageId":"999","endLine":12,"endColumn":51},{"ruleId":"996","severity":1,"message":"1033","line":12,"column":59,"nodeType":"998","messageId":"999","endLine":12,"endColumn":62},{"ruleId":"996","severity":1,"message":"1144","line":13,"column":9,"nodeType":"998","messageId":"999","endLine":13,"endColumn":30},{"ruleId":"996","severity":1,"message":"1157","line":13,"column":32,"nodeType":"998","messageId":"999","endLine":13,"endColumn":49},{"ruleId":"996","severity":1,"message":"1158","line":14,"column":9,"nodeType":"998","messageId":"999","endLine":14,"endColumn":16},{"ruleId":"996","severity":1,"message":"1040","line":15,"column":8,"nodeType":"998","messageId":"999","endLine":15,"endColumn":20},{"ruleId":"996","severity":1,"message":"1078","line":18,"column":8,"nodeType":"998","messageId":"999","endLine":18,"endColumn":12},{"ruleId":"1009","severity":1,"message":"1010","line":26,"column":47,"nodeType":"1011","messageId":"1012","endLine":26,"endColumn":49},"no-native-reassign",["1159"],"no-negated-in-lhs",["1160"],"no-unused-vars","'HomeMaster' is defined but never used.","Identifier","unusedVar","'DetailCustomer' is defined but never used.","'ReportDetail' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["1161"],"React Hook useEffect has a missing dependency: 'onReload'. Either include it or remove the dependency array.",["1162"],["1163"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'faKey' is defined but never used.","'faServer' is defined but never used.","'Container' is defined but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id' and 'id'. Either include them or remove the dependency array.",["1164"],"'response' is assigned a value but never used.","'HeaderMaster' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'findByIdTransactionAction' is defined but never used.","'Redirect' is defined but never used.","'Footer' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1165"],"'Input' is defined but never used.","'ModalFooter' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'Modal' is defined but never used.","'DropdownList' is defined but never used.","'faArrowLeft' is defined but never used.","'faSave' is defined but never used.","'man' is defined but never used.","'id' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["1166"],["1167"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'SignIn' is defined but never used.","React Hook useEffect has a missing dependency: 'reports'. Either include it or remove the dependency array.",["1168"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'id' is assigned a value but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPlus' is defined but never used.","'TransactionRow' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ListCustomer' is defined but never used.","'TransactionList' is defined but never used.","'faPencilAlt' is defined but never used.","'faTrash' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faCheckDouble' is defined but never used.","'faUsers' is defined but never used.","'history' is assigned a value but never used.","'toggle' is assigned a value but never used.","'handleOnclick' is assigned a value but never used.","'findCustomerByStaffSaga' is defined but never used.","'UPDATE_CUSTOMER' is defined but never used.","'swal' is defined but never used.","React Hook useEffect has missing dependencies: 'data.id', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1169"],"'uploadIdPhoto' is assigned a value but never used.","'uploadProfilePhoto' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'ReasonRow' is defined but never used.","'handleCustomer' is assigned a value but never used.","'handleNeed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1170"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Table' is defined but never used.","'faCheckCircle' is defined but never used.","'faInfoCircle' is defined but never used.","'Containers' is defined but never used.","'Link' is defined but never used.","'FIND_NEEDTYPE_BY_ID' is defined but never used.","'FIND_NEEDTYPE_BY_ID_FAILURE' is defined but never used.","'FIND_NEEDTYPE_BY_ID_SUCCESS' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID_SUCCESS' is defined but never used.","'UPDATE_NEEDTYPE' is defined but never used.","'UPDATE_NEEDTYPE_SUCCESS' is defined but never used.",["1159"],["1160"],"'ListCustomerByStaff' is defined but never used.","'faCheck' is defined but never used.","'faCross' is defined but never used.",["1171"],["1172"],["1173"],["1174"],["1175"],"'findAllCustomerByIdReducer' is defined but never used.","'faFolderPlus' is defined but never used.","'faUserPlus' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'FIND_ALL_CUSTOMER' is defined but never used.","'FIND_CUSTOMER_BY_SUBMITTER_FAILURE' is defined but never used.","'FIND_CUSTOMER_BY_SUBMITTER_SUCCESS' is defined but never used.","'FaFontAwesome' is defined but never used.","'FIND_ALL_APPROVAL_SUCCESS' is defined but never used.","'FIND_TRANSACTION_BY_STAFF' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID_FAILURE' is defined but never used.",["1176"],["1177"],["1159"],["1160"],["1178"],["1179"],"'findAccountByIdAction' is defined but never used.",["1180"],["1181"],"'photo' is assigned a value but never used.","'setPhoto' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'id'. Either include them or remove the dependency array.",["1182"],"React Hook useEffect has missing dependencies: 'data', 'findAccountByIdAction', and 'id'. Either include them or remove the dependency array. If 'findAccountByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1183"],"'useEffect' is defined but never used.","'faEnvelope' is defined but never used.","'faUser' is defined but never used.","'faUserCircle' is defined but never used.","'saveAccountAction' is defined but never used.","'connect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1184","fix":"1185"},{"desc":"1186","fix":"1187"},{"desc":"1188","fix":"1189"},{"desc":"1190","fix":"1191"},{"desc":"1192","fix":"1193"},{"desc":"1194","fix":"1195"},{"desc":"1194","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},{"desc":"1203","fix":"1204"},{"desc":"1192","fix":"1205"},{"desc":"1197","fix":"1206"},{"desc":"1194","fix":"1207"},{"desc":"1194","fix":"1208"},{"desc":"1201","fix":"1209"},{"desc":"1199","fix":"1210"},{"desc":"1197","fix":"1211"},{"desc":"1184","fix":"1212"},{"desc":"1186","fix":"1213"},{"desc":"1188","fix":"1214"},{"desc":"1215","fix":"1216"},{"desc":"1217","fix":"1218"},"Update the dependencies array to be: [loginData, error, history]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [findAllAccountAction, onReload]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [isRemoved, onReload]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [data.id, id, users]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [id, transaction]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [findCustomerByIdAction, id]",{"range":"1229","text":"1230"},{"range":"1231","text":"1230"},"Update the dependencies array to be: [findAllReportAction, reports]",{"range":"1232","text":"1233"},"Update the dependencies array to be: [customer, data.id, findCustomerByIdAction, id]",{"range":"1234","text":"1235"},"Update the dependencies array to be: [data, findCustomerByIdAction, id]",{"range":"1236","text":"1237"},"Update the dependencies array to be: [history, savedApprove]",{"range":"1238","text":"1239"},{"range":"1240","text":"1228"},{"range":"1241","text":"1233"},{"range":"1242","text":"1230"},{"range":"1243","text":"1230"},{"range":"1244","text":"1237"},{"range":"1245","text":"1235"},{"range":"1246","text":"1233"},{"range":"1247","text":"1220"},{"range":"1248","text":"1222"},{"range":"1249","text":"1224"},"Update the dependencies array to be: [account, data, id]",{"range":"1250","text":"1251"},"Update the dependencies array to be: [account, data, findAccountByIdAction, id]",{"range":"1252","text":"1253"},[2231,2249],"[loginData, error, history]",[1526,1548],"[findAllAccountAction, onReload]",[1643,1654],"[isRemoved, onReload]",[1491,1498],"[data.id, id, users]",[1855,1868],"[id, transaction]",[1301,1325],"[findCustomerByIdAction, id]",[1421,1445],[747,768],"[findAllReportAction, reports]",[1675,1685],"[customer, data.id, findCustomerByIdAction, id]",[2085,2087],"[data, findCustomerByIdAction, id]",[2454,2468],"[history, savedApprove]",[2635,2648],[778,799],[1301,1325],[1421,1445],[2152,2154],[1706,1716],[767,788],[2257,2275],[1607,1629],[1724,1735],[1534,1543],"[account, data, id]",[1475,1484],"[account, data, findAccountByIdAction, id]"]