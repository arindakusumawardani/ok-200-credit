[{"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\index.js":"1","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\reportWebVitals.js":"2","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\App.js":"3","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\routes.js":"4","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\store.js":"5","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\SignIn.js":"6","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\AccountList.js":"7","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\SignUp.js":"8","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\home\\HomeMaster.js":"9","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\TransactionDetail.js":"10","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\DetailCustomer.js":"11","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportList.js":"12","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportDetail.js":"13","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonUse.js":"14","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\loginAction.js":"15","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\index.js":"16","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\index.js":"17","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\index.js":"18","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\index.js":"19","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerForm\\index.js":"20","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\index.js":"21","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\index.js":"22","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\signupAction.js":"23","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\AccountRow.js":"24","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Footer.js":"25","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Menu.js":"26","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Header.js":"27","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\transactionAction.js":"28","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Home.js":"29","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\approvalAction.js":"30","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\customerAction.js":"31","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\Containers\\Container.js":"32","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\DropdownList\\DropdownList.js":"33","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportRow.js":"34","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\reportAction.js":"35","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\home\\card\\CardboxMaster.js":"36","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\navbar\\NavbarMaster.js":"37","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\sidebar\\SideNavBar.js":"38","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\constants\\actions.js":"39","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\Containers\\index.js":"40","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\customerReducer.js":"41","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\transactionReducer.js":"42","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\loginReducer.js":"43","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\signupReducer.js":"44","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\approvalReducer.js":"45","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\reportReducer.js":"46","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\loginSaga.js":"47","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\customerSaga.js":"48","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\transactionSaga.js":"49","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\reportSaga.js":"50","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\approvalSaga.js":"51","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\signupSaga.js":"52","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerForm\\CustomerForm.js":"53","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\ListCustomer.js":"54","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\TransactionForm.js":"55","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionList.js":"56","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Home.js":"57","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\api.js":"58","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\RowCustomer.js":"59","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionRow.js":"60","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Error\\index.js":"61","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Error\\Error.js":"62","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerList\\CustomerRow.js":"63","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js":"64","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\Row.js":"65","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\needSaga.js":"66","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\needReducer.js":"67","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonRow.js":"68","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\needAction.js":"69","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonForm.js":"70"},{"size":569,"mtime":1616467501880,"results":"71","hashOfConfig":"72"},{"size":375,"mtime":1616467501900,"results":"73","hashOfConfig":"72"},{"size":889,"mtime":1616467501853,"results":"74","hashOfConfig":"72"},{"size":3105,"mtime":1616597333577,"results":"75","hashOfConfig":"72"},{"size":349,"mtime":1616467501879,"results":"76","hashOfConfig":"72"},{"size":8096,"mtime":1616558157575,"results":"77","hashOfConfig":"72"},{"size":5630,"mtime":1616595919568,"results":"78","hashOfConfig":"72"},{"size":20038,"mtime":1616555051836,"results":"79","hashOfConfig":"72"},{"size":2478,"mtime":1616467501889,"results":"80","hashOfConfig":"72"},{"size":12440,"mtime":1616595503109,"results":"81","hashOfConfig":"72"},{"size":8860,"mtime":1616467992761,"results":"82","hashOfConfig":"72"},{"size":7692,"mtime":1616596562233,"results":"83","hashOfConfig":"72"},{"size":12228,"mtime":1616467992780,"results":"84","hashOfConfig":"72"},{"size":5337,"mtime":1616596735562,"results":"85","hashOfConfig":"72"},{"size":194,"mtime":1616467501854,"results":"86","hashOfConfig":"72"},{"size":1540,"mtime":1616573815222,"results":"87","hashOfConfig":"72"},{"size":1516,"mtime":1616599845239,"results":"88","hashOfConfig":"72"},{"size":41,"mtime":1616467501897,"results":"89","hashOfConfig":"72"},{"size":38,"mtime":1616467501887,"results":"90","hashOfConfig":"72"},{"size":38,"mtime":1616467501884,"results":"91","hashOfConfig":"72"},{"size":41,"mtime":1616467501899,"results":"92","hashOfConfig":"72"},{"size":1054,"mtime":1616467992755,"results":"93","hashOfConfig":"72"},{"size":741,"mtime":1616467501854,"results":"94","hashOfConfig":"72"},{"size":1244,"mtime":1616596074391,"results":"95","hashOfConfig":"72"},{"size":286,"mtime":1616467501868,"results":"96","hashOfConfig":"72"},{"size":5733,"mtime":1616597333587,"results":"97","hashOfConfig":"72"},{"size":1964,"mtime":1616560471058,"results":"98","hashOfConfig":"72"},{"size":620,"mtime":1616467501855,"results":"99","hashOfConfig":"72"},{"size":2245,"mtime":1616467501882,"results":"100","hashOfConfig":"72"},{"size":459,"mtime":1616573815385,"results":"101","hashOfConfig":"72"},{"size":603,"mtime":1616598186129,"results":"102","hashOfConfig":"72"},{"size":495,"mtime":1616467501866,"results":"103","hashOfConfig":"72"},{"size":822,"mtime":1616467501867,"results":"104","hashOfConfig":"72"},{"size":1684,"mtime":1616467992787,"results":"105","hashOfConfig":"72"},{"size":160,"mtime":1616467501854,"results":"106","hashOfConfig":"72"},{"size":2727,"mtime":1616467501890,"results":"107","hashOfConfig":"72"},{"size":3650,"mtime":1616467501869,"results":"108","hashOfConfig":"72"},{"size":3030,"mtime":1616467501871,"results":"109","hashOfConfig":"72"},{"size":4892,"mtime":1616599845098,"results":"110","hashOfConfig":"72"},{"size":35,"mtime":1616467501866,"results":"111","hashOfConfig":"72"},{"size":3968,"mtime":1616550260293,"results":"112","hashOfConfig":"72"},{"size":3721,"mtime":1616467501876,"results":"113","hashOfConfig":"72"},{"size":898,"mtime":1616467501874,"results":"114","hashOfConfig":"72"},{"size":3604,"mtime":1616467501875,"results":"115","hashOfConfig":"72"},{"size":2743,"mtime":1616573815293,"results":"116","hashOfConfig":"72"},{"size":931,"mtime":1616467501875,"results":"117","hashOfConfig":"72"},{"size":802,"mtime":1616467501877,"results":"118","hashOfConfig":"72"},{"size":2793,"mtime":1616550260220,"results":"119","hashOfConfig":"72"},{"size":3679,"mtime":1616599845184,"results":"120","hashOfConfig":"72"},{"size":712,"mtime":1616560246931,"results":"121","hashOfConfig":"72"},{"size":2163,"mtime":1616573815331,"results":"122","hashOfConfig":"72"},{"size":3052,"mtime":1616560246848,"results":"123","hashOfConfig":"72"},{"size":22414,"mtime":1616576151414,"results":"124","hashOfConfig":"72"},{"size":6657,"mtime":1616490625270,"results":"125","hashOfConfig":"72"},{"size":19482,"mtime":1616593214623,"results":"126","hashOfConfig":"72"},{"size":6149,"mtime":1616596116258,"results":"127","hashOfConfig":"72"},{"size":4083,"mtime":1616467992751,"results":"128","hashOfConfig":"72"},{"size":636,"mtime":1616467501872,"results":"129","hashOfConfig":"72"},{"size":930,"mtime":1616552479273,"results":"130","hashOfConfig":"72"},{"size":1170,"mtime":1616571545784,"results":"131","hashOfConfig":"72"},{"size":33,"mtime":1616467501882,"results":"132","hashOfConfig":"72"},{"size":1618,"mtime":1616519593107,"results":"133","hashOfConfig":"72"},{"size":1274,"mtime":1616467501886,"results":"134","hashOfConfig":"72"},{"size":6231,"mtime":1616597789392,"results":"135","hashOfConfig":"72"},{"size":1027,"mtime":1616552535917,"results":"136","hashOfConfig":"72"},{"size":1552,"mtime":1616560415472,"results":"137","hashOfConfig":"72"},{"size":2065,"mtime":1616565009419,"results":"138","hashOfConfig":"72"},{"size":250,"mtime":1616596735536,"results":"139","hashOfConfig":"72"},{"size":296,"mtime":1616559611069,"results":"140","hashOfConfig":"72"},{"size":6049,"mtime":1616560655467,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"1xf8cdu",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"144"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"144"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"144"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"144"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"144"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"144"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"144"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"144"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"144"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"144"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"144"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"144"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"144"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"144"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"144"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"144"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"144"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"144"},"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\index.js",[],["302","303"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\reportWebVitals.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\App.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\routes.js",["304","305","306"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\store.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\SignIn.js",["307"],"import React, {useEffect, useState} from \"react\";\r\nimport {faKey, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Button} from \"reactstrap\";\r\nimport undraw_Access_account_re_8spm from \"../../assets/images/undraw_Access_account_re_8spm.svg\"\r\nimport \"./login.css\"\r\nimport {useHistory} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginRequestAction} from \"../../actions/loginAction\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nconst SignIn = ({loginData, isLoading, error, dispatchLoginAction}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const [validation, setValidation] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const onSubmit = () => {\r\n        const isValid = validate();\r\n\r\n        if (isValid) {\r\n            const data = {\r\n                username: username,\r\n                password: password\r\n            }\r\n            dispatchLoginAction(data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // jika login sukses\r\n        if (loginData) {\r\n            localStorage.setItem('token', loginData.token)\r\n            localStorage.setItem('roles', loginData.roles)\r\n            localStorage.setItem('username', loginData.username)\r\n            console.log(\"sukses login\", loginData)\r\n\r\n            //pilih role\r\n            if (loginData.roles === \"MASTER\") {\r\n                history.push('/master/home')\r\n            } else if (loginData.roles === \"STAFF\") {\r\n                history.push('/master/home')\r\n            } else if (loginData.roles === \"SUPERVISOR\") {\r\n                history.push('/master/home')\r\n            } else {\r\n                setValidation(\"*Sorry you are not allowed to sign here\")\r\n            }\r\n\r\n            swal(\"Login Success!\", \"\", \"success\");\r\n            // history.push('/master/home')\r\n        }\r\n        // jika login error\r\n        if (error) {\r\n            setValidation(\"*Username or Password invalid!\")\r\n            swal(\"Login Error!\", \"\", \"error\")\r\n        }\r\n\r\n    }, [loginData, error])\r\n\r\n    useEffect(() => {\r\n        setValidation(\"\")\r\n        setUsernameError(\"\")\r\n        setPasswordError(\"\")\r\n    }, [username, password])\r\n\r\n    const validate = () => {\r\n        //var kosong, agar bisa di update isinya\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n\r\n        if (!username) {\r\n            usernameError = \"*please enter username\"\r\n        }\r\n        if (!password) {\r\n            passwordError = \"*please enter password\"\r\n        }\r\n        if (usernameError || passwordError) {\r\n            setUsernameError(usernameError);\r\n            setPasswordError(passwordError);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleUsernameChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setUsername(inputValue)\r\n        setUsernameError(isEmpty)\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const inputValue = e.target.value;\r\n        const isEmpty = inputValue === \"\";\r\n        setPassword(inputValue)\r\n        setPasswordError(isEmpty)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-5 pr-lg-5 mb-md-0\">\r\n                    <div>\r\n                        <img src={undraw_Access_account_re_8spm} alt=\"\"\r\n                             className=\"img-fluid d-none d-md-block\"/>\r\n                             <br/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n                    <h1 style={{color: \"#e42256\", fontSize: \"55px\"}}>Sign In</h1><br/>\r\n                    <form>\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"username\"\r\n                                       type=\"text\"\r\n                                       name=\"username\"\r\n                                       placeholder=\"Username\"\r\n                                       onChange={(e) => handleUsernameChange(e)}\r\n                                       value={username}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>\r\n                                {usernameError}\r\n                            </div>\r\n\r\n                            <div className=\"input-group col-lg-12 mb-4\">\r\n                                <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faKey}/>\r\n                                        </span>\r\n                                </div>\r\n                                <input id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       onChange={(e) => handlePasswordChange(e)}\r\n                                       className=\"form-control bg-white border-left-0 border-md\"/>\r\n                            </div>\r\n                            <div style={{\r\n                                marginLeft: \"20px\",\r\n                                marginTop: \"-25px\",\r\n                                marginBottom: \"20px\",\r\n                                color: \"red\"\r\n                            }}>{passwordError}</div>\r\n\r\n                            <div className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                <div style={{fontSize: 12, color: \"red\"}}>{validation}</div>\r\n                                <Button\r\n                                    style={{background: \"#e42256\"}}\r\n                                    onClick={() => onSubmit()}\r\n                                    block>\r\n                                        <span className=\"font-weight-bold\"\r\n                                              style={{color: \"#ffff\"}}>SIGN IN</span>\r\n                                </Button>\r\n                            </div>\r\n                            {/*<div className=\"text-center w-100\">*/}\r\n                            {/*    <br/>*/}\r\n                            {/*    <p className=\"text-muted font-weight-bold\">*/}\r\n                            {/*        Forgot Password?*/}\r\n                            {/*        <a href=\"#\" className=\"text-primary ml-2\">Click here</a>*/}\r\n                            {/*    </p>*/}\r\n                            {/*    <hr/>*/}\r\n                            {/*</div>*/}\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginData: state.loginReducer.data,\r\n        isLoading: state.loginReducer.isLoading,\r\n        error: state.loginReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchLoginAction: loginRequestAction\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\AccountList.js",["308","309","310"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\SignUp.js",["311","312","313","314","315","316","317","318"],"import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport undraw_Updated_resume_re_q1or from \"../../assets/images/undraw_Updated_resume_re_q1or.svg\"\r\nimport {\r\n    faEnvelope,\r\n    faKey, faServer,\r\n    faUser,\r\n    faUserCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport \"./login.css\"\r\nimport {Input, Label, FormGroup, Button, Container, Form, Col} from \"reactstrap\";\r\nimport {findAccountByIdAction, saveAccountAction} from \"../../actions/signupAction\";\r\nimport {connect} from \"react-redux\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst SignUp = ({saveDispatch, error, saveAccount, users, update, isLoading}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [roles, setRoles] = useState('')\r\n\r\n    const [photo, setPhoto] = useState({\r\n        profilePicture: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        username: \"\",\r\n        fullName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        profilePicture: \"\",\r\n        role: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id !== data.id) {\r\n            findAccountByIdAction(id);\r\n            setData(users)\r\n        }\r\n    }, [users])\r\n\r\n    useEffect(() => {\r\n        if (saveAccount) {\r\n            history.push('/master')\r\n        }\r\n        if (error) {\r\n            swal(\"Register error\", `${error.message}`, \"error\")\r\n        }\r\n    }, [saveAccount, history, error])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto({...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name]: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleRoles = (e) => {\r\n        setData({\r\n            ...data,\r\n            role: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n        saveDispatch(data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/users\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"/dashboard\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-arrow-left\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                <div className=\"row align-items-center\">\r\n\r\n                                                                    <div className=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\r\n                                                                        <img src={undraw_Updated_resume_re_q1or} alt=\"\"\r\n                                                                             className=\"img-fluid mb-3 d-none d-md-block\"/>\r\n                                                                        <h1 style={{\r\n                                                                            color: \"#e42256\",\r\n                                                                            fontSize: \"55px\"\r\n                                                                        }}>Create Account</h1>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"col-md-7 col-lg-6 ml-auto\">\r\n\r\n                                                                        {!isLoading ?\r\n                                                                            <Form onSubmit={handleSubmit}>\r\n                                                                                <div className=\"row\">\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUserCircle}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.fullName || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"fullName\"\r\n                                                                                            placeholder=\"Full Name\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faUser}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.username || \"\"}\r\n                                                                                            type=\"text\"\r\n                                                                                            name=\"username\"\r\n                                                                                            placeholder=\"Username\"\r\n                                                                                            minLength={4}\r\n                                                                                            maxLength={10}\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <div\r\n                                                                                            className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text bg-white px-4 border-md border-right-0\">\r\n                                            <FontAwesomeIcon icon={faEnvelope}/>\r\n                                        </span>\r\n                                                                                        </div>\r\n                                                                                        <input\r\n                                                                                            required\r\n                                                                                            onChange={handleChange}\r\n                                                                                            value={data?.email || \"\"}\r\n                                                                                            type=\"email\"\r\n                                                                                            name=\"email\"\r\n                                                                                            placeholder=\"Email Address\"\r\n                                                                                            className=\"form-control bg-white border-left-0 border-md\"/><br/>\r\n                                                                                    </div>\r\n\r\n                                        {/*                                            <div*/}\r\n                                        {/*                                                className=\"input-group col-lg-12 mb-4\">*/}\r\n                                        {/*                                                <div*/}\r\n                                        {/*                                                    className=\"input-group-prepend\">*/}\r\n                                        {/*<span className=\"input-group-text bg-white px-4 border-md border-right-0\">*/}\r\n                                        {/*    <FontAwesomeIcon icon={faKey}/>*/}\r\n                                        {/*</span>*/}\r\n                                        {/*                                                </div>*/}\r\n                                        {/*                                                <input*/}\r\n                                        {/*                                                    required*/}\r\n                                        {/*                                                    onChange={handleChange}*/}\r\n                                        {/*                                                    value={data?.password}*/}\r\n                                        {/*                                                    type=\"password\"*/}\r\n                                        {/*                                                    name=\"password\"*/}\r\n                                        {/*                                                    placeholder=\"Password\"*/}\r\n                                        {/*                                                    minLength={4}*/}\r\n                                        {/*                                                    maxLength={10}*/}\r\n                                        {/*                                                    className=\"form-control bg-white border-left-0 border-md\"/><br/>*/}\r\n                                        {/*                                            </div>*/}\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n\r\n                                                                                        <DropdownList\r\n                                                                                            data={[\r\n                                                                                                {\r\n                                                                                                    value: \"STAFF\",\r\n                                                                                                    label: \"STAFF\"\r\n                                                                                                },\r\n                                                                                                {\r\n                                                                                                    value: \"SUPERVISOR\",\r\n                                                                                                    label: \"SUPERVISOR\"\r\n                                                                                                }\r\n                                                                                            ]}\r\n                                                                                            value={data?.role}\r\n                                                                                            placeholder=\"Select Role\"\r\n                                                                                            handleDropdown={handleRoles}\r\n                                                                                        />\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"input-group col-lg-12 mb-4\">\r\n                                                                                        <FormGroup>\r\n                                                                                            <Label for=\"profilePicture\"\r\n                                                                                                   sm={4}>Profile\r\n                                                                                                Photo</Label>\r\n                                                                                            <Col sm={12}>\r\n                                                                                                <Input\r\n                                                                                                    type=\"file\"\r\n                                                                                                    name=\"profilePicture\"\r\n                                                                                                    onChange={handlePhoto}\r\n                                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                                            </Col>\r\n                                                                                        </FormGroup>\r\n                                                                                    </div>\r\n\r\n                                                                                    <div\r\n                                                                                        className=\"form-group col-lg-12 mx-auto mb-0\">\r\n                                                                                        <Button\r\n                                                                                            style={{background: \"#e42256\"}}\r\n                                                                                            block>\r\n                                            <span className=\"font-weight-bold\"\r\n                                                  style={{color: \"#ffff\"}}>CREATE ACCOUNT</span>\r\n                                                                                        </Button>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </Form>\r\n                                                                            :\r\n                                                                            <div>Loading...</div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <p>error</p>\r\n                    </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.findAccountByIdReducer.data,\r\n        saveAccount: state.saveAccountReducer.data,\r\n        error: state.saveAccountReducer.error,\r\n        isLoading: state.findAccountByIdReducer.isLoading,\r\n        update: state.updateAccountReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveDispatch: saveAccountAction, findAccountByIdAction\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    mapDispatchToProps)(SignUp);","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\home\\HomeMaster.js",["319","320","321"],"import React, {Component} from \"react\";\r\nimport CardboxMaster from \"./card/CardboxMaster\";\r\nimport {Row, Button, Jumbotron, Col} from \"reactstrap\";\r\nimport './home.css';\r\nimport Image from \"../../assets/images/undraw_Code_thinking_re_gka2.svg\"\r\nimport HeaderMaster from \"../../components/navbar/NavbarMaster\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Sidebar from \"../../components/sidebar/SideNavBar\";\r\nimport BootstrapNavbar from \"../Home\";\r\n\r\nclass HomeMaster extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                        <>\r\n                            {/*<HeaderMaster/>*/}\r\n                            <BootstrapNavbar/>\r\n                            <Sidebar/>\r\n                            <div className=\"jumbotron\">\r\n                                <Jumbotron className=\"jumbotron-fluid\" style={{height: \"30vh\"}}>\r\n                                    <Row style={{marginTop: \"-5%\"}}>\r\n                                        <Col>\r\n                                            <h1 style={{color: \"#e42256\", fontSize: \"5vw\", marginLeft: \"15%\"}}>\r\n                                                Hello, {localStorage.getItem('username')}!</h1>\r\n                                            <p style={{fontSize: \"2vw\", marginLeft: \"15%\"}}>What do you want to do?</p>\r\n                                            <Button href=\"/register\"\r\n                                                    style={{background: \"#e42256\", marginLeft: \"15%\", marginTop: \"5%\"}}><FontAwesomeIcon\r\n                                                icon={faPlus}/> New Account</Button>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <img src={Image} alt=\"image\" className=\"img-fluid float-right\"\r\n                                                 style={{marginRight: \"15%\"}}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Jumbotron>\r\n                            </div>\r\n                            <CardboxMaster/>\r\n                        </>\r\n                        :\r\n                        <div> cannot access</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeMaster;","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\TransactionDetail.js",["322","323","324","325","326","327"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\DetailCustomer.js",["328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350"],"import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {Input, ModalFooter} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {findCustomerByIdAction} from \"../../actions/customerAction\";\r\nimport {Button} from \"reactstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport {Label} from \"reactstrap\";\r\nimport {FormGroup} from \"reactstrap\";\r\nimport {Form} from \"reactstrap\";\r\nimport {ModalBody} from \"reactstrap\";\r\nimport {ModalHeader} from \"reactstrap\";\r\nimport {Modal} from \"reactstrap\";\r\nimport Container from \"../../components/Containers\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport DropdownList from \"../../components/DropdownList/DropdownList\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faHandshake, faIdCard, faMailBulk, faSave, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport man from \"../../assets/images/icon/man.png\"\r\nimport id from \"../../assets/images/icon/id.svg\"\r\n\r\nfunction CustomerDetail({isLoading, customer, findCustomerByIdAction}) {\r\n\r\n    let {id} = useParams()\r\n    const {data, setData} = useState({\r\n        name : \"\"\r\n    })\r\n    useEffect(() => {\r\n        findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    useEffect(() => {\r\n        if (id > 0)\r\n            findCustomerByIdAction(id)\r\n    }, [findCustomerByIdAction])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                // localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                //     <>\r\n                        <div>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Detail Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-header border-0\">\r\n                                                            {/*<h3 className=\"card-title\">Detail Customer</h3>*/}\r\n                                                            <div className=\"card-tools\">\r\n                                                                <a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">\r\n                                                                    <i className=\"fas fa-pencil-alt\" />\r\n                                                                </a>\r\n                                                                <a href=\"/customer\" className=\"btn btn-tool btn-sm\">\r\n                                                                    <i className=\"fas fa-arrow-left\" />\r\n                                                                </a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"card-body table-responsive p-0\">\r\n                                                            <table className=\"table table-striped table-valign-middle\">\r\n                                                                {/*<thead>*/}\r\n                                                                {/*<tr>*/}\r\n                                                                {/*    <th>Key</th>*/}\r\n                                                                {/*    <th>Value</th>*/}\r\n                                                                {/*</tr>*/}\r\n                                                                {/*</thead>*/}\r\n                                                                <tbody style={{textAlign: \"left\"}}>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faUser}/></td>\r\n                                                                    <td>{customer.name}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faMailBulk}/></td>\r\n                                                                    <td>{customer.email}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faIdCard}/></td>\r\n                                                                    <td>{customer.idNumber}</td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td><FontAwesomeIcon icon={faHandshake}/></td>\r\n                                                                    <td>{customer.employeeType}</td>\r\n                                                                </tr>\r\n                                                                {customer.employeeType == \"CONTRACT\"\r\n                                                                &&\r\n                                                                    <>\r\n                                                                        <tr>\r\n                                                                            <td>Contract Length</td>\r\n                                                                            <td>{customer.contractLength}</td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Contract Start</td>\r\n                                                                            <td>{customer.contractStart}</td>\r\n                                                                        </tr>\r\n                                                                    </>\r\n                                                                }\r\n                                                                        <tr>\r\n                                                                            <td>ID Card Photo</td>\r\n                                                                            <td><img src={customer.idPhoto} width={100}/></td>\r\n                                                                        </tr>\r\n                                                                        <tr>\r\n                                                                            <td>Profile Photo</td>\r\n                                                                            <td><img src={customer.profilePhoto} width={100}/></td>\r\n                                                                        </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    // </>\r\n                    // :\r\n                    // <div> cannot access</div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.findCustomerByIdReducer.loading || state.saveCustomerReducer.loading,\r\n        customer: state.findCustomerByIdReducer.data || [],\r\n    }\r\n}\r\n\r\n//findById ambil dari action\r\nconst mapDispatchToProps = {findCustomerByIdAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetail)","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportList.js",["351","352","353","354","355"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportDetail.js",["356","357","358","359","360"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {Row, Col, Table} from \"reactstrap\";\r\n\r\n\r\nfunction ReportDetail() {\r\n\r\n    const {id} = useParams()\r\n    const [data, setData] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                    <>\r\n                        <div>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Detail Report</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        <div className=\"card-tools\">\r\n                                                            <a href=\"#\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-pencil-alt\" />\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <Table>\r\n\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\">DATA CUSTOMER :</Col>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Name</Col>\r\n                                                                <Col sm=\"4\">Eka</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Email</Col>\r\n                                                                <Col sm=\"4\">Eka@gmail.com</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Id Number</Col>\r\n                                                                <Col sm=\"4\">1234568647834</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Address</Col>\r\n                                                                <Col sm=\"4\">Samping Kamar</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Employee Type</Col>\r\n                                                                <Col sm=\"4\">Non</Col>\r\n                                                            </Row>\r\n\r\n                                                            <hr/>\r\n\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\">TRANSACTION :</Col>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Income</Col>\r\n                                                                <Col sm=\"4\">1000</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Outcome</Col>\r\n                                                                <Col sm=\"4\">300</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Loan</Col>\r\n                                                                <Col sm=\"4\">100</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Interest Rate</Col>\r\n                                                                <Col sm=\"4\">2%</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Tenor</Col>\r\n                                                                <Col sm=\"4\">3</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Main Loan</Col>\r\n                                                                <Col sm=\"4\">1,67</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Interest</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Installment Total</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Installment</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Credit ratio</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n\r\n                                                            <hr/>\r\n\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\">APPROVED :</Col>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Finance Criteria</Col>\r\n                                                                <Col sm=\"4\">true</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Employee Criteria</Col>\r\n                                                                <Col sm=\"4\">true</Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Submitted Date</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Col xs=\"6\" sm=\"4\"> </Col>\r\n                                                                <Col xs=\"6\" sm=\"4\">Approved Date</Col>\r\n                                                                <Col sm=\"4\"> </Col>\r\n                                                            </Row>\r\n                                                        </Table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div> cannot access</div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (ReportDetail)\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonUse.js",["361","362","363","364","365","366","367","368","369","370","371"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\loginAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerForm\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\index.js",["372","373","374","375","376"],"import React from 'react'\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Footer from \"./Footer\";\r\nimport Content from \"./Home\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ListCustomer from \"../../pages/customer/listCustomer\";\r\nimport TransactionList from \"../../pages/transaction/transactionList\";\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Menu/>\r\n            {/*<ListCustomer/>*/}\r\n            <Content/>\r\n            {/*<Router>*/}\r\n            {/*    <Switch>*/}\r\n            {/*        <Route path=\"/customer\" component={ListCustomer} exact />*/}\r\n            {/*        /!*<Route path=\"/customer/form\" component={CustomerForm} exact />*!/*/}\r\n            {/*        <Route path=\"/transaction\" component={TransactionList} exact />*/}\r\n            {/*        <Route path=\"/report\" component={Content} exact/>*/}\r\n            {/*    </Switch>*/}\r\n            {/*</Router>*/}\r\n            <Footer/>\r\n        </div>\r\n\r\n    )\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\signupAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\login\\AccountRow.js",["377","378","379","380","381"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Footer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Menu.js",["382","383","384","385","386","387","388","389"],"import React from \"react\";\r\nimport {faCheckDouble, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Menu() {\r\n  return (\r\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" style={{background:\"#e42256\"}}>\r\n        {/* Brand Logo */}\r\n        <a className=\"brand-link\">\r\n          {/*<img*/}\r\n          {/*  src=\"dist/img/AdminLTELogo.png\"*/}\r\n          {/*  alt=\"AdminLTE Logo\"*/}\r\n          {/*  className=\"brand-image img-circle elevation-3\"*/}\r\n          {/*  style={{ opacity: \".8\" }}*/}\r\n          {/*/>*/}\r\n          <span className=\"brand-text font-weight-light\">OK' 200</span>\r\n        </a>\r\n        {/* Sidebar */}\r\n        <div className=\"sidebar\">\r\n          {/* Sidebar user panel (optional) */}\r\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n            <div className=\"image\">\r\n              {/*<img*/}\r\n              {/*  src=\"dist/img/user2-160x160.jpg\"*/}\r\n              {/*  className=\"img-circle elevation-2\"*/}\r\n              {/*  alt=\"User Image\"*/}\r\n              {/*/>*/}\r\n            </div>\r\n            <div className=\"info\">\r\n              <a href=\"#\" className=\"d-block\">\r\n                {localStorage.getItem('username')}\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {/* Sidebar Menu */}\r\n          <nav className=\"mt-2\">\r\n            {localStorage.getItem(\"roles\") == \"MASTER\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/master\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-users\"/>\r\n                  <p>\r\n                    List Account\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/customer/form\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-user-check\"/>\r\n                  <p>\r\n                    Form Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/customer\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    List Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/report\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            }\r\n            {localStorage.getItem(\"roles\") == \"STAFF\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/customer/form\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-user-check\"/>\r\n                  <p>\r\n                    Form Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/staff/customer\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-list-alt\"/>\r\n                  <p>\r\n                    List Customer\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/staff/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/staff/report\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            }\r\n\r\n            {localStorage.getItem(\"roles\") == \"SUPERVISOR\" &&\r\n            <ul\r\n                className=\"nav nav-pills nav-sidebar flex-column\"\r\n                data-widget=\"treeview\"\r\n                role=\"menu\"\r\n                data-accordion=\"false\"\r\n            >\r\n\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/transaction\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-wallet\"/>\r\n                  <p>\r\n                    Transaction\r\n                  </p>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item has-treeview\">\r\n                <a href=\"/report\" className=\"nav-link\">\r\n                  <i className=\"nav-icon fas fa-check-double\"/>\r\n                  <p>\r\n                    Report\r\n                  </p>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            }\r\n\r\n          </nav>\r\n          {/* /.sidebar-menu */}\r\n        </div>\r\n        {/* /.sidebar */}\r\n      </aside>\r\n  );\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Header.js",["390","391","392","393"],"import React from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {faFolderPlus, faHome, faSignOutAlt, faUserPlus, faUsers} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Header() {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleOnclick = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('roles')\r\n    localStorage.removeItem('username')\r\n    // history.push('/')\r\n  }\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\" style={{background:\"#ff8370\"}}>\r\n      {/* Left navbar links */}\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\">\r\n            <i className=\"fas fa-bars\" />\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item d-none d-sm-inline-block\">\r\n          <a href=\"/master/home\" className=\"nav-link\">\r\n            <FontAwesomeIcon icon={faHome}/>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* Right navbar links */}\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        {localStorage.getItem(\"roles\") == \"MASTER\" &&\r\n        <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/need\">\r\n                  <FontAwesomeIcon icon={faFolderPlus}/>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/register\">\r\n                  <FontAwesomeIcon icon={faUserPlus}/>\r\n                </a>\r\n              </li>\r\n        </ul>\r\n        }\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className=\"nav-link\"\r\n            onClick={handleOnclick}\r\n            href=\"/\"\r\n          >\r\n            <FontAwesomeIcon icon={faSignOutAlt}/>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\transactionAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Home.js",["394","395"],"import React, {useState} from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { Navbar,Nav } from 'react-bootstrap'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faCheckDouble,\r\n    faHome,\r\n    faMoneyCheck,\r\n    faSignOutAlt,\r\n    faUsers\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Header = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const handleOnclick = () => {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('roles')\r\n        localStorage.removeItem('username')\r\n    }\r\n\r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Router>\r\n                            <Navbar style={{background:\"#e42256\"}} expand=\"lg\" sticky=\"top\">\r\n                                <Navbar.Brand style={{color:\"#FFffff\"}}>OK'200</Navbar.Brand>\r\n                                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className=\"mr-auto\">\r\n                                        <Nav.Link href=\"/master/home\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faHome}/></Nav.Link>\r\n                                    </Nav>\r\n                                    <Nav.Link href=\"/customer\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faUsers}/></Nav.Link>\r\n                                    <Nav.Link href=\"/master/transaction\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faMoneyCheck}/></Nav.Link>\r\n                                    <Nav.Link href=\"/master/report\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faCheckDouble}/></Nav.Link>\r\n                                    <Nav.Link href=\"/\" style={{color:\"#FFffff\"}}><FontAwesomeIcon icon={faSignOutAlt}/></Nav.Link>\r\n                                </Navbar.Collapse>\r\n                            </Navbar>\r\n                            <br />\r\n                        </Router>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Header;","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\approvalAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\customerAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\Containers\\Container.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\DropdownList\\DropdownList.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\report\\ReportRow.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\reportAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\home\\card\\CardboxMaster.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\navbar\\NavbarMaster.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\sidebar\\SideNavBar.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\constants\\actions.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\Containers\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\customerReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\transactionReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\loginReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\signupReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\approvalReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\reportReducer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\loginSaga.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\customerSaga.js",["396"],"import { put, takeLatest } from \"redux-saga/effects\"\r\nimport {\r\n  FIND_ALL_CUSTOMER_FAILURE,\r\n  FIND_ALL_CUSTOMER_SUCCESS,\r\n  FIND_ALL_CUSTOMER,\r\n\r\n  SAVE_CUSTOMER,\r\n  SAVE_CUSTOMER_FAILURE,\r\n  SAVE_CUSTOMER_SUCCESS,\r\n\r\n  FIND_CUSTOMER_BY_ID,\r\n  FIND_CUSTOMER_BY_ID_FAILURE,\r\n  FIND_CUSTOMER_BY_ID_SUCCESS,\r\n\r\n  UPDATE_CUSTOMER, FIND_CUSTOMER_BY_SUBMITTER_SUCCESS, FIND_CUSTOMER_BY_SUBMITTER_FAILURE\r\n\r\n} from \"../constants/actions\"\r\nimport axios from \"../api\"\r\n\r\nfunction* findAllCustomerSaga() {\r\n  let result = yield axios.get(\"/customer\")\r\n    .then(data => {\r\n      return ({\r\n        type: FIND_ALL_CUSTOMER_SUCCESS,\r\n        data: data\r\n      })\r\n    })\r\n    .catch(err => {\r\n      return ({\r\n        type: FIND_ALL_CUSTOMER_FAILURE,\r\n        error: err\r\n      })\r\n    })\r\n  yield put(result)\r\n}\r\n\r\nfunction* saveCustomerSaga(action) {\r\n  let model = action.model;\r\n  let method = 'POST', url = '/customer';\r\n  if (model.id) {\r\n    method = \"PATCH\";\r\n    url += `/${model.id}`\r\n  }\r\n\r\n  let result = yield axios({\r\n    url: url,\r\n    method: method,\r\n    data: model\r\n  })\r\n    .then( data => {\r\n      return {\r\n        type: SAVE_CUSTOMER_SUCCESS,\r\n        data: data\r\n      }\r\n    })\r\n    .catch(e => {\r\n      return {\r\n        type: SAVE_CUSTOMER_FAILURE,\r\n        error: e\r\n      }\r\n    })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findCustomerByIdSaga(action) {\r\n  let result = yield axios.get(`/customer/${action.id}`)\r\n      .then(data => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_ID_SUCCESS,\r\n          data: data\r\n        })\r\n      })\r\n      .catch(e => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_ID_FAILURE,\r\n          error: e\r\n        })\r\n      })\r\n  yield put(result)\r\n}\r\n\r\nfunction* findCustomerByStaffSaga(action) {\r\n  let result = yield axios.get('/customer/staff')\r\n      .then(data => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_SUBMITTER_SUCCESS,\r\n          data: data\r\n        })\r\n      })\r\n      .catch(e => {\r\n        return ({\r\n          type: FIND_CUSTOMER_BY_SUBMITTER_FAILURE,\r\n          error: e\r\n        })\r\n      })\r\n  yield put(result)\r\n}\r\n\r\nfunction* updateCustomerSaga(action) {\r\n  let result = false\r\n\r\n  yield put({\r\n    type: UPDATE_CUSTOMER,\r\n    data: result\r\n  })\r\n}\r\n\r\n\r\nexport function* watchFindAllCustomer() {\r\n  yield takeLatest(FIND_ALL_CUSTOMER, findAllCustomerSaga)\r\n}\r\n\r\nexport function* watchSaveCustomer() {\r\n  yield takeLatest(SAVE_CUSTOMER, saveCustomerSaga)\r\n}\r\n\r\nexport function* watchFindCustomerById() {\r\n  yield takeLatest(FIND_CUSTOMER_BY_ID, findCustomerByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateCustomer() {\r\n  yield takeLatest(UPDATE_CUSTOMER, updateCustomerSaga)\r\n}\r\n\r\nexport function* watchFindAllCustomerBySubmitter() {\r\n  yield takeLatest(FIND_ALL_CUSTOMER, findCustomerByStaffSaga)\r\n}\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\transactionSaga.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\reportSaga.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\approvalSaga.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\signupSaga.js",["397"],"import axios from \"../api\";\r\nimport {\r\n    FIND_ACCOUNT_BY_ID,\r\n    FIND_ALL_ACCOUNT,\r\n    FIND_ALL_ACCOUNT_FAILURE,\r\n    FIND_ALL_ACCOUNT_SUCCESS, REMOVE_ACCOUNT_BY_ID, REMOVE_ACCOUNT_BY_ID_FAILURE, REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n    SAVE_ACCOUNT,\r\n    SAVE_ACCOUNT_FAILURE,\r\n    SAVE_ACCOUNT_SUCCESS, UPDATE_ACCOUNT, UPDATE_CUSTOMER\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\n\r\nfunction* findAllAccountSaga() {\r\n    let result = yield axios.get(\"/master\")\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveAccountSaga(action) {\r\n    let model = action.model;\r\n    let method = 'POST', url = '/master/signup';\r\n    if (model.id) {\r\n        method = \"PATCH\";\r\n        url += `/${model.id}`\r\n    }\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_ACCOUNT_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_ACCOUNT_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* findAccountByIdSaga(action) {\r\n    let result = yield axios.get(`/users/${action.id}`)\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(e => {\r\n            return ({\r\n                type: FIND_ALL_ACCOUNT_FAILURE,\r\n                error: e\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nfunction* updateAccountSaga(action) {\r\n    let result = false\r\n\r\n    yield put({\r\n        type: UPDATE_ACCOUNT,\r\n        data: result\r\n    })\r\n}\r\n\r\nfunction* removeAccountById(action) {\r\n    let result = yield axios.delete(`/users/${action.id}`)\r\n        .then(data => {\r\n            console.log(\"ini action\", data)\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: REMOVE_ACCOUNT_BY_ID_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\nexport function* watchFindAllAccount() {\r\n    yield takeLatest(FIND_ALL_ACCOUNT, findAllAccountSaga)\r\n}\r\n\r\nexport function* watchSaveAccount() {\r\n    yield takeLatest(SAVE_ACCOUNT, saveAccountSaga)\r\n}\r\n\r\nexport function* watchFindByIdAccount() {\r\n    yield takeLatest(FIND_ACCOUNT_BY_ID, findAccountByIdSaga)\r\n}\r\n\r\nexport function* watchUpdateAccountById() {\r\n    yield takeLatest(UPDATE_ACCOUNT, updateAccountSaga)\r\n}\r\n\r\nexport function* watchRemoveById() {\r\n    yield takeLatest(REMOVE_ACCOUNT_BY_ID, removeAccountById)\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerForm\\CustomerForm.js",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {findCustomerByIdAction, saveCustomerAction} from \"../../../actions/customerAction\"\r\nimport { Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport { Button, Form, FormGroup, Input, Label, Col} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport SignIn from \"../../login/SignIn\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst CustomerForm = ({error, isLoading, saveCustomer, saveCustomerAction, customer, findCustomerByIdAction}) => {\r\n    const {id} = useParams()\r\n    const [roles, setRoles] = useState(localStorage.getItem(\"roles\"))\r\n    const [redirect] = useState(false)\r\n    const [photo, setPhoto] = useState({\r\n        profilePhoto: {},\r\n        idPhoto: {}\r\n    })\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        idNumber: 0,\r\n        address: \"\",\r\n        employeeType: \"\",\r\n        contractLength: \"\",\r\n        contractStart: \"\",\r\n        idPhoto: \"\",\r\n        profilePhoto: \"\"\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (id !== data.id) {\r\n            findCustomerByIdAction(id);\r\n            setData(customer)\r\n            // console.log(\"ini useffect\", customer)\r\n        }\r\n    }, [customer])\r\n\r\n\r\n    useEffect(() => {\r\n        if (saveCustomer) {\r\n            history.push('/customer')\r\n        }\r\n    }, [saveCustomer, history])\r\n\r\n    const handlePhoto = async (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.files[0]\r\n        setPhoto({...photo, [name]: value})\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"file\", value)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    [name]: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const uploadIdPhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.idPhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    idPhoto: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    const uploadProfilePhoto = async () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", photo.profilePhoto)\r\n        formData.append(\"upload_preset\", \"ve2u0qv8\")\r\n\r\n        const response = await fetch(\"https://api.cloudinary.com/v1_1/nielnaga/image/upload\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            body: formData // body data type must match \"Content-Type\" header\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res.url)\r\n                setData({\r\n                    ...data,\r\n                    profilePhoto: res.url\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleNumber = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        if(name = \"idNumber\") {\r\n\r\n            if(value.length <= 15)\r\n                setData({...data, [name]: value})\r\n\r\n        } else {\r\n            setData({...data, [name]: value})\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleEmployee = (e) => {\r\n        setData({...data, employeeType: e})\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveCustomerAction(data)\r\n\r\n        // swal(\"Save Success!\", \"\", \"success\");\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/customer\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                localStorage.getItem(\"roles\") == \"MASTER\" || localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                    <>\r\n                        <div>\r\n                            <Container error={error}/>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">Form Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n                                                        <div className=\"col-md-12\">\r\n                                                            <div className=\"form form-container\">\r\n                                                                {!isLoading ?\r\n                                                                    <Form onSubmit={handleSubmit}>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"name\" sm={3} style={{textAlign:\"left\"}}>Customer's\r\n                                                                                Name</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.name || ''}\r\n                                                                                    type=\"text\"\r\n                                                                                    name=\"name\"\r\n                                                                                    placeholder=\"input name\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"email\" sm={3} style={{textAlign:\"left\"}}>Email</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.email || ''}\r\n                                                                                    type=\"email\"\r\n                                                                                    name=\"email\"\r\n                                                                                    placeholder=\"input email\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"idNumber\" sm={3} style={{textAlign:\"left\"}}>ID\r\n                                                                                Number</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleNumber}\r\n                                                                                    value={data?.idNumber || ''}\r\n                                                                                    type=\"number\"\r\n                                                                                    name=\"idNumber\"\r\n                                                                                    maxLength={'15'}\r\n                                                                                    minLength={'15'}\r\n                                                                                    placeholder=\"input ID number\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"exampleText\"\r\n                                                                                   sm={3} style={{textAlign:\"left\"}}>Address</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    onChange={handleChange}\r\n                                                                                    value={data?.address || ''}\r\n                                                                                    type=\"textarea\"\r\n                                                                                    name=\"address\"\r\n                                                                                    placeholder=\"address\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label htmlFor=\"select\" sm={3} style={{textAlign:\"left\"}}>Type of\r\n                                                                                customer</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <DropdownList\r\n                                                                                    data={[\r\n                                                                                        {value: \"NON\", label: \"NON\"},\r\n                                                                                        {\r\n                                                                                            value: \"REGULAR\",\r\n                                                                                            label: \"REGULAR\"\r\n                                                                                        },\r\n                                                                                        {\r\n                                                                                            value: \"CONTRACT\",\r\n                                                                                            label: \"CONTRACT\"\r\n                                                                                        }\r\n                                                                                    ]}\r\n                                                                                    value={data?.employeeType}\r\n                                                                                    placeholder=\"Select Employee Type\"\r\n                                                                                    handleDropdown={handleEmployee}\r\n                                                                                />\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                        {data.employeeType == \"CONTRACT\"\r\n                                                                        &&\r\n\r\n                                                                        <div>\r\n                                                                            <FormGroup row>\r\n                                                                                <Label for=\"contractStart\" sm={3} style={{textAlign:\"left\"}}>Contract\r\n                                                                                    Start</Label>\r\n                                                                                <Col sm={9}>\r\n                                                                                    <Input\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.contractStart || ''}\r\n                                                                                        type=\"date\"\r\n                                                                                        name=\"contractStart\"\r\n                                                                                        id=\"contractStart\"\r\n                                                                                        placeholder=\"contract start\"/>\r\n                                                                                </Col>\r\n                                                                            </FormGroup>\r\n                                                                            <FormGroup row>\r\n                                                                                <Label for=\"contractLength\" sm={3} style={{textAlign:\"left\"}}>Contract\r\n                                                                                    Length</Label>\r\n                                                                                <Col sm={9}>\r\n                                                                                    <Input\r\n                                                                                        onChange={handleChange}\r\n                                                                                        value={data?.contractLength || ''}\r\n                                                                                        type=\"number\" min=\"1\"\r\n                                                                                        name=\"contractLength\"\r\n                                                                                        id=\"contractLength\"\r\n                                                                                        placeholder=\"contract length\"/>\r\n                                                                                </Col>\r\n                                                                            </FormGroup>\r\n                                                                        </div>\r\n                                                                        }\r\n\r\n                                                                        <FormGroup row>\r\n                                                                            <Label for=\"idPhoto\" sm={3} style={{textAlign:\"left\"}}>ID Card</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    type=\"file\"\r\n                                                                                    name=\"idPhoto\"\r\n                                                                                    onChange={handlePhoto}\r\n                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                        <FormGroup row>\r\n                                                                            <Label for=\"profilePhoto\" sm={3} style={{textAlign:\"left\"}}>Profile\r\n                                                                                Photo</Label>\r\n                                                                            <Col sm={9}>\r\n                                                                                <Input\r\n                                                                                    required\r\n                                                                                    type=\"file\"\r\n                                                                                    name=\"profilePhoto\"\r\n                                                                                    onChange={handlePhoto}\r\n                                                                                    accept=\"image/jpeg, image/png\"/>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n\r\n                                                                        <FormGroup check row>\r\n                                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                                    Submit\r\n                                                                                </Button> {' '}\r\n                                                                                <Button href=\"/customer\"\r\n                                                                                        style={{background: \"#e42256\"}}>\r\n                                                                                    <FontAwesomeIcon\r\n                                                                                        icon={faArrowLeft}/>\r\n                                                                                    Cancel\r\n                                                                                </Button>\r\n                                                                            </Col>\r\n                                                                        </FormGroup>\r\n                                                                    </Form> :\r\n                                                                    <div>Loading...</div>\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    // </>\r\n                    :\r\n                    <p>cannot access</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // call reducer\r\n        error: state.findCustomerByIdReducer.error || state.saveCustomerReducer.error,\r\n        customer: state.findCustomerByIdReducer.data,\r\n        isLoading: state.findCustomerByIdReducer.isLoading,\r\n        update: state.updateCustomerReducer,\r\n        saveCustomer: state.saveCustomerReducer.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveCustomerAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerForm)\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\ListCustomer.js",["413"],"import React, {useEffect} from 'react'\r\nimport {findAllCustomerAction} from '../../../actions/customerAction'\r\nimport {connect} from \"react-redux\"\r\nimport Containers from \"../../../components/Containers/Container\";\r\nimport SignIn from \"../../login/SignIn\";\r\nimport RowCustomer from \"./RowCustomer\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport TableScrollbar from 'react-table-scrollbar';\r\n\r\nfunction CustomerList({\r\n                          error,\r\n                          isLoading,\r\n                          customers,\r\n                          findAllCustomerAction\r\n                      }) {\r\n\r\n    const onReload = () => {\r\n        findAllCustomerAction();\r\n    };\r\n\r\n    useEffect(onReload, [findAllCustomerAction])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                // localStorage.getItem(\"roles\") == \"MASTER\" ?\r\n                //     <>\r\n                        <Containers error={error}>\r\n                            <Header/>\r\n                            <Menu/>\r\n                            <div className=\"content-wrapper\">\r\n                                <div className=\"content-header\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row mb-2\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h1 className=\"m-0 text-dark\">List Customer</h1>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"content\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header border-0\">\r\n                                                        {/*<h3 className=\"card-title\">List Customer</h3>*/}\r\n                                                        <div className=\"card-tools\">\r\n                                                            {/*<a href=\"#\" className=\"btn btn-tool btn-sm\">*/}\r\n                                                            {/*    <i className=\"fas fa-download\"/>*/}\r\n                                                            {/*</a>*/}\r\n                                                            <a href=\"/customer/form\" className=\"btn btn-tool btn-sm\">\r\n                                                                <i className=\"fas fa-plus-circle\"/>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"card-body table-responsive p-0\">\r\n\r\n                                                        <TableScrollbar rows={10}>\r\n                                                        <table className=\"table table-striped table-valign-middle\">\r\n                                                            <thead style={{textAlign: \"left\", background:\"#FCE051\"}}>\r\n                                                            <tr>\r\n                                                                <th>Number</th>\r\n                                                                {/*<th>Submitter</th>*/}\r\n                                                                <th>Customer Name</th>\r\n                                                                <th>ID Card</th>\r\n                                                                <th>Employee Type</th>\r\n                                                                <th>Submitter</th>\r\n                                                                <th>Action</th>\r\n                                                            </tr>\r\n                                                            </thead>\r\n                                                            <tbody style={{textAlign: \"left\"}}>\r\n                                                            {\r\n                                                                !isLoading ?\r\n                                                                    customers?.list?.map((e, i) => {\r\n\r\n                                                                        return (\r\n                                                                            <RowCustomer key={i} data={e}\r\n                                                                                         number={(customers.page * customers.size) + 1 + i}/>\r\n                                                                        )\r\n                                                                    })\r\n                                                                    :\r\n                                                                    <tr>\r\n                                                                        <td colSpan=\"3\"> Loading..</td>\r\n                                                                    </tr>\r\n                                                            }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        </TableScrollbar>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/*<Footer/>*/}\r\n                        </Containers>\r\n                    // </>\r\n                    // :\r\n                    // <div>\r\n                    //     <SignIn/>\r\n                    // </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.findAllCustomerReducer.error,\r\n        customers: state.findAllCustomerReducer.data || [],\r\n        isLoading: state.findAllCustomerReducer.isLoading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    findAllCustomerAction\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionForm\\TransactionForm.js",["414","415","416","417","418","419","420","421","422","423"],"import {InputGroupText, InputGroup, FormGroup, Form, Input, Label, Button, Col} from \"reactstrap\";\r\nimport Container from \"../../../components/Containers/Container\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {saveTransactionAction} from \"../../../actions/transactionAction\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {findCustomerByIdAction} from \"../../../actions/customerAction\";\r\nimport DropdownList from \"../../../components/DropdownList/DropdownList\";\r\nimport Header from \"../../../components/dashboard/Header\";\r\nimport Menu from \"../../../components/dashboard/Menu\";\r\nimport NumberFormat from 'react-number-format';\r\nimport {findAllNeedAction} from \"../../../actions/needAction\";\r\nimport {findAllNeedReducer} from \"../../../configs/reducers/needReducer\";\r\nimport ReasonRow from \"../../reasonUse/ReasonRow\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst TransactionForm = ({savedTransaction, isLoading, error, saveTransactionAction, customer, findCustomerByIdAction, needs, findAllNeedAction}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n    const [data, setData] = useState({\r\n        customer: \"\"\r\n    })\r\n    const [currency, setCurrency] = useState({})\r\n\r\n    const history = useHistory()\r\n\r\n    const onReload = () => {\r\n        findAllNeedAction();\r\n    }\r\n\r\n    useEffect(onReload, [findAllNeedAction])\r\n\r\n    const handleCustomer = () => {\r\n        setData({\r\n            ...data,\r\n            customer: customer.id\r\n        })\r\n    }\r\n\r\n    const handleNeed = (e) => {\r\n        setData({...data, needType: e.id})\r\n    }\r\n\r\n    useEffect(() => {\r\n        findAllNeedAction()\r\n    }, [findAllNeedAction])\r\n\r\n    useEffect(() => {\r\n        if (id !== data.customer) {\r\n            findCustomerByIdAction(id);\r\n            setData({\r\n                ...data,\r\n                customer: id\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // console.log(`CUSTOMER `, customer, `DATA `, data)\r\n        console.log(data)\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        if (savedTransaction) {\r\n            history.push('/transaction')\r\n        }\r\n    }, [savedTransaction, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n    const handleCurrency = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        if(parseInt(value) > 0) {\r\n            setCurrency({...currency, [name]: value})\r\n            setData({...data, [name]: value.split(\",\").join(\"\")})\r\n        } else {\r\n            swal(\"must be positive vibes!\", \"\", \"error\");\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveTransactionAction(data)\r\n        // console.log(data)\r\n    }\r\n    if (redirect === true) {\r\n        return <Redirect to='/transaction'/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            localStorage.getItem(\"roles\") == \"MASTER\" || localStorage.getItem(\"roles\") == \"STAFF\" ?\r\n                <>\r\n\r\n            <Container error={error}/>\r\n            <Header/>\r\n            <Menu/>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0 text-dark\">Form Transaction</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body table-responsive p-0\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form form-container\">\r\n                                                {!isLoading ? needs &&\r\n                                                    <Form onSubmit={handleSubmit}>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"income\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Income</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n                                                                    {/*<Input >*/}\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"income\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.income || ''}\r\n                                                                        placeholder=\"income\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    {/*</Input>*/}\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"outcome\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Outcome</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"outcome\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.outcome || ''}\r\n                                                                        placeholder=\"outcome\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"loan\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Loan</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <InputGroupText>Rp</InputGroupText>\r\n\r\n                                                                    <NumberFormat\r\n                                                                        required\r\n                                                                        name=\"loan\"\r\n                                                                        min=\"0\"\r\n                                                                        id=\"tanpa-rupiah\"\r\n                                                                        onChange={handleCurrency}\r\n                                                                        value={data?.loan || ''}\r\n                                                                        placeholder=\"outcome\"\r\n                                                                        thousandSeparator={true}/>\r\n                                                                    <InputGroupText>.00</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label htmlFor=\"tenor\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Tenor</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <Input required\r\n                                                                       onChange={handleChange}\r\n                                                                       type=\"number\" min=\"1\" max=\"6\"\r\n                                                                       value={data?.tenor || ''}\r\n                                                                       name=\"tenor\"\r\n                                                                       placeholder=\"tenor\"/>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"interestRate\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Interest Rate</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <InputGroup>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        name=\"interestRate\"\r\n                                                                        value={data?.interestRate || ''}\r\n                                                                        placeholder=\"interest rate\" min={0} max={100}\r\n                                                                        type=\"number\" min=\"0\" step=\"1\"/>\r\n                                                                    <InputGroupText>%</InputGroupText>\r\n                                                                </InputGroup>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        {/*{!isLoading ?*/}\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"select\" sm={2} style={{textAlign: \"left\"}}>Need\r\n                                                                Type</Label>\r\n                                                            <Col sm={10} >\r\n                                                                    <select onChange={e => setData({...data, needType: e.target.value})}>\r\n                                                                        <option selected disabled hidden>Choose here</option>\r\n                                                                        {needs?.list?.map((e, i) => (\r\n                                                                        <option key={i} value={e.id} data={e} selected={e.id == data?.id || false}>{e.type}</option>\r\n                                                                        ))}\r\n                                                                    </select>\r\n\r\n\r\n                                                                {/*<select name=\"need\" onChange={handleChange}>*/}\r\n                                                                {/*    */}\r\n                                                                {/*    {needs?.list?.map((e, i) => (*/}\r\n                                                                {/*        <option key={i} value={e.id}*/}\r\n                                                                {/*                selected={e.id == data?.id || false}>{e.type}</option>*/}\r\n                                                                {/*    ))}*/}\r\n                                                                {/*</select>*/}\r\n\r\n                                                                {/*<DropdownList*/}\r\n                                                                {/*    data={[*/}\r\n                                                                {/*        needs?.list?.map(e => {*/}\r\n                                                                {/*            return (*/}\r\n                                                                {/*                {value: e.id, label: e.type}*/}\r\n                                                                {/*            )*/}\r\n                                                                {/*        })*/}\r\n                                                                {/*        // {value: \"CAPITAL\", label: \"CAPITAL\"},*/}\r\n                                                                {/*        // {*/}\r\n                                                                {/*        //     value: \"CONSUMPTIVE\",*/}\r\n                                                                {/*        //     label: \"CONSUMPTIVE\"*/}\r\n                                                                {/*        // },*/}\r\n                                                                {/*        // {value: \"INVESTMENT\", label: \"INVESTMENT\"}*/}\r\n                                                                {/*    ]}*/}\r\n                                                                {/*    value={data?.needType}*/}\r\n                                                                {/*    placeholder=\"Select Need Type\"*/}\r\n                                                                {/*    handleDropdown={handleNeed}*/}\r\n                                                                {/*/>*/}\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        {/*:*/}\r\n                                                        {/*    <p>Loading...</p>*/}\r\n\r\n                                                        <FormGroup row>\r\n                                                            <Label for=\"notes\" sm={2}\r\n                                                                   style={{textAlign: \"left\"}}>Note</Label>\r\n                                                            <Col sm={10}>\r\n                                                                <Input\r\n                                                                    required\r\n                                                                    onChange={handleChange}\r\n                                                                    value={data?.notes || ''}\r\n                                                                    type=\"text\"\r\n                                                                    name=\"notes\"\r\n                                                                    id=\"notes\"\r\n                                                                    placeholder=\"input note\"/>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup check row>\r\n                                                            <Col sm={{size: 10, offset: 2}}>\r\n                                                                <Button style={{background: \"#e42256\"}}>\r\n                                                                    <FontAwesomeIcon icon={faSave}/>\r\n                                                                    Submit\r\n                                                                </Button> {' '}\r\n                                                                <Button href=\"/customer\"\r\n                                                                        style={{background: \"#e42256\"}}>\r\n                                                                    <FontAwesomeIcon icon={faArrowLeft}/>\r\n                                                                    Cancel\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </FormGroup>\r\n                                                    </Form> :\r\n                                                    <div>Loading...</div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        :\r\n        <p>\r\n            cannot access\r\n        </p>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        customer: state.findCustomerByIdReducer.data,\r\n        savedTransaction: state.saveTransactionReducer.data,\r\n        isLoading: state.saveTransactionReducer.isLoading,\r\n        error: state.saveTransactionReducer.error,\r\n        needs: state.findAllNeedReducer.data\r\n    }\r\n    console.log(\"mapStateToProps\", findAllNeedReducer.data)\r\n}\r\n\r\nconst mapDispatchToProps = {findCustomerByIdAction, saveTransactionAction, findAllNeedAction}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionList.js",["424","425","426","427","428","429"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\components\\dashboard\\Home.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\api.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomer\\RowCustomer.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\transaction\\transactionList\\TransactionRow.js",["430","431","432","433"],"import React from 'react'\r\nimport {Button} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCheckCircle, faInfoCircle, faPencilAlt, faQuestionCircle, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TransactionRow = ({data, onUpdate, number}) => {\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n\r\n        <tr>\r\n            <td>{number}</td>\r\n            <td>{data.transaction.customer.name}</td>\r\n            <td>{data.transaction.customer.employeeType} </td>\r\n            <td>{data.transaction.loan}</td>\r\n            <td>{data.transaction.tenor}</td>\r\n            <td>{data.transaction.interestRate}</td>\r\n            {/*{data.approve == true &&*/}\r\n            <td>\r\n                {/*<a href={`/transaction/${data.id}/detail`} className=\"text-muted\">*/}\r\n                {/*    <i className=\"fas fa-info-circle\" />*/}\r\n                {/*</a>{' '}*/}\r\n                <Button href={`/transaction/${data.id}`} style={{background:\"#e42256\"}}>\r\n                    <FontAwesomeIcon icon={faQuestionCircle}/>\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TransactionRow;\r\n\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Error\\index.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\Error\\Error.js",["434","435"],"import React from 'react'\r\nimport {Button, Col, Container, Row} from \"reactstrap\";\r\nimport Containers from \"../../components/Containers/Container\";\r\nimport undraw_Notify from \"../../assets/images/undraw_Notify.svg\";\r\n\r\nconst Error = () => {\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                <Container fluid style={{width: \"100%\"}}>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <div className=\"d-flex justify-content-center mb-3\">\r\n                                    <h1 style={{\r\n                                        fontSize: \"3vw\",\r\n                                        color: \"#e42556\",\r\n                                        margin: \"3%\",\r\n                                        textAlign: \"center\"\r\n                                    }}>You Can't Access This Page</h1>\r\n                                </div>\r\n                                <hr/>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Row>\r\n                            <div>\r\n                                <div>\r\n                                    <img src={undraw_Notify} alt=\"\"\r\n                                         className=\"img-fluid d-none d-md-block\"/>\r\n                                    <br/>\r\n\r\n                                </div>\r\n                            </div>\r\n                    </Row>\r\n\r\n\r\n                </Container>\r\n                }\r\n                </div>\r\n                )\r\n                }\r\n\r\n                export default Error\r\n","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\customerList\\CustomerRow.js",["436","437","438","439"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\ListCustomerByStaff.js",["440"],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\customer\\listCustomerByStaff\\Row.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\sagas\\needSaga.js",["441","442","443","444","445"],"import {\r\n    FIND_NEEDTYPE_BY_ID,\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS, REMOVE_NEEDTYPE_BY_ID, REMOVE_NEEDTYPE_BY_ID_FAILURE, REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS, UPDATE_NEEDTYPE\r\n} from \"../constants/actions\";\r\nimport {put, takeLatest} from \"redux-saga/effects\"\r\nimport axios from \"axios\";\r\n\r\nfunction* findAllNeedSaga() {\r\n    let result = yield axios.get(\"/need\")\r\n        .then(data => {\r\n            return ({\r\n                type: FIND_ALL_NEEDTYPE_SUCCESS,\r\n                data: data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            return ({\r\n                type: FIND_ALL_NEEDTYPE_FAILURE,\r\n                error: err\r\n            })\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nfunction* saveNeedSaga(action) {\r\n    let model = action.model;\r\n    let method = 'POST', url = '/need';\r\n\r\n    let result = yield axios({\r\n        url: url,\r\n        method: method,\r\n        data: model\r\n    })\r\n        .then(data => {\r\n            return {\r\n                type: SAVE_NEEDTYPE_SUCCESS,\r\n                data: data\r\n            }\r\n        })\r\n        .catch(e => {\r\n            return {\r\n                type: SAVE_NEEDTYPE_FAILURE,\r\n                error: e\r\n            }\r\n        })\r\n    yield put(result)\r\n}\r\n\r\n\r\nexport function* watchFindAllNeed() {\r\n    yield takeLatest(FIND_ALL_NEEDTYPE, findAllNeedSaga)\r\n}\r\n\r\nexport function* watchSaveNeed() {\r\n    yield takeLatest(SAVE_NEEDTYPE, saveNeedSaga)\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\configs\\reducers\\needReducer.js",["446","447","448","449","450","451","452"],"import {\r\n    FIND_NEEDTYPE_BY_ID, FIND_NEEDTYPE_BY_ID_FAILURE, FIND_NEEDTYPE_BY_ID_SUCCESS,\r\n    FIND_ALL_NEEDTYPE,\r\n    FIND_ALL_NEEDTYPE_FAILURE,\r\n    FIND_ALL_NEEDTYPE_SUCCESS, REMOVE_NEEDTYPE_BY_ID, REMOVE_NEEDTYPE_BY_ID_SUCCESS,\r\n    SAVE_NEEDTYPE,\r\n    SAVE_NEEDTYPE_FAILURE,\r\n    SAVE_NEEDTYPE_SUCCESS, UPDATE_NEEDTYPE, UPDATE_NEEDTYPE_SUCCESS\r\n} from \"../constants/actions\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport const findAllNeedReducer = (state = initialState, action) => {\r\n    // console.log(\"ini action reducer\", action.data)\r\n    switch (action.type) {\r\n        case FIND_ALL_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case FIND_ALL_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case FIND_ALL_NEEDTYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}\r\n\r\nexport const saveNeedReducer = (state = {...initialState}, action) => {\r\n    switch (action.type) {\r\n        case SAVE_NEEDTYPE:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: true\r\n            }\r\n        case SAVE_NEEDTYPE_SUCCESS:\r\n            return {\r\n                data: action.data,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n        case SAVE_NEEDTYPE_FAILURE:\r\n            return {\r\n                data: null,\r\n                isLoading: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                error: null\r\n            };\r\n    }\r\n}","D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonRow.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\actions\\needAction.js",[],"D:\\PROJECT GIT HUB\\final-project\\project-credit-scoring\\src\\pages\\reasonUse\\ReasonForm.js",["453"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport { Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport { Button, Form, FormGroup, Input, Label, Col} from \"reactstrap\";\r\nimport {saveNeedAction} from \"../../actions/needAction\";\r\nimport Header from \"../../components/dashboard/Header\";\r\nimport Menu from \"../../components/dashboard/Menu\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faArrowLeft, faSave} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Footer from \"../../components/dashboard/Footer\";\r\n\r\nconst ReasonForm = ({saveNeedAction, saveNeedType, error, isLoading}) => {\r\n    const {id} = useParams()\r\n    const [redirect] = useState(false)\r\n\r\n    const [data, setData] = useState({})\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (saveNeedType) {\r\n            history.push('/need')\r\n        }\r\n    }, [saveNeedType, history])\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setData({...data, [name]: value})\r\n\r\n        console.log(\"handlechange\", data)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        saveNeedAction(data)\r\n\r\n        console.log(\"handlesubmit\", data)\r\n    }\r\n\r\n    if (redirect === true) {\r\n        return <Redirect to=\"/need\"/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Header/>\r\n                <Menu/>\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"content-header\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <h1 className=\"m-0 text-dark\">Need Type</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-body table-responsive p-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"form form-container\">\r\n                                                    {!isLoading ?\r\n                                                        <Form onSubmit={handleSubmit}>\r\n                                                            <FormGroup row>\r\n                                                                <Label htmlFor=\"type\" sm={3} style={{textAlign:\"left\"}}>Need\r\n                                                                    Type</Label>\r\n                                                                <Col sm={9}>\r\n                                                                    <Input\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        value={data?.type || ''}\r\n                                                                        type=\"text\"\r\n                                                                        name=\"type\"\r\n                                                                        placeholder=\"input need type\"/>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup check row>\r\n                                                                <Col sm={{size: 10, offset: 2}}>\r\n                                                                    <Button style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon icon={faSave}/>\r\n                                                                        Submit\r\n                                                                    </Button> {' '}\r\n                                                                    <Button href=\"/need\"\r\n                                                                            style={{background: \"#e42256\"}}>\r\n                                                                        <FontAwesomeIcon\r\n                                                                            icon={faArrowLeft}/>\r\n                                                                        Cancel\r\n                                                                    </Button>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n\r\n                                                        </Form> :\r\n                                                        <div>Loading...</div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        saveNeedType: state.saveNeedReducer.data,\r\n        error: state.saveNeedReducer.err,\r\n        isLoading: state.saveNeedReducer.isLoading\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {saveNeedAction}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReasonForm)",{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"458","severity":1,"message":"459","line":5,"column":8,"nodeType":"460","messageId":"461","endLine":5,"endColumn":18},{"ruleId":"458","severity":1,"message":"462","line":10,"column":8,"nodeType":"460","messageId":"461","endLine":10,"endColumn":22},{"ruleId":"458","severity":1,"message":"463","line":15,"column":8,"nodeType":"460","messageId":"461","endLine":15,"endColumn":20},{"ruleId":"464","severity":1,"message":"465","line":65,"column":8,"nodeType":"466","endLine":65,"endColumn":26,"suggestions":"467"},{"ruleId":"464","severity":1,"message":"468","line":49,"column":8,"nodeType":"466","endLine":49,"endColumn":30,"suggestions":"469"},{"ruleId":"464","severity":1,"message":"468","line":55,"column":8,"nodeType":"466","endLine":55,"endColumn":19,"suggestions":"470"},{"ruleId":"471","severity":1,"message":"472","line":61,"column":47,"nodeType":"473","messageId":"474","endLine":61,"endColumn":49},{"ruleId":"458","severity":1,"message":"475","line":6,"column":5,"nodeType":"460","messageId":"461","endLine":6,"endColumn":10},{"ruleId":"458","severity":1,"message":"476","line":6,"column":12,"nodeType":"460","messageId":"461","endLine":6,"endColumn":20},{"ruleId":"458","severity":1,"message":"477","line":12,"column":42,"nodeType":"460","messageId":"461","endLine":12,"endColumn":51},{"ruleId":"458","severity":1,"message":"478","line":24,"column":12,"nodeType":"460","messageId":"461","endLine":24,"endColumn":17},{"ruleId":"458","severity":1,"message":"479","line":24,"column":19,"nodeType":"460","messageId":"461","endLine":24,"endColumn":27},{"ruleId":"464","severity":1,"message":"480","line":44,"column":8,"nodeType":"466","endLine":44,"endColumn":15,"suggestions":"481"},{"ruleId":"458","severity":1,"message":"482","line":64,"column":15,"nodeType":"460","messageId":"461","endLine":64,"endColumn":23},{"ruleId":"471","severity":1,"message":"472","line":103,"column":47,"nodeType":"473","messageId":"474","endLine":103,"endColumn":49},{"ruleId":"458","severity":1,"message":"483","line":6,"column":8,"nodeType":"460","messageId":"461","endLine":6,"endColumn":20},{"ruleId":"471","severity":1,"message":"472","line":18,"column":51,"nodeType":"473","messageId":"474","endLine":18,"endColumn":53},{"ruleId":"484","severity":1,"message":"485","line":35,"column":45,"nodeType":"486","endLine":36,"endColumn":80},{"ruleId":"458","severity":1,"message":"487","line":2,"column":9,"nodeType":"460","messageId":"461","endLine":2,"endColumn":34},{"ruleId":"458","severity":1,"message":"488","line":4,"column":32,"nodeType":"460","messageId":"461","endLine":4,"endColumn":40},{"ruleId":"458","severity":1,"message":"489","line":12,"column":8,"nodeType":"460","messageId":"461","endLine":12,"endColumn":14},{"ruleId":"464","severity":1,"message":"490","line":61,"column":8,"nodeType":"466","endLine":61,"endColumn":21,"suggestions":"491"},{"ruleId":"471","severity":1,"message":"472","line":72,"column":47,"nodeType":"473","messageId":"474","endLine":72,"endColumn":49},{"ruleId":"471","severity":1,"message":"472","line":72,"column":93,"nodeType":"473","messageId":"474","endLine":72,"endColumn":95},{"ruleId":"458","severity":1,"message":"492","line":3,"column":9,"nodeType":"460","messageId":"461","endLine":3,"endColumn":14},{"ruleId":"458","severity":1,"message":"493","line":3,"column":16,"nodeType":"460","messageId":"461","endLine":3,"endColumn":27},{"ruleId":"458","severity":1,"message":"494","line":6,"column":9,"nodeType":"460","messageId":"461","endLine":6,"endColumn":15},{"ruleId":"458","severity":1,"message":"495","line":7,"column":9,"nodeType":"460","messageId":"461","endLine":7,"endColumn":12},{"ruleId":"458","severity":1,"message":"496","line":8,"column":9,"nodeType":"460","messageId":"461","endLine":8,"endColumn":14},{"ruleId":"458","severity":1,"message":"497","line":9,"column":9,"nodeType":"460","messageId":"461","endLine":9,"endColumn":18},{"ruleId":"458","severity":1,"message":"498","line":10,"column":9,"nodeType":"460","messageId":"461","endLine":10,"endColumn":13},{"ruleId":"458","severity":1,"message":"499","line":11,"column":9,"nodeType":"460","messageId":"461","endLine":11,"endColumn":18},{"ruleId":"458","severity":1,"message":"500","line":12,"column":9,"nodeType":"460","messageId":"461","endLine":12,"endColumn":20},{"ruleId":"458","severity":1,"message":"501","line":13,"column":9,"nodeType":"460","messageId":"461","endLine":13,"endColumn":14},{"ruleId":"458","severity":1,"message":"477","line":14,"column":8,"nodeType":"460","messageId":"461","endLine":14,"endColumn":17},{"ruleId":"458","severity":1,"message":"502","line":17,"column":8,"nodeType":"460","messageId":"461","endLine":17,"endColumn":20},{"ruleId":"458","severity":1,"message":"503","line":19,"column":9,"nodeType":"460","messageId":"461","endLine":19,"endColumn":20},{"ruleId":"458","severity":1,"message":"504","line":19,"column":57,"nodeType":"460","messageId":"461","endLine":19,"endColumn":63},{"ruleId":"458","severity":1,"message":"505","line":20,"column":8,"nodeType":"460","messageId":"461","endLine":20,"endColumn":11},{"ruleId":"458","severity":1,"message":"506","line":21,"column":8,"nodeType":"460","messageId":"461","endLine":21,"endColumn":10},{"ruleId":"458","severity":1,"message":"507","line":26,"column":12,"nodeType":"460","messageId":"461","endLine":26,"endColumn":16},{"ruleId":"458","severity":1,"message":"508","line":26,"column":18,"nodeType":"460","messageId":"461","endLine":26,"endColumn":25},{"ruleId":"464","severity":1,"message":"490","line":31,"column":8,"nodeType":"466","endLine":31,"endColumn":32,"suggestions":"509"},{"ruleId":"464","severity":1,"message":"490","line":36,"column":8,"nodeType":"466","endLine":36,"endColumn":32,"suggestions":"510"},{"ruleId":"471","severity":1,"message":"472","line":97,"column":88,"nodeType":"473","messageId":"474","endLine":97,"endColumn":90},{"ruleId":"511","severity":1,"message":"512","line":112,"column":81,"nodeType":"486","endLine":112,"endColumn":122},{"ruleId":"511","severity":1,"message":"512","line":116,"column":81,"nodeType":"486","endLine":116,"endColumn":127},{"ruleId":"458","severity":1,"message":"513","line":7,"column":8,"nodeType":"460","messageId":"461","endLine":7,"endColumn":14},{"ruleId":"464","severity":1,"message":"514","line":21,"column":25,"nodeType":"466","endLine":21,"endColumn":46,"suggestions":"515"},{"ruleId":"471","severity":1,"message":"472","line":26,"column":47,"nodeType":"473","messageId":"474","endLine":26,"endColumn":49},{"ruleId":"471","severity":1,"message":"472","line":26,"column":92,"nodeType":"473","messageId":"474","endLine":26,"endColumn":94},{"ruleId":"516","severity":1,"message":"517","line":49,"column":61,"nodeType":"486","endLine":49,"endColumn":105},{"ruleId":"458","severity":1,"message":"518","line":9,"column":12,"nodeType":"460","messageId":"461","endLine":9,"endColumn":14},{"ruleId":"458","severity":1,"message":"507","line":10,"column":12,"nodeType":"460","messageId":"461","endLine":10,"endColumn":16},{"ruleId":"458","severity":1,"message":"508","line":10,"column":18,"nodeType":"460","messageId":"461","endLine":10,"endColumn":25},{"ruleId":"471","severity":1,"message":"472","line":19,"column":47,"nodeType":"473","messageId":"474","endLine":19,"endColumn":49},{"ruleId":"516","severity":1,"message":"517","line":39,"column":61,"nodeType":"486","endLine":39,"endColumn":105},{"ruleId":"458","severity":1,"message":"519","line":1,"column":27,"nodeType":"460","messageId":"461","endLine":1,"endColumn":35},{"ruleId":"458","severity":1,"message":"488","line":2,"column":9,"nodeType":"460","messageId":"461","endLine":2,"endColumn":17},{"ruleId":"458","severity":1,"message":"520","line":2,"column":19,"nodeType":"460","messageId":"461","endLine":2,"endColumn":29},{"ruleId":"458","severity":1,"message":"521","line":2,"column":31,"nodeType":"460","messageId":"461","endLine":2,"endColumn":40},{"ruleId":"458","severity":1,"message":"522","line":3,"column":9,"nodeType":"460","messageId":"461","endLine":3,"endColumn":24},{"ruleId":"458","severity":1,"message":"523","line":4,"column":9,"nodeType":"460","messageId":"461","endLine":4,"endColumn":15},{"ruleId":"458","severity":1,"message":"477","line":5,"column":9,"nodeType":"460","messageId":"461","endLine":5,"endColumn":18},{"ruleId":"458","severity":1,"message":"494","line":5,"column":20,"nodeType":"460","messageId":"461","endLine":5,"endColumn":26},{"ruleId":"458","severity":1,"message":"498","line":5,"column":28,"nodeType":"460","messageId":"461","endLine":5,"endColumn":32},{"ruleId":"458","severity":1,"message":"524","line":11,"column":8,"nodeType":"460","messageId":"461","endLine":11,"endColumn":22},{"ruleId":"458","severity":1,"message":"513","line":12,"column":8,"nodeType":"460","messageId":"461","endLine":12,"endColumn":14},{"ruleId":"458","severity":1,"message":"525","line":6,"column":27,"nodeType":"460","messageId":"461","endLine":6,"endColumn":33},{"ruleId":"458","severity":1,"message":"526","line":6,"column":35,"nodeType":"460","messageId":"461","endLine":6,"endColumn":40},{"ruleId":"458","severity":1,"message":"527","line":6,"column":42,"nodeType":"460","messageId":"461","endLine":6,"endColumn":48},{"ruleId":"458","severity":1,"message":"528","line":7,"column":8,"nodeType":"460","messageId":"461","endLine":7,"endColumn":20},{"ruleId":"458","severity":1,"message":"529","line":8,"column":8,"nodeType":"460","messageId":"461","endLine":8,"endColumn":23},{"ruleId":"458","severity":1,"message":"494","line":2,"column":9,"nodeType":"460","messageId":"461","endLine":2,"endColumn":15},{"ruleId":"458","severity":1,"message":"522","line":3,"column":9,"nodeType":"460","messageId":"461","endLine":3,"endColumn":24},{"ruleId":"458","severity":1,"message":"530","line":4,"column":9,"nodeType":"460","messageId":"461","endLine":4,"endColumn":20},{"ruleId":"458","severity":1,"message":"531","line":4,"column":22,"nodeType":"460","messageId":"461","endLine":4,"endColumn":29},{"ruleId":"516","severity":1,"message":"532","line":22,"column":17,"nodeType":"486","endLine":22,"endColumn":63},{"ruleId":"458","severity":1,"message":"533","line":2,"column":9,"nodeType":"460","messageId":"461","endLine":2,"endColumn":22},{"ruleId":"458","severity":1,"message":"534","line":2,"column":24,"nodeType":"460","messageId":"461","endLine":2,"endColumn":31},{"ruleId":"458","severity":1,"message":"522","line":3,"column":9,"nodeType":"460","messageId":"461","endLine":3,"endColumn":24},{"ruleId":"516","severity":1,"message":"532","line":9,"column":9,"nodeType":"486","endLine":9,"endColumn":35},{"ruleId":"516","severity":1,"message":"517","line":30,"column":15,"nodeType":"486","endLine":30,"endColumn":47},{"ruleId":"471","severity":1,"message":"472","line":37,"column":44,"nodeType":"473","messageId":"474","endLine":37,"endColumn":46},{"ruleId":"471","severity":1,"message":"472","line":86,"column":44,"nodeType":"473","messageId":"474","endLine":86,"endColumn":46},{"ruleId":"471","severity":1,"message":"472","line":128,"column":44,"nodeType":"473","messageId":"474","endLine":128,"endColumn":46},{"ruleId":"458","severity":1,"message":"534","line":3,"column":57,"nodeType":"460","messageId":"461","endLine":3,"endColumn":64},{"ruleId":"458","severity":1,"message":"535","line":8,"column":9,"nodeType":"460","messageId":"461","endLine":8,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":22,"column":11,"nodeType":"486","endLine":22,"endColumn":81},{"ruleId":"471","severity":1,"message":"472","line":35,"column":40,"nodeType":"473","messageId":"474","endLine":35,"endColumn":42},{"ruleId":"458","severity":1,"message":"536","line":17,"column":11,"nodeType":"460","messageId":"461","endLine":17,"endColumn":17},{"ruleId":"458","severity":1,"message":"537","line":19,"column":11,"nodeType":"460","messageId":"461","endLine":19,"endColumn":24},{"ruleId":"458","severity":1,"message":"538","line":82,"column":11,"nodeType":"460","messageId":"461","endLine":82,"endColumn":34},{"ruleId":"458","severity":1,"message":"539","line":9,"column":43,"nodeType":"460","messageId":"461","endLine":9,"endColumn":58},{"ruleId":"458","severity":1,"message":"513","line":11,"column":8,"nodeType":"460","messageId":"461","endLine":11,"endColumn":14},{"ruleId":"458","severity":1,"message":"540","line":14,"column":8,"nodeType":"460","messageId":"461","endLine":14,"endColumn":12},{"ruleId":"458","severity":1,"message":"478","line":18,"column":12,"nodeType":"460","messageId":"461","endLine":18,"endColumn":17},{"ruleId":"458","severity":1,"message":"479","line":18,"column":19,"nodeType":"460","messageId":"461","endLine":18,"endColumn":27},{"ruleId":"464","severity":1,"message":"541","line":43,"column":8,"nodeType":"466","endLine":43,"endColumn":18,"suggestions":"542"},{"ruleId":"458","severity":1,"message":"482","line":61,"column":15,"nodeType":"460","messageId":"461","endLine":61,"endColumn":23},{"ruleId":"458","severity":1,"message":"543","line":74,"column":11,"nodeType":"460","messageId":"461","endLine":74,"endColumn":24},{"ruleId":"458","severity":1,"message":"482","line":79,"column":15,"nodeType":"460","messageId":"461","endLine":79,"endColumn":23},{"ruleId":"458","severity":1,"message":"544","line":93,"column":11,"nodeType":"460","messageId":"461","endLine":93,"endColumn":29},{"ruleId":"458","severity":1,"message":"482","line":98,"column":15,"nodeType":"460","messageId":"461","endLine":98,"endColumn":23},{"ruleId":"545","severity":1,"message":"546","line":114,"column":12,"nodeType":"547","messageId":"548","endLine":114,"endColumn":29},{"ruleId":"471","severity":1,"message":"472","line":150,"column":47,"nodeType":"473","messageId":"474","endLine":150,"endColumn":49},{"ruleId":"471","severity":1,"message":"472","line":150,"column":92,"nodeType":"473","messageId":"474","endLine":150,"endColumn":94},{"ruleId":"471","severity":1,"message":"472","line":252,"column":92,"nodeType":"473","messageId":"474","endLine":252,"endColumn":94},{"ruleId":"549","severity":1,"message":"550","line":335,"column":31,"nodeType":"551","endLine":336,"endColumn":24},{"ruleId":"458","severity":1,"message":"513","line":5,"column":8,"nodeType":"460","messageId":"461","endLine":5,"endColumn":14},{"ruleId":"458","severity":1,"message":"502","line":10,"column":8,"nodeType":"460","messageId":"461","endLine":10,"endColumn":20},{"ruleId":"458","severity":1,"message":"552","line":16,"column":8,"nodeType":"460","messageId":"461","endLine":16,"endColumn":17},{"ruleId":"458","severity":1,"message":"553","line":35,"column":11,"nodeType":"460","messageId":"461","endLine":35,"endColumn":25},{"ruleId":"458","severity":1,"message":"554","line":42,"column":11,"nodeType":"460","messageId":"461","endLine":42,"endColumn":21},{"ruleId":"464","severity":1,"message":"555","line":58,"column":8,"nodeType":"466","endLine":58,"endColumn":10,"suggestions":"556"},{"ruleId":"471","severity":1,"message":"472","line":101,"column":43,"nodeType":"473","messageId":"474","endLine":101,"endColumn":45},{"ruleId":"471","severity":1,"message":"472","line":101,"column":88,"nodeType":"473","messageId":"474","endLine":101,"endColumn":90},{"ruleId":"557","severity":1,"message":"558","line":210,"column":87,"nodeType":"559","endLine":210,"endColumn":94},{"ruleId":"471","severity":1,"message":"472","line":223,"column":126,"nodeType":"473","messageId":"474","endLine":223,"endColumn":128},{"ruleId":"560","severity":1,"message":"561","line":317,"column":5,"nodeType":"562","messageId":"563","endLine":317,"endColumn":60},{"ruleId":"458","severity":1,"message":"494","line":1,"column":9,"nodeType":"460","messageId":"461","endLine":1,"endColumn":15},{"ruleId":"458","severity":1,"message":"477","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":26},{"ruleId":"458","severity":1,"message":"564","line":1,"column":28,"nodeType":"460","messageId":"461","endLine":1,"endColumn":33},{"ruleId":"458","severity":1,"message":"513","line":9,"column":8,"nodeType":"460","messageId":"461","endLine":9,"endColumn":14},{"ruleId":"471","severity":1,"message":"472","line":28,"column":47,"nodeType":"473","messageId":"474","endLine":28,"endColumn":49},{"ruleId":"471","severity":1,"message":"472","line":28,"column":92,"nodeType":"473","messageId":"474","endLine":28,"endColumn":94},{"ruleId":"458","severity":1,"message":"565","line":4,"column":9,"nodeType":"460","messageId":"461","endLine":4,"endColumn":22},{"ruleId":"458","severity":1,"message":"566","line":4,"column":24,"nodeType":"460","messageId":"461","endLine":4,"endColumn":36},{"ruleId":"458","severity":1,"message":"530","line":4,"column":38,"nodeType":"460","messageId":"461","endLine":4,"endColumn":49},{"ruleId":"458","severity":1,"message":"531","line":4,"column":69,"nodeType":"460","messageId":"461","endLine":4,"endColumn":76},{"ruleId":"458","severity":1,"message":"494","line":2,"column":9,"nodeType":"460","messageId":"461","endLine":2,"endColumn":15},{"ruleId":"458","severity":1,"message":"567","line":3,"column":8,"nodeType":"460","messageId":"461","endLine":3,"endColumn":18},{"ruleId":"458","severity":1,"message":"568","line":2,"column":9,"nodeType":"460","messageId":"461","endLine":2,"endColumn":13},{"ruleId":"458","severity":1,"message":"504","line":5,"column":49,"nodeType":"460","messageId":"461","endLine":5,"endColumn":55},{"ruleId":"458","severity":1,"message":"531","line":5,"column":57,"nodeType":"460","messageId":"461","endLine":5,"endColumn":64},{"ruleId":"458","severity":1,"message":"462","line":6,"column":8,"nodeType":"460","messageId":"461","endLine":6,"endColumn":22},{"ruleId":"471","severity":1,"message":"472","line":29,"column":47,"nodeType":"473","messageId":"474","endLine":29,"endColumn":49},{"ruleId":"458","severity":1,"message":"569","line":2,"column":5,"nodeType":"460","messageId":"461","endLine":2,"endColumn":24},{"ruleId":"458","severity":1,"message":"570","line":5,"column":32,"nodeType":"460","messageId":"461","endLine":5,"endColumn":53},{"ruleId":"458","severity":1,"message":"571","line":5,"column":55,"nodeType":"460","messageId":"461","endLine":5,"endColumn":84},{"ruleId":"458","severity":1,"message":"572","line":5,"column":86,"nodeType":"460","messageId":"461","endLine":5,"endColumn":115},{"ruleId":"458","severity":1,"message":"573","line":8,"column":28,"nodeType":"460","messageId":"461","endLine":8,"endColumn":43},{"ruleId":"458","severity":1,"message":"569","line":2,"column":5,"nodeType":"460","messageId":"461","endLine":2,"endColumn":24},{"ruleId":"458","severity":1,"message":"574","line":2,"column":26,"nodeType":"460","messageId":"461","endLine":2,"endColumn":53},{"ruleId":"458","severity":1,"message":"575","line":2,"column":55,"nodeType":"460","messageId":"461","endLine":2,"endColumn":82},{"ruleId":"458","severity":1,"message":"570","line":5,"column":32,"nodeType":"460","messageId":"461","endLine":5,"endColumn":53},{"ruleId":"458","severity":1,"message":"572","line":5,"column":55,"nodeType":"460","messageId":"461","endLine":5,"endColumn":84},{"ruleId":"458","severity":1,"message":"573","line":8,"column":28,"nodeType":"460","messageId":"461","endLine":8,"endColumn":43},{"ruleId":"458","severity":1,"message":"576","line":8,"column":45,"nodeType":"460","messageId":"461","endLine":8,"endColumn":68},{"ruleId":"458","severity":1,"message":"518","line":14,"column":12,"nodeType":"460","messageId":"461","endLine":14,"endColumn":14},"no-native-reassign",["577"],"no-negated-in-lhs",["578"],"no-unused-vars","'HomeMaster' is defined but never used.","Identifier","unusedVar","'DetailCustomer' is defined but never used.","'ReportDetail' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["579"],"React Hook useEffect has a missing dependency: 'onReload'. Either include it or remove the dependency array.",["580"],["581"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'faKey' is defined but never used.","'faServer' is defined but never used.","'Container' is defined but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id' and 'id'. Either include them or remove the dependency array.",["582"],"'response' is assigned a value but never used.","'HeaderMaster' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'findByIdTransactionAction' is defined but never used.","'Redirect' is defined but never used.","'Footer' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["583"],"'Input' is defined but never used.","'ModalFooter' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'Modal' is defined but never used.","'DropdownList' is defined but never used.","'faArrowLeft' is defined but never used.","'faSave' is defined but never used.","'man' is defined but never used.","'id' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["584"],["585"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'SignIn' is defined but never used.","React Hook useEffect has a missing dependency: 'reports'. Either include it or remove the dependency array.",["586"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'id' is assigned a value but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPlus' is defined but never used.","'TransactionRow' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ListCustomer' is defined but never used.","'TransactionList' is defined but never used.","'faPencilAlt' is defined but never used.","'faTrash' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'faCheckDouble' is defined but never used.","'faUsers' is defined but never used.","'history' is assigned a value but never used.","'toggle' is assigned a value but never used.","'handleOnclick' is assigned a value but never used.","'findCustomerByStaffSaga' is defined but never used.","'UPDATE_CUSTOMER' is defined but never used.","'swal' is defined but never used.","React Hook useEffect has missing dependencies: 'data.id', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["587"],"'uploadIdPhoto' is assigned a value but never used.","'uploadProfilePhoto' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'ReasonRow' is defined but never used.","'handleCustomer' is assigned a value but never used.","'handleNeed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findCustomerByIdAction', and 'id'. Either include them or remove the dependency array. If 'findCustomerByIdAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["588"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Table' is defined but never used.","'faCheckCircle' is defined but never used.","'faInfoCircle' is defined but never used.","'Containers' is defined but never used.","'Link' is defined but never used.","'FIND_NEEDTYPE_BY_ID' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID_FAILURE' is defined but never used.","'REMOVE_NEEDTYPE_BY_ID_SUCCESS' is defined but never used.","'UPDATE_NEEDTYPE' is defined but never used.","'FIND_NEEDTYPE_BY_ID_FAILURE' is defined but never used.","'FIND_NEEDTYPE_BY_ID_SUCCESS' is defined but never used.","'UPDATE_NEEDTYPE_SUCCESS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"599","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},"Update the dependencies array to be: [loginData, error, history]",{"range":"608","text":"609"},"Update the dependencies array to be: [findAllAccountAction, onReload]",{"range":"610","text":"611"},"Update the dependencies array to be: [isRemoved, onReload]",{"range":"612","text":"613"},"Update the dependencies array to be: [data.id, id, users]",{"range":"614","text":"615"},"Update the dependencies array to be: [id, transaction]",{"range":"616","text":"617"},"Update the dependencies array to be: [findCustomerByIdAction, id]",{"range":"618","text":"619"},{"range":"620","text":"619"},"Update the dependencies array to be: [findAllReportAction, reports]",{"range":"621","text":"622"},"Update the dependencies array to be: [customer, data.id, findCustomerByIdAction, id]",{"range":"623","text":"624"},"Update the dependencies array to be: [data, findCustomerByIdAction, id]",{"range":"625","text":"626"},[2231,2249],"[loginData, error, history]",[1526,1548],"[findAllAccountAction, onReload]",[1643,1654],"[isRemoved, onReload]",[1491,1498],"[data.id, id, users]",[1855,1868],"[id, transaction]",[1301,1325],"[findCustomerByIdAction, id]",[1421,1445],[747,768],"[findAllReportAction, reports]",[1675,1685],"[customer, data.id, findCustomerByIdAction, id]",[2085,2087],"[data, findCustomerByIdAction, id]"]